{"version":3,"sources":["./src/app/ressources/global-variables/brush-pattern-names.ts","./src/app/ressources/texts/feature.ts","./src/app/services/tools/circle.service.ts","./src/app/components/tools/magic-wand-attributes/magic-wand-attributes.component.ts","./src/app/components/tools/magic-wand-attributes/magic-wand-attributes.component.html","./src/app/services/tools/fill.service.ts","./src/app/services/undo-redo/undo-redo.service.ts","./src/app/services/tools/text.service.ts","./src/app/services/tools/pipette.service.ts","./src/app/services/color-selection/color-selection.service.ts","./src/app/ressources/global-variables/grid-elements.ts","./src/app/ressources/global-variables/rgba.ts","./src/app/ressources/global-variables/limit-angles.ts","./src/app/services/tools/selection-services/square-selection.service.ts","./src/app/services/tools/selection-services/circle-selection.service.ts","./src/app/ressources/global-variables/alignment-names.ts","./src/app/services/tools/line.service.ts","./src/app/services/tools/transformation-services/rotate.service.ts","../common/communication/drawing-data.ts","./src/environments/environment.ts","./src/app/services/new-drawing/new-drawing.service.ts","./src/app/ressources/global-variables/sidebar-element-tooltips.ts","./src/app/services/tools/selection-services/magnetism.service.ts","./src/app/components/color-picker/color-picker.component.ts","./src/app/components/color-picker/color-picker.component.html","./src/app/components/tools/shared-Attributes/slider/slider.component.ts","./src/app/components/tools/shared-Attributes/slider/slider.component.html","./src/app/components/tools/polygon-attributes/polygon-attributes.component.ts","./src/app/components/tools/polygon-attributes/polygon-attributes.component.html","./src/app/ressources/global-variables/fill-styles.ts","./src/app/ressources/global-variables/global-variables.ts","./src/app/services/resize-drawing/resize-drawing.service.ts","./src/app/components/tools/spray-attributes/spray-attributes.component.ts","./src/app/components/tools/spray-attributes/spray-attributes.component.html","./src/app/services/continue-drawing/continue-drawing.service.ts","./src/app/ressources/global-variables/sidebar-elements.ts","./src/app/components/new-drawing-modal/new-drawing-modal.component.ts","./src/app/components/new-drawing-modal/new-drawing-modal.component.html","./src/app/components/tools/pen-attributes/pen-attributes.component.ts","./src/app/components/tools/pen-attributes/pen-attributes.component.html","./src/app/services/tools/selection-services/magic-wand.service.ts","./src/app/services/tools/square.service.ts","./src/app/services/tools/spray.service.ts","./src/app/ressources/global-variables/filter.ts","./src/app/services/email/email.service.ts","./src/app/components/saving/saving.component.ts","./src/app/components/saving/saving.component.html","./src/app/components/tools/circle-selection-attributes/circle-selection-attributes.component.ts","./src/app/components/tools/circle-selection-attributes/circle-selection-attributes.component.html","./src/app/ressources/global-variables/canvas-resizing-points.ts","./src/app/services/tools/polygon.service.ts","./src/app/services/tools/eraser.service.ts","./src/app/services/tools/transformation-services/move.service.ts","./src/app/components/tools/text-attributes/text-attributes.component.ts","./src/app/components/tools/text-attributes/text-attributes.component.html","./src/app/components/tools/pipette-attributes/pipette-attributes.component.ts","./src/app/components/tools/pipette-attributes/pipette-attributes.component.html","./src/app/components/drawing/drawing.component.ts","./src/app/components/drawing/drawing.component.html","./src/app/components/app/app.component.ts","./src/app/components/app/app.component.html","./src/app/classes/tool.ts","./src/app/components/tools/shared-Attributes/fill-types-selection/fill-types-selection.component.ts","./src/app/components/tools/shared-Attributes/fill-types-selection/fill-types-selection.component.html","./src/app/components/attribute-panel/attribute-panel.component.ts","./src/app/components/attribute-panel/attribute-panel.component.html","./src/app/ressources/global-variables/tool-names.ts","./src/app/services/server-response/server-response.service.ts","./src/app/components/editor/editor.component.ts","./src/app/components/editor/editor.component.html","./src/app/app.module.ts","./src/app/components/tools/line-attributes/line-attributes.component.ts","./src/app/components/tools/line-attributes/line-attributes.component.html","./src/app/services/tools/pencil.service.ts","./src/app/services/tools/selection-services/selection.service.ts","./src/app/components/load-selected-drawing-alert/load-selected-drawing-alert.component.ts","./src/app/components/load-selected-drawing-alert/load-selected-drawing-alert.component.html","./src/app/services/database/database.service.ts","./src/app/services/tools/stamp.service.ts","./src/app/services/drawing/drawing.service.ts","./src/app/components/drawing-detail/drawing-detail.component.ts","./src/app/components/drawing-detail/drawing-detail.component.html","./src/app/services/hotkey/hotkey.service.ts","./src/app/components/tools/fill-attributes/fill-attributes.component.ts","./src/app/components/tools/fill-attributes/fill-attributes.component.html","./src/app/classes/stamps.ts","./src/app/components/tools/circle-attributes/circle-attributes.component.ts","./src/app/components/tools/circle-attributes/circle-attributes.component.html","./src/app/ressources/global-variables/text.ts","./src/app/services/undo-redo/undo-redo-stack.service.ts","./src/app/ressources/global-variables/arrow-keys.ts","./src/app/services/tools/brush.service.ts","./src/app/components/tools/square-selection-attributes/square-selection-attributes.component.ts","./src/app/components/tools/square-selection-attributes/square-selection-attributes.component.html","./src/app/services/tools/pen.service.ts","./src/app/components/export/export.component.ts","./src/app/components/export/export.component.html","./src/app/services/clipboard/clipboard.service.ts","./src/app/components/grid/grid.component.ts","./src/app/components/grid/grid.component.html","./src/app/components/tools/eraser-attributes/eraser-attributes.component.ts","./src/app/components/tools/eraser-attributes/eraser-attributes.component.html","./src/app/components/main-page/main-page.component.ts","./src/app/components/main-page/main-page.component.html","./src/app/components/tools/square-attributes/square-attributes.component.ts","./src/app/components/tools/square-attributes/square-attributes.component.html","./src/app/components/carousel/carousel.component.ts","./src/app/components/carousel/carousel.component.html","./src/app/components/tools/stamp-attributes/stamp-attributes.component.ts","./src/app/components/tools/stamp-attributes/stamp-attributes.component.html","./src/app/components/userguide/user-guide.component.ts","./src/app/components/userguide/user-guide.component.html","./src/app/components/general-detail/general-detail.component.ts","./src/app/components/general-detail/general-detail.component.html","./src/app/classes/math/trigonometry.ts","./src/app/components/tools/shared-Attributes/magnetism/magnetism.component.ts","./src/app/components/tools/shared-Attributes/magnetism/magnetism.component.html","./src/app/app-routing.module.ts","./src/app/components/tools/brush-attributes/brush-attributes.component.ts","./src/app/components/tools/brush-attributes/brush-attributes.component.html","./src/app/components/tools/pencil-attributes/pencil-attributes.component.ts","./src/app/components/tools/pencil-attributes/pencil-attributes.component.html","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/app/ressources/texts/tool-descriptions.ts","./src/app/services/tool-selection/tool-selection.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export interface PatternNames {\n    FIRST_PATTERN: string;\n    SECOND_PATTERN: string;\n    THIRD_PATTERN: string;\n    FOURTH_PATTERN: string;\n    FIFTH_PATTERN: string;\n}\n\nexport const PATTERN_NAMES: PatternNames = {\n    FIRST_PATTERN: 'pattern1',\n    SECOND_PATTERN: 'pattern2',\n    THIRD_PATTERN: 'pattern3',\n    FOURTH_PATTERN: 'pattern4',\n    FIFTH_PATTERN: 'pattern5',\n};\n","export interface Feature {\n    NAME: string;\n    DESCRIPTION: string;\n    PICTURE: string;\n}\n\nexport const GENERALS_FEATURE: Feature[] = [\n    {\n        NAME: 'Créer ou continuer un dessin',\n        DESCRIPTION:\n            \"Le bouton «Nouveau Dessin» permet d'effacer le dessin sur la surface de dessin et d'en créer un nouveau. S'il y a un dessin sur la surface de dessin, une fenêtre va apparaître pour s'assurer que vous voulez vraiment effacer le dessin présent sur la surface. \",\n        PICTURE: './../../../assets/img/nouveau-dessin.png',\n    },\n    {\n        NAME: 'Carrousel de dessin',\n        DESCRIPTION:\n            \"Le carrousel de dessin permet d'ouvrir un dessin déjà créé et sauvegardé sur le serveur. Les dessins sauvegardés sont sous la forme d'un carrousel. Il est possible de voir trois dessins en même temps. Il est possible d'entrer des étiquettes pour pouvoir filtrer les dessins. Il est possible de charger le dessin en cliquant dessus.\",\n        PICTURE: './../../../assets/img/carrousel.png',\n    },\n    {\n        NAME: 'Sauvegarde',\n        DESCRIPTION:\n            \"Cette fonctionnalité permet de sauvegarder le dessin sur le serveur en format PNG. Pour sauvegarder le dessin, il faut entrer un nom. Il est possible d'ajouter des étiquettes (max 5 étiquettes).\",\n        PICTURE: './../../../assets/img/sauvegarde.png',\n    },\n    {\n        NAME: 'Exportation',\n        DESCRIPTION:\n            \"Cette fonctionnalité permet d'exporter le dessin localement ou par courriel en format PNG ou JPG. Elle permet aussi d'appliquer un filtre sur l'image avant de l'exporter. Il faut nommer l'image pour pouvoir l'exporter \",\n        PICTURE: './../../../assets/img/exporter.png',\n    },\n    {\n        NAME: 'Sauvegarde automatique',\n        DESCRIPTION:\n            \"Cette fonctionnalité permet de sauvegarder le dessin automatiquement pendant son édition. La sauvegarde est déclenchée après la création d'un dessin, le chargement d'un dessin ou lors d'une modification sur la surface de dessin. Il est possible de récupérer le dessin avec le button Continuer un dessin\",\n        PICTURE: './../../../assets/img/continuer.png',\n    },\n];\n","import { Injectable } from '@angular/core';\nimport { Trigonometry } from '@app/classes/math/trigonometry';\nimport { SelectionBox } from '@app/classes/selection-box';\nimport { Tool } from '@app/classes/tool';\nimport { Ellipse } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { FILL_STYLES } from '@app/ressources/global-variables/fill-styles';\nimport { DASH_LENGTH, DASH_SPACE_LENGTH, MouseButton, Quadrant } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CircleService extends Tool {\n    name: string = TOOL_NAMES.CIRCLE_TOOL_NAME;\n    mouseDown: boolean = false;\n    ellipseHeight: number;\n    ellipseWidth: number;\n    ellipseData: Ellipse;\n    circleHeight: number;\n    circleWidth: number;\n    quadrant: number;\n    trigonometry: Trigonometry = new Trigonometry();\n\n    constructor(\n        drawingService: DrawingService,\n        public colorSelectionService: ColorSelectionService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n        this.ellipseData = {\n            type: 'ellipse',\n            primaryColor: this.colorSelectionService.primaryColor,\n            secondaryColor: this.colorSelectionService.secondaryColor,\n            center: { x: 0, y: 0 },\n            radius: { x: 0, y: 0 },\n            fillStyle: FILL_STYLES.FILL_AND_BORDER,\n            isShiftDown: false,\n            lineWidth: 1,\n            firstPoint: { x: 0, y: 0 },\n            lastPoint: { x: 0, y: 0 },\n        };\n    }\n\n    setIsShiftDown(isShiftDown: boolean): void {\n        this.ellipseData.isShiftDown = isShiftDown;\n    }\n\n    setFirstPoint(newPoint: Vec2): void {\n        this.ellipseData.firstPoint = newPoint;\n    }\n\n    setLastPoint(newPoint: Vec2): void {\n        this.ellipseData.lastPoint = newPoint;\n    }\n\n    setFillStyle(newFillStyle: number): void {\n        this.ellipseData.fillStyle = newFillStyle;\n    }\n\n    getFillStyle(): number {\n        return this.ellipseData.fillStyle;\n    }\n\n    initialize(): void {\n        this.mouseDown = false;\n    }\n\n    changeWidth(newWidth: number): void {\n        this.ellipseData.lineWidth = newWidth;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        if (event.key === 'Shift') {\n            this.ellipseData.isShiftDown = true;\n            if (this.mouseDown) {\n                this.drawingService.clearCanvas(this.drawingService.previewCtx);\n                this.drawShape(this.drawingService.previewCtx);\n            }\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent): void {\n        if (event.key === 'Shift' && this.ellipseData.isShiftDown) {\n            this.ellipseData.isShiftDown = false;\n            if (this.mouseDown) {\n                this.drawingService.clearCanvas(this.drawingService.previewCtx);\n                this.drawShape(this.drawingService.previewCtx);\n            }\n        }\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n        this.mouseDown = event.button === MouseButton.LEFT;\n        if (this.mouseDown) {\n            this.ellipseData.firstPoint = this.getPositionFromMouse(event);\n            this.ellipseData.lastPoint = this.getPositionFromMouse(event);\n            this.undoRedoStackService.setIsToolInUse(true);\n        }\n    }\n\n    onMouseUp(event: MouseEvent): void {\n        if (this.mouseDown) {\n            this.ellipseData.lastPoint = this.getPositionFromMouse(event);\n            this.drawShape(this.drawingService.baseCtx);\n            this.mouseDown = false;\n            this.undoRedoStackService.setIsToolInUse(false);\n        }\n        this.drawingService.autoSave();\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        if (this.mouseDown) {\n            this.ellipseData.lastPoint = this.getPositionFromMouse(event);\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.drawShape(this.drawingService.previewCtx);\n        }\n    }\n\n    drawShape(ctx: CanvasRenderingContext2D): SelectionBox {\n        const topLeftPoint = this.trigonometry.findTopLeftPointCircle(this.ellipseData.firstPoint, this.ellipseData.lastPoint);\n        ctx.fillStyle = this.colorSelectionService.primaryColor;\n        ctx.strokeStyle = this.colorSelectionService.secondaryColor;\n        ctx.lineWidth = this.ellipseData.lineWidth;\n        ctx.setLineDash([0]);\n\n        if (this.ellipseData.fillStyle === FILL_STYLES.FILL) {\n            ctx.strokeStyle = this.colorSelectionService.primaryColor;\n            ctx.lineWidth = 1;\n        }\n\n        this.setEllipseHeight();\n        this.setEllipseWidth();\n        this.ellipseData.radius = { x: this.ellipseWidth / 2, y: this.ellipseHeight / 2 };\n        this.ellipseData.center = { x: topLeftPoint.x + this.ellipseData.radius.x, y: topLeftPoint.y + this.ellipseData.radius.y };\n\n        if (this.ellipseData.isShiftDown) {\n            this.drawCircle(ctx, topLeftPoint);\n        } else {\n            this.updateEllipseDataColor();\n            this.drawEllipse(ctx, this.ellipseData);\n        }\n\n        if (ctx === this.drawingService.previewCtx) {\n            ctx.beginPath();\n            ctx.strokeStyle = 'black';\n            ctx.lineWidth = 1;\n            ctx.setLineDash([DASH_LENGTH, DASH_SPACE_LENGTH]);\n            ctx.rect(topLeftPoint.x, topLeftPoint.y, this.ellipseWidth, this.ellipseHeight);\n            ctx.stroke();\n            ctx.lineWidth = this.ellipseData.lineWidth;\n        } else {\n            this.undoRedoStackService.updateStack(this.ellipseData);\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.drawingService.previewCtx.setLineDash([0]);\n        }\n\n        topLeftPoint.x = this.ellipseData.center.x - this.ellipseData.radius.x;\n        topLeftPoint.y = this.ellipseData.center.y - this.ellipseData.radius.y;\n        return { startingPoint: topLeftPoint, width: this.ellipseData.radius.x * 2, height: this.ellipseData.radius.y * 2 };\n    }\n\n    drawEllipse(ctx: CanvasRenderingContext2D, ellipse: Ellipse): void {\n        ctx.fillStyle = ellipse.primaryColor;\n        ctx.strokeStyle = ellipse.secondaryColor;\n        ctx.lineWidth = ellipse.lineWidth;\n\n        if (ellipse.fillStyle === FILL_STYLES.FILL) {\n            ctx.strokeStyle = ellipse.primaryColor;\n            ctx.lineWidth = 1;\n        }\n\n        ctx.beginPath();\n        if (ellipse.radius.x > ctx.lineWidth / 2 && ellipse.radius.y > ctx.lineWidth / 2) {\n            ellipse.radius.x -= ctx.lineWidth / 2;\n            ellipse.radius.y -= ctx.lineWidth / 2;\n            ctx.ellipse(ellipse.center.x, ellipse.center.y, ellipse.radius.x, ellipse.radius.y, 0, 0, Math.PI * 2, false);\n            if (ellipse.fillStyle !== FILL_STYLES.BORDER && ellipse.fillStyle !== FILL_STYLES.DASHED) {\n                ctx.fill();\n            }\n        }\n\n        ctx.stroke();\n    }\n\n    drawCircle(ctx: CanvasRenderingContext2D, point: Vec2): void {\n        this.setCircleHeight();\n        this.setCircleWidth();\n        this.quadrant = this.trigonometry.findQuadrant(this.ellipseData.firstPoint, this.ellipseData.lastPoint);\n        const ellipseRadiusX = this.circleWidth / 2;\n        const ellipseRadiusY = this.circleHeight / 2;\n        let circleRadius = Math.min(ellipseRadiusX, ellipseRadiusY);\n        let ellipseCenterX = point.x + circleRadius;\n        let ellipseCenterY = point.y + circleRadius;\n        switch (this.quadrant) {\n            case Quadrant.BOTTOM_LEFT:\n                ellipseCenterX = this.ellipseData.firstPoint.x - circleRadius;\n                ellipseCenterY = this.ellipseData.firstPoint.y + circleRadius;\n                break;\n            case Quadrant.TOP_LEFT:\n                ellipseCenterX = this.ellipseData.firstPoint.x - circleRadius;\n                ellipseCenterY = this.ellipseData.firstPoint.y - circleRadius;\n                break;\n            case Quadrant.BOTTOM_RIGHT:\n                ellipseCenterX = this.ellipseData.firstPoint.x + circleRadius;\n                ellipseCenterY = this.ellipseData.firstPoint.y + circleRadius;\n                break;\n            case Quadrant.TOP_RIGHT:\n                ellipseCenterX = this.ellipseData.firstPoint.x + circleRadius;\n                ellipseCenterY = this.ellipseData.firstPoint.y - circleRadius;\n                break;\n        }\n        ctx.beginPath();\n        if (circleRadius > ctx.lineWidth / 2) {\n            circleRadius -= ctx.lineWidth / 2;\n            ctx.arc(ellipseCenterX, ellipseCenterY, circleRadius, 0, Math.PI * 2, false);\n            if (this.ellipseData.fillStyle !== FILL_STYLES.BORDER && this.ellipseData.fillStyle !== FILL_STYLES.DASHED) {\n                ctx.fill();\n            }\n        }\n\n        ctx.stroke();\n\n        this.ellipseData.radius = { x: circleRadius, y: circleRadius };\n        this.ellipseData.center = { x: ellipseCenterX, y: ellipseCenterY };\n        this.updateEllipseDataColor();\n    }\n\n    setEllipseWidth(): void {\n        this.ellipseWidth = Math.abs(this.ellipseData.firstPoint.x - this.ellipseData.lastPoint.x);\n    }\n\n    setEllipseHeight(): void {\n        this.ellipseHeight = Math.abs(this.ellipseData.firstPoint.y - this.ellipseData.lastPoint.y);\n    }\n\n    private updateEllipseDataColor(): void {\n        this.ellipseData.primaryColor = this.colorSelectionService.primaryColor;\n        this.ellipseData.secondaryColor = this.colorSelectionService.secondaryColor;\n    }\n\n    setCircleWidth(): void {\n        this.circleWidth = Math.abs(this.ellipseData.firstPoint.x - this.ellipseData.lastPoint.x);\n    }\n\n    setCircleHeight(): void {\n        this.circleHeight = Math.abs(this.ellipseData.firstPoint.y - this.ellipseData.lastPoint.y);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MagicWandService } from '@app/services/tools/selection-services/magic-wand.service';\n\n@Component({\n    selector: 'app-magic-wand-attributes',\n    templateUrl: './magic-wand-attributes.component.html',\n    styleUrls: ['./magic-wand-attributes.component.scss'],\n})\nexport class MagicWandAttributesComponent {\n    constructor(public magicWandService: MagicWandService) {}\n}\n","<div id=\"magicWand\">\n    <h2 class=\"toolName\">{{ magicWandService.name }}</h2>\n    <hr />\n    <app-magnetism [service]=\"magicWandService\"></app-magnetism>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Tool } from '@app/classes/tool';\nimport { Fill } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { MAX_PERCENTAGE, MAX_TOLERANCE_VALUE, MIN_TOLERANCE_VALUE, MouseButton } from '@app/ressources/global-variables/global-variables';\nimport { MAXIMUM_RGBA_VALUE, Rgba, RGBA_INDEXER, RGBA_LENGTH } from '@app/ressources/global-variables/rgba';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FillService extends Tool {\n    name: string = TOOL_NAMES.FILL_TOOL_NAME;\n    maxTolerance: number = MAX_TOLERANCE_VALUE;\n    minTolerance: number = MIN_TOLERANCE_VALUE;\n    tolerance: number = this.minTolerance;\n    mouseDownCoord: Vec2;\n    initialPixelData: Uint8ClampedArray;\n    fillData: Fill;\n    canvasData: ImageData;\n\n    constructor(\n        public drawingService: DrawingService,\n        public colorSelectionService: ColorSelectionService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n    }\n\n    changeTolerance(newTolerance: number): void {\n        this.tolerance = newTolerance;\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n        this.mouseDownCoord = this.getPositionFromMouse(event);\n        this.initialPixelData = this.drawingService.getPixelData(this.mouseDownCoord);\n        if (event.button === MouseButton.LEFT) {\n            this.drawingService.baseCtx.fillStyle = this.colorSelectionService.primaryColor;\n            this.contiguousFill();\n        } else if (event.button === MouseButton.RIGHT) {\n            this.fill();\n        }\n    }\n\n    contiguousFill(): void {\n        const pixelData = this.drawingService.getPixelData(this.mouseDownCoord);\n        const stack: Vec2[] = [this.mouseDownCoord];\n        const coloredPixels: Map<string, boolean> = new Map();\n        const canvasData: ImageData = this.drawingService.getCanvasData();\n\n        const rgbaPrimaryColor: Rgba = this.colorSelectionService.getRgbaPrimaryColor();\n\n        while (stack.length) {\n            const currentPixel = stack.pop() as Vec2;\n            const index = (currentPixel.x + currentPixel.y * this.drawingService.canvas.width) * RGBA_LENGTH;\n            if (coloredPixels.has(this.vec2ToString(currentPixel))) {\n                continue;\n            } else if (this.isInToleranceRange(pixelData, canvasData, index)) {\n                canvasData.data[index + RGBA_INDEXER.RED] = rgbaPrimaryColor.RED;\n                canvasData.data[index + RGBA_INDEXER.GREEN] = rgbaPrimaryColor.GREEN;\n                canvasData.data[index + RGBA_INDEXER.BLUE] = rgbaPrimaryColor.BLUE;\n                canvasData.data[index + RGBA_INDEXER.ALPHA] = rgbaPrimaryColor.ALPHA;\n                coloredPixels.set(this.vec2ToString(currentPixel), true);\n                if (currentPixel.y - 1 >= 0) {\n                    stack.push({ x: currentPixel.x, y: currentPixel.y - 1 });\n                }\n                if (currentPixel.y + 1 < this.drawingService.canvas.height) {\n                    stack.push({ x: currentPixel.x, y: currentPixel.y + 1 });\n                }\n                if (currentPixel.x + 1 < this.drawingService.canvas.width) {\n                    stack.push({ x: currentPixel.x + 1, y: currentPixel.y });\n                }\n                if (currentPixel.x - 1 >= 0) {\n                    stack.push({ x: currentPixel.x - 1, y: currentPixel.y });\n                }\n            }\n        }\n        this.canvasData = canvasData;\n        this.updateFillData();\n        this.drawingService.baseCtx.putImageData(canvasData, 0, 0);\n        this.undoRedoStackService.updateStack(this.fillData);\n    }\n\n    fill(): void {\n        const pixelData = this.drawingService.getPixelData(this.mouseDownCoord);\n        const canvasData = this.drawingService.getCanvasData();\n\n        const rgbaPrimaryColor = this.colorSelectionService.getRgbaPrimaryColor();\n\n        let i;\n        for (i = 0; i < canvasData.data.length; i += RGBA_LENGTH) {\n            if (this.isInToleranceRange(pixelData, canvasData, i)) {\n                canvasData.data[i + RGBA_INDEXER.RED] = rgbaPrimaryColor.RED;\n                canvasData.data[i + RGBA_INDEXER.GREEN] = rgbaPrimaryColor.GREEN;\n                canvasData.data[i + RGBA_INDEXER.BLUE] = rgbaPrimaryColor.BLUE;\n                canvasData.data[i + RGBA_INDEXER.ALPHA] = rgbaPrimaryColor.ALPHA;\n            }\n        }\n        this.canvasData = canvasData;\n        this.updateFillData();\n        this.drawingService.baseCtx.putImageData(canvasData, 0, 0);\n        this.undoRedoStackService.updateStack(this.fillData);\n    }\n\n    vec2ToString(pixel: Vec2): string {\n        return pixel.x.toString() + ',' + pixel.y.toString();\n    }\n\n    isInToleranceRange(pixelData: Uint8ClampedArray, canvasData: ImageData, index: number): boolean {\n        const diffRed: number = Math.abs(pixelData[RGBA_INDEXER.RED] - canvasData.data[index + RGBA_INDEXER.RED]);\n        const diffGreen: number = Math.abs(pixelData[RGBA_INDEXER.GREEN] - canvasData.data[index + RGBA_INDEXER.GREEN]);\n        const diffBlue: number = Math.abs(pixelData[RGBA_INDEXER.BLUE] - canvasData.data[index + RGBA_INDEXER.BLUE]);\n        const diffAlpha: number = Math.abs(pixelData[RGBA_INDEXER.ALPHA] - canvasData.data[index + RGBA_INDEXER.ALPHA]);\n\n        const diffPercentage: number = ((diffRed + diffGreen + diffBlue + diffAlpha) / (RGBA_LENGTH * MAXIMUM_RGBA_VALUE)) * MAX_PERCENTAGE;\n\n        if (diffPercentage > this.tolerance) {\n            return false;\n        }\n        return true;\n    }\n\n    updateFillData(): void {\n        this.fillData = {\n            type: 'fill',\n            imageData: this.canvasData,\n        };\n        this.drawingService.autoSave();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Tool } from '@app/classes/tool';\nimport {\n    Brush,\n    Ellipse,\n    Eraser,\n    Fill,\n    Line,\n    Pen,\n    Pencil,\n    Polygon,\n    Rectangle,\n    Resize,\n    Selection,\n    Spray,\n    Stamp,\n    Text,\n    ToolProperties,\n} from '@app/classes/tool-properties';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { ResizeDrawingService } from '@app/services/resize-drawing/resize-drawing.service';\nimport { BrushService } from '@app/services/tools/brush.service';\nimport { CircleService } from '@app/services/tools/circle.service';\nimport { EraserService } from '@app/services/tools/eraser.service';\nimport { LineService } from '@app/services/tools/line.service';\nimport { PenService } from '@app/services/tools/pen.service';\nimport { PencilService } from '@app/services/tools/pencil.service';\nimport { PolygonService } from '@app/services/tools/polygon.service';\nimport { SelectionService } from '@app/services/tools/selection-services/selection.service';\nimport { SprayService } from '@app/services/tools/spray.service';\nimport { SquareService } from '@app/services/tools/square.service';\nimport { StampService } from '@app/services/tools/stamp.service';\nimport { TextService } from '@app/services/tools/text.service';\nimport { Observable, Subject } from 'rxjs';\nimport { UndoRedoStackService } from './undo-redo-stack.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UndoRedoService extends Tool {\n    isUndoAvailable: boolean = false;\n    isUndoAvailableSubject: Subject<boolean> = new Subject<boolean>();\n    isRedoAvailable: boolean = false;\n    isRedoAvailableSubject: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        public drawingService: DrawingService,\n        public circleService: CircleService,\n        public resizeDrawingService: ResizeDrawingService,\n        public squareService: SquareService,\n        public pencilService: PencilService,\n        public eraserService: EraserService,\n        public lineService: LineService,\n        public brushService: BrushService,\n        public polygonService: PolygonService,\n        public selectionService: SelectionService,\n        public stampService: StampService,\n        public undoRedoStackService: UndoRedoStackService,\n        public sprayService: SprayService,\n        public penService: PenService,\n        public textService: TextService,\n    ) {\n        super(drawingService);\n        this.undoRedoStackService.getIsToolInUse().subscribe((value) => {\n            if (value) {\n                this.setUndoAvailability(false);\n                this.setRedoAvailability(false);\n            } else {\n                this.setUndoAvailability(true);\n                this.setRedoAvailability(true);\n                this.changeUndoAvailability();\n                this.changeRedoAvailability();\n            }\n        });\n    }\n\n    setUndoAvailability(isAvailable: boolean): void {\n        this.isUndoAvailable = isAvailable;\n        this.isUndoAvailableSubject.next(isAvailable);\n    }\n\n    setRedoAvailability(isAvailable: boolean): void {\n        this.isRedoAvailable = isAvailable;\n        this.isRedoAvailableSubject.next(isAvailable);\n    }\n\n    getUndoAvailability(): Observable<boolean> {\n        return this.isUndoAvailableSubject.asObservable();\n    }\n\n    getRedoAvailability(): Observable<boolean> {\n        return this.isRedoAvailableSubject.asObservable();\n    }\n\n    undo(): void {\n        this.selectionService.reset();\n        this.changeUndoAvailability();\n        this.changeRedoAvailability();\n        if (!this.isUndoAvailable) {\n            return;\n        }\n        this.resizeDrawingService.resizeCanvasSize(this.resizeDrawingService.workSpaceSize.x / 2, this.resizeDrawingService.workSpaceSize.y / 2);\n        const modification = this.undoRedoStackService.undoStack.pop();\n        if (modification) {\n            this.undoRedoStackService.redoStack.push(modification);\n        }\n        this.drawingService.clearCanvas(this.drawingService.baseCtx);\n        this.undoRedoStackService.undoStack.forEach((element) => {\n            this.drawElement(element);\n        });\n        this.changeUndoAvailability();\n        this.changeRedoAvailability();\n        this.drawingService.autoSave();\n    }\n\n    redo(): void {\n        this.selectionService.reset();\n        this.changeUndoAvailability();\n        this.changeRedoAvailability();\n        if (!this.isRedoAvailable) {\n            return;\n        }\n        const redoStackLength = this.undoRedoStackService.redoStack.length;\n        if (redoStackLength) {\n            const element = this.undoRedoStackService.redoStack[redoStackLength - 1];\n            this.drawElement(element);\n            const modification = this.undoRedoStackService.redoStack.pop();\n\n            this.undoRedoStackService.undoStack.push(modification as ToolProperties);\n        }\n        this.changeUndoAvailability();\n        this.changeRedoAvailability();\n        this.drawingService.autoSave();\n    }\n\n    changeUndoAvailability(): void {\n        if (this.undoRedoStackService.undoStack.length) {\n            this.setUndoAvailability(true);\n        } else {\n            this.setUndoAvailability(false);\n        }\n    }\n\n    changeRedoAvailability(): void {\n        if (this.undoRedoStackService.redoStack.length) {\n            this.setRedoAvailability(true);\n        } else {\n            this.setRedoAvailability(false);\n        }\n    }\n\n    drawElement(element: ToolProperties): void {\n        switch (element.type) {\n            case 'pencil':\n                this.pencilService.drawPencilStroke(this.drawingService.baseCtx, element as Pencil);\n                break;\n            case 'brush':\n                this.brushService.drawLine(this.drawingService.baseCtx, element as Brush);\n                break;\n            case 'eraser':\n                this.eraserService.drawEraserStroke(this.drawingService.baseCtx, element as Eraser);\n                break;\n            case 'line':\n                this.lineService.drawFullLine(this.drawingService.baseCtx, element as Line);\n                break;\n            case 'rectangle':\n                this.squareService.drawRectangle(this.drawingService.baseCtx, element as Rectangle);\n                break;\n            case 'ellipse':\n                this.circleService.drawEllipse(this.drawingService.baseCtx, element as Ellipse);\n                break;\n            case 'fill':\n                this.drawingService.drawFill(element as Fill);\n                break;\n            case 'resize':\n                this.resizeDrawingService.restoreCanvas(element as Resize);\n                break;\n            case 'polygon':\n                this.polygonService.drawPolygon(this.drawingService.baseCtx, element as Polygon);\n                break;\n            case 'selection':\n                this.drawingService.restoreSelection(element as Selection);\n                break;\n            case 'stamp':\n                this.stampService.printStamp(this.drawingService.baseCtx, element as Stamp);\n                break;\n            case 'spray':\n                this.sprayService.restoreSpray(element as Spray);\n                break;\n            case 'pen':\n                this.penService.restorePen(element as Pen);\n                break;\n            case 'text':\n                this.textService.restoreText(element as Text);\n                break;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Tool } from '@app/classes/tool';\nimport { Text } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { ARROW_KEYS } from '@app/ressources/global-variables/arrow-keys';\nimport { MARGIN, MouseButton, MOVE_DOWN } from '@app/ressources/global-variables/global-variables';\nimport { AUTHORIZED_KEY } from '@app/ressources/global-variables/text';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TextService extends Tool {\n    name: string = TOOL_NAMES.TEXT_TOOL_NAME;\n    text: string[];\n    indexIndicator: number = 0;\n    textStartingPoint: Vec2 = { x: 0, y: 0 };\n    isNewText: boolean = false;\n    font: string = 'Georgia';\n    textSize: number = 30;\n    italicText: string = 'normal';\n    boldText: string = 'normal';\n    align: CanvasTextAlign = 'start';\n    height: number;\n    isFrontDelete: boolean = false;\n    maxLine: string;\n    isWritingEnable: boolean = true;\n    textData: Text;\n    canvasData: ImageData;\n\n    constructor(\n        drawingService: DrawingService,\n        public hotkeyService: HotkeyService,\n        public colorSelectionService: ColorSelectionService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n    }\n\n    initializeNewText(): void {\n        this.hotkeyService.isHotkeyEnabled = false;\n        this.text = [];\n        this.isNewText = true;\n        this.text.push('|');\n        this.applyTextStyle();\n    }\n    destroy(): void {\n        this.text = [];\n        this.isNewText = false;\n        this.indexIndicator = 0;\n        this.hotkeyService.isHotkeyEnabled = true;\n    }\n    onMouseDown(event: MouseEvent): void {\n        if (this.isMouseOnText(this.getPositionFromMouse(event)) || event.button === MouseButton.RIGHT) {\n            return;\n        }\n        if (!this.isNewText) {\n            const mousePosition = this.getPositionFromMouse(event);\n            this.textStartingPoint = { x: mousePosition.x, y: mousePosition.y };\n            this.initializeNewText();\n        } else {\n            this.createText();\n        }\n    }\n\n    isMouseOnText(mousePosition: Vec2): boolean {\n        if (!this.text) return false;\n        const selectionWidth = this.textStartingPoint.x + this.drawingService.previewCtx.measureText(this.maxLine).width;\n        const selectionHeight = this.height * this.text.join('').split('Enter').length + this.textStartingPoint.y;\n        if (\n            mousePosition.x >= this.textStartingPoint.x &&\n            mousePosition.x <= selectionWidth &&\n            mousePosition.y >= this.textStartingPoint.y &&\n            mousePosition.y <= selectionHeight\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    createText(): void {\n        if (!this.text) return;\n        this.removeIndicator();\n        this.printText();\n        this.drawingService.applyPreview();\n        this.canvasData = this.drawingService.getCanvasData();\n        this.updateTextData();\n        this.undoRedoStackService.updateStack(this.textData);\n        this.destroy();\n    }\n\n    onMouseEnter(): void {\n        this.applyTextStyle();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        if (!this.isNewText || !this.isWritingEnable) return;\n        switch (event.key) {\n            case 'Backspace':\n                this.isFrontDelete = false;\n                this.deleteText(this.indexIndicator - 1);\n                this.indexIndicator--;\n                break;\n            case 'Delete':\n                this.isFrontDelete = true;\n                this.deleteText(this.indexIndicator + 1);\n                break;\n            case ARROW_KEYS.LEFT:\n                this.moveIndicator(MOVE_DOWN);\n                break;\n            case ARROW_KEYS.RIGHT:\n                this.moveIndicator(1);\n                break;\n            case ARROW_KEYS.UP:\n                this.moveIndicatorUpAndDown('UP');\n                break;\n            case ARROW_KEYS.DOWN:\n                this.moveIndicatorUpAndDown('DOWN');\n                break;\n            case 'Escape':\n                this.createText();\n                break;\n            case 'Alt':\n                event.preventDefault();\n                break;\n            default:\n                if (this.isCorrectKey(event.key)) {\n                    this.insertItemInText(event.key);\n                    this.indexIndicator++;\n                }\n                break;\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent): void {\n        this.printText();\n    }\n\n    getIndicatorLineAndIndex(lines: string[]): Vec2 {\n        let i = 0;\n        for (const line of lines) {\n            const indicatorIndex = line.indexOf('|');\n            if (indicatorIndex >= 0) {\n                return { x: indicatorIndex, y: i };\n            }\n            i++;\n        }\n        return { x: -1, y: -1 };\n    }\n\n    moveIndicatorUpAndDown(mouvement: string): void {\n        const lines = this.text.join('').split('Enter');\n        const indicatorPosition: Vec2 = this.getIndicatorLineAndIndex(lines);\n\n        if (mouvement === 'UP' && !this.isInFirstLine()) {\n            if (lines[indicatorPosition.y - 1].length < indicatorPosition.x) {\n                this.indexIndicator -= indicatorPosition.x + 1;\n            } else {\n                this.indexIndicator -= indicatorPosition.x + 1;\n                this.indexIndicator -= lines[indicatorPosition.y - 1].length - indicatorPosition.x;\n            }\n        } else if (mouvement === 'DOWN' && !this.isInLastLine()) {\n            if (lines[indicatorPosition.y + 1].length < indicatorPosition.x) {\n                this.indexIndicator += lines[indicatorPosition.y].length - indicatorPosition.x;\n                this.indexIndicator += lines[indicatorPosition.y + 1].length;\n            } else {\n                this.indexIndicator += lines[indicatorPosition.y].length - indicatorPosition.x;\n                this.indexIndicator += indicatorPosition.x;\n            }\n        }\n        this.removeIndicator();\n        this.insertItemInText('|');\n    }\n\n    isInFirstLine(): boolean {\n        const indexEnter = this.text.indexOf('Enter');\n        if (indexEnter > this.indexIndicator || indexEnter < 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    isInLastLine(): boolean {\n        const indexEnter = this.text.lastIndexOf('Enter');\n        if (indexEnter < this.indexIndicator || indexEnter < 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    insertItemInText(item: string): void {\n        if (item === '|' && this.indexIndicator >= this.text.length) {\n            this.text.push('|');\n        } else if (this.indexIndicator >= this.text.length) {\n            this.text.pop();\n            this.text.push(item);\n            this.text.push('|');\n        } else {\n            const newText = [];\n            let i = 0;\n            for (const char of this.text) {\n                if (i === this.indexIndicator) {\n                    newText.push(item);\n                }\n                newText.push(char);\n                i++;\n            }\n            this.text = newText;\n        }\n    }\n\n    deleteText(index: number): void {\n        if (index < 0 && this.isFrontDelete) return;\n        if (index >= this.text.length && !this.isFrontDelete) {\n            return;\n        }\n        const beforeItem = this.text.slice(0, index);\n        const afterItem = this.text.slice(index + 1);\n        this.text = beforeItem.concat(afterItem);\n    }\n\n    removeIndicator(): void {\n        const newText = [];\n        for (const char of this.text) {\n            if (char !== '|') {\n                newText.push(char);\n            }\n        }\n        this.text = newText;\n    }\n\n    printText(): void {\n        this.maxLine = '';\n        if (!this.text) return;\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        let line: string[] = [];\n        let lineHeight = this.textStartingPoint.y + this.height;\n        let lineWidth = this.textStartingPoint.x;\n        for (const char of this.text) {\n            if (char === 'Enter') {\n                if (line.indexOf('|') >= 0) {\n                    this.printIndicatorLine(line, lineHeight);\n                } else {\n                    this.drawingService.previewCtx.fillText(line.join(''), lineWidth, lineHeight);\n                }\n                lineHeight += this.height + MARGIN;\n                if (line.length > this.maxLine.length) this.maxLine = line.join('');\n                line = [];\n                lineWidth = this.textStartingPoint.x;\n            } else {\n                line.push(char);\n            }\n        }\n        if (line.indexOf('|') >= 0) {\n            this.printIndicatorLine(line, lineHeight);\n        } else {\n            this.drawingService.previewCtx.fillText(line.join(''), lineWidth, lineHeight);\n        }\n        if (line.length > this.maxLine.length) this.maxLine = line.join('');\n    }\n\n    setStratingPointX(line: string[]): number {\n        let lineWidth = this.textStartingPoint.x;\n        if (this.align === 'center') {\n            lineWidth -= this.drawingService.previewCtx.measureText(line.join('')).width / 2;\n        } else if (this.align === 'end') {\n            lineWidth -= this.drawingService.previewCtx.measureText(line.join('')).width;\n        }\n        return lineWidth;\n    }\n\n    printIndicatorLine(line: string[], lineHeight: number): void {\n        const afterIndicator: string[] = line.slice(line.indexOf('|') + 1);\n        const beforeIndicator = line.slice(0, line.indexOf('|'));\n        let lineWidth = this.setStratingPointX(line);\n        this.drawingService.previewCtx.textAlign = 'start';\n        this.drawingService.previewCtx.fillText(beforeIndicator.join(''), lineWidth, lineHeight);\n        lineWidth += this.drawingService.previewCtx.measureText(beforeIndicator.join('')).width;\n        this.printIndicator(lineWidth, lineHeight);\n        lineWidth += this.drawingService.previewCtx.measureText('|').width;\n        this.drawingService.previewCtx.fillText(afterIndicator.join(''), lineWidth, lineHeight);\n        this.drawingService.previewCtx.textAlign = this.align;\n    }\n\n    printIndicator(lineWidth: number, lineHeight: number): void {\n        const fillStyle = this.drawingService.previewCtx.fillStyle;\n        this.drawingService.previewCtx.fillStyle = '#000000';\n        this.drawingService.previewCtx.fillText('|', lineWidth, lineHeight);\n        this.drawingService.previewCtx.fillStyle = fillStyle;\n    }\n\n    moveIndicator(interval: number): void {\n        if (interval < 0 && this.indexIndicator <= 0) return;\n        else if (interval > 0 && this.indexIndicator + 1 >= this.text.length) return;\n        this.removeIndicator();\n        this.indexIndicator = this.indexIndicator + interval;\n        this.insertItemInText('|');\n    }\n\n    applyTextStyle(): void {\n        const textTest = 'wWmML';\n        this.drawingService.previewCtx.fillStyle = this.colorSelectionService.primaryColor;\n        this.drawingService.previewCtx.font = this.italicText + ' ' + this.boldText + ' ' + this.textSize.toString() + 'px ' + this.font;\n        this.drawingService.previewCtx.textAlign = this.align;\n        const metrics = this.drawingService.previewCtx.measureText(textTest);\n        this.height = metrics.actualBoundingBoxAscent;\n        this.printText();\n    }\n\n    isCorrectKey(key: string): boolean {\n        const isLetter = key >= 'a' && key <= 'z';\n        const isNumber = key >= '0' && key <= '9';\n        if (isLetter || isNumber || AUTHORIZED_KEY.includes(key)) return true;\n        else return false;\n    }\n\n    restoreText(textData: Text): void {\n        this.drawingService.baseCtx.putImageData(textData.imageData, 0, 0);\n    }\n\n    updateTextData(): void {\n        this.textData = {\n            type: 'text',\n            imageData: this.canvasData,\n        };\n        this.drawingService.autoSave();\n    }\n}\n","import { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Tool } from '@app/classes/tool';\nimport { Vec2 } from '@app/classes/vec2';\nimport { GROWTH_ZOOM_PIPETTE, MAX_OPACITY_RGBA, MouseButton, ZOOM_RADIUS } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PipetteService extends Tool {\n    @Output() mouseOut: Subject<boolean> = new Subject();\n    color: string[] = ['#000000', '0'];\n    primaryColor: EventEmitter<string[]> = new EventEmitter<string[]>();\n    secondaryColor: EventEmitter<string[]> = new EventEmitter<string[]>();\n    name: string = TOOL_NAMES.PIPETTE_TOOL_NAME;\n    zoom: HTMLCanvasElement;\n    zoomCtx: CanvasRenderingContext2D;\n    isNearBorder: boolean = false;\n\n    constructor(drawingService: DrawingService, public colorSelectionService: ColorSelectionService) {\n        super(drawingService);\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.mouseDown = true;\n        this.mouseDownCoord = this.getPositionFromMouse(event);\n        const pixel = this.drawingService.baseCtx.getImageData(this.mouseDownCoord.x, this.mouseDownCoord.y, 1, 1);\n        const pixelData = pixel.data;\n        let r = pixelData[0].toString(16);\n        let g = pixelData[1].toString(16);\n        let b = pixelData[2].toString(16);\n        if (r.length === 1) {\n            r = '0' + r;\n        }\n        if (g.length === 1) {\n            g = '0' + g;\n        }\n        if (b.length === 1) {\n            b = '0' + b;\n        }\n        this.color[0] = '#' + r + g + b;\n        this.color[1] = pixelData[3].toString();\n        if (event.button === MouseButton.LEFT) {\n            this.primaryColor.emit(this.color);\n        }\n        if (event.button === MouseButton.RIGHT) {\n            this.secondaryColor.emit(this.color);\n        }\n    }\n\n    showZoomPixel(event: MouseEvent): void {\n        this.clearCanvas();\n        if (!this.isNearBorder) {\n            this.drawOnZoom(event);\n        }\n    }\n\n    drawOnZoom(event: MouseEvent): void {\n        const x = this.getPositionFromMouse(event).x;\n        const y = this.getPositionFromMouse(event).y;\n\n        const hSource = this.zoom.height / GROWTH_ZOOM_PIPETTE;\n        const wSource = this.zoom.width / GROWTH_ZOOM_PIPETTE;\n\n        this.zoomCtx.beginPath();\n        this.zoomCtx.arc(this.zoom.width / 2, this.zoom.height / 2, ZOOM_RADIUS, 0, 2 * Math.PI);\n        this.zoomCtx.clip();\n        this.zoomCtx.drawImage(\n            this.drawingService.canvas,\n            x - wSource / 2,\n            y - hSource / 2,\n            wSource,\n            hSource,\n            0,\n            0,\n            this.zoom.width,\n            this.zoom.height,\n        );\n        this.zoomCtx.closePath();\n        this.cursorOnPixel(event, this.zoom.width, this.zoom.height);\n    }\n\n    cursorOnPixel(e: MouseEvent, width: number, height: number): void {\n        const mousePosition = this.getPositionFromMouse(e);\n        const pixelData = this.drawingService.baseCtx.getImageData(mousePosition.x, mousePosition.y, 1, 1).data;\n        const opacityIndex = 3;\n        const color = 'rgba(' + pixelData[0] + ', ' + pixelData[1] + ', ' + pixelData[2] + ', ' + pixelData[opacityIndex] / MAX_OPACITY_RGBA + ')';\n        this.zoomCtx.beginPath();\n        this.zoomCtx.fillStyle = color;\n        this.zoomCtx.strokeStyle = 'white';\n        this.zoomCtx.setLineDash([2, 1]);\n        this.zoomCtx.strokeRect(width / 2 - GROWTH_ZOOM_PIPETTE / 2, height / 2 - GROWTH_ZOOM_PIPETTE / 2, GROWTH_ZOOM_PIPETTE, GROWTH_ZOOM_PIPETTE);\n        this.zoomCtx.strokeStyle = 'black';\n        this.zoomCtx.setLineDash([1, 2]);\n        this.zoomCtx.strokeRect(width / 2 - GROWTH_ZOOM_PIPETTE / 2, height / 2 - GROWTH_ZOOM_PIPETTE / 2, GROWTH_ZOOM_PIPETTE, GROWTH_ZOOM_PIPETTE);\n        this.zoomCtx.fillRect(width / 2 - GROWTH_ZOOM_PIPETTE / 2, height / 2 - GROWTH_ZOOM_PIPETTE / 2, GROWTH_ZOOM_PIPETTE, GROWTH_ZOOM_PIPETTE);\n        this.zoomCtx.stroke();\n    }\n\n    nearBorder(mousePosition: Vec2): void {\n        this.isNearBorder = false;\n        if (mousePosition.x >= this.drawingService.canvas.width || mousePosition.x <= 0) {\n            this.isNearBorder = true;\n        }\n        if (mousePosition.y >= this.drawingService.canvas.height || mousePosition.y <= 0) {\n            this.isNearBorder = true;\n        }\n        if (this.isNearBorder) {\n            this.clearCanvas();\n        }\n    }\n\n    clearCanvas(): void {\n        this.zoomCtx.clearRect(0, 0, this.zoom.width, this.zoom.height);\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        this.nearBorder(this.getPositionFromMouse(event));\n        this.showZoomPixel(event);\n    }\n    onMouseEnter(): void {\n        this.mouseOut.next(true);\n    }\n\n    onMouseLeave(): void {\n        this.mouseOut.next(false);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MAXIMUM_RGBA_VALUE, Rgba, RGBA_INDEXER } from '@app/ressources/global-variables/rgba';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ColorSelectionService {\n    primaryColor: string;\n    secondaryColor: string;\n\n    getRgbaPrimaryColor(): Rgba {\n        const slicingIndex = this.primaryColor.indexOf('(') + 1;\n        const primaryColor: string = this.primaryColor.slice(slicingIndex);\n\n        const subStrings = primaryColor.split(',');\n        const rgba: Rgba = {\n            RED: parseInt(subStrings[RGBA_INDEXER.RED], 10),\n            GREEN: parseInt(subStrings[RGBA_INDEXER.GREEN], 10),\n            BLUE: parseInt(subStrings[RGBA_INDEXER.BLUE], 10),\n            ALPHA: parseFloat(subStrings[RGBA_INDEXER.ALPHA]) * MAXIMUM_RGBA_VALUE,\n        };\n\n        return rgba;\n    }\n}\n","export const GRID_NAME = 'Grid';\nexport const GRID_INCREASE_NAME = 'Grid Increase';\nexport const GRID_DECREASE_NAME = 'Grid Decrease';\n\nexport interface GridElements {\n    GRID_NAME: string;\n    GRID_INCREASE_NAME: string;\n    GRID_DECREASE_NAME: string;\n}\n\nexport const GRID_ELEMENTS: GridElements = {\n    GRID_NAME: 'Grid',\n    GRID_INCREASE_NAME: 'Grid Increase',\n    GRID_DECREASE_NAME: 'Grid Decrease',\n};\n","export const MAXIMUM_RGBA_VALUE = 255;\nexport const RGBA_LENGTH = 4;\n\nexport interface Rgba {\n    RED: number;\n    GREEN: number;\n    BLUE: number;\n    ALPHA: number;\n}\n\nexport const RGBA_INDEXER: Rgba = {\n    RED: 0,\n    GREEN: 1,\n    BLUE: 2,\n    ALPHA: 3,\n};\n","export interface LimitAngles {\n    DEGREES_0: number;\n    DEGREES_22POINT5: number;\n    DEGREES_67POINT5: number;\n    DEGREES_90: number;\n}\n\nexport const LIMIT_ANGLES: LimitAngles = {\n    DEGREES_0: 0,\n    DEGREES_22POINT5: 22.5,\n    DEGREES_67POINT5: 67.5,\n    DEGREES_90: 90,\n};\n","import { Injectable } from '@angular/core';\nimport { SelectionType } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ClipboardService } from '@app/services/clipboard/clipboard.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { SquareService } from '@app/services/tools/square.service';\nimport { MoveService } from '@app/services/tools/transformation-services/move.service';\nimport { RotateService } from '@app/services/tools/transformation-services/rotate.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\nimport { MagnetismService } from './magnetism.service';\nimport { SelectionService } from './selection.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SquareSelectionService extends SelectionService {\n    name: string = TOOL_NAMES.SQUARE_SELECTION_TOOL_NAME;\n    constructor(\n        drawingService: DrawingService,\n        public squareService: SquareService,\n        public moveService: MoveService,\n        public rotateService: RotateService,\n        public clipboardService: ClipboardService,\n        public magnetismService: MagnetismService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService, moveService, rotateService, clipboardService, magnetismService, undoRedoStackService);\n        super.underlyingService = squareService;\n        this.selectionType = SelectionType.SQUARE;\n    }\n\n    setSelectionData(): void {\n        this.selectionImage.width = this.selection.width;\n        this.selectionImage.height = this.selection.height;\n        const selectionImageCtx = this.selectionImage.getContext('2d') as CanvasRenderingContext2D;\n        selectionImageCtx.drawImage(\n            this.drawingService.canvas,\n            this.selection.startingPoint.x,\n            this.selection.startingPoint.y,\n            this.selection.width,\n            this.selection.height,\n            0,\n            0,\n            this.selection.width,\n            this.selection.height,\n        );\n        this.moveService.initialize(this.selection, this.selectionImage);\n        this.rotateService.initialize(this.selection, this.selectionImage);\n    }\n\n    setMagnetismAlignment(alignment: string): void {\n        this.currentAlignment = alignment;\n    }\n\n    strokeSelection(): void {\n        if (this.selection.height !== 0 && this.selection.width !== 0) {\n            this.drawingService.previewCtx.save();\n            this.rotateService.rotatePreviewCanvas();\n            this.drawingService.previewCtx.strokeRect(\n                this.selection.startingPoint.x,\n                this.selection.startingPoint.y,\n                this.selection.width,\n                this.selection.height,\n            );\n            this.drawingService.previewCtx.restore();\n        }\n        this.drawingService.autoSave();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SelectionType } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ClipboardService } from '@app/services/clipboard/clipboard.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { CircleService } from '@app/services/tools/circle.service';\nimport { MoveService } from '@app/services/tools/transformation-services/move.service';\nimport { RotateService } from '@app/services/tools/transformation-services/rotate.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\nimport { MagnetismService } from './magnetism.service';\nimport { SelectionService } from './selection.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CircleSelectionService extends SelectionService {\n    name: string = TOOL_NAMES.CIRCLE_SELECTION_TOOL_NAME;\n    constructor(\n        drawingService: DrawingService,\n        public circleService: CircleService,\n        public moveService: MoveService,\n        public rotateService: RotateService,\n        public clipboardService: ClipboardService,\n        public magnetismService: MagnetismService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService, moveService, rotateService, clipboardService, magnetismService, undoRedoStackService);\n        super.underlyingService = circleService;\n        this.selectionType = SelectionType.CIRCLE;\n    }\n\n    setSelectionData(): void {\n        this.selectionImage.width = this.selection.width;\n        this.selectionImage.height = this.selection.height;\n        const selectionImageCtx = this.selectionImage.getContext('2d') as CanvasRenderingContext2D;\n\n        selectionImageCtx.beginPath();\n        selectionImageCtx.ellipse(\n            this.selection.width / 2,\n            this.selection.height / 2,\n            this.selection.width / 2,\n            this.selection.height / 2,\n            0,\n            0,\n            Math.PI * 2,\n        );\n        selectionImageCtx.clip();\n        selectionImageCtx.closePath();\n\n        selectionImageCtx.drawImage(\n            this.drawingService.canvas,\n            this.selection.startingPoint.x,\n            this.selection.startingPoint.y,\n            this.selection.width,\n            this.selection.height,\n            0,\n            0,\n            this.selection.width,\n            this.selection.height,\n        );\n        this.moveService.initialize(this.selection, this.selectionImage);\n        this.rotateService.initialize(this.selection, this.selectionImage);\n    }\n\n    setMagnetismAlignment(alignment: string): void {\n        this.currentAlignment = alignment;\n    }\n\n    strokeSelection(): void {\n        if (this.selection.height !== 0 && this.selection.width !== 0) {\n            this.drawingService.previewCtx.beginPath();\n            this.drawingService.previewCtx.save();\n            this.rotateService.rotatePreviewCanvas();\n            this.drawingService.previewCtx.ellipse(\n                this.selection.startingPoint.x + this.selection.width / 2,\n                this.selection.startingPoint.y + this.selection.height / 2,\n                this.selection.width / 2,\n                this.selection.height / 2,\n                0,\n                0,\n                Math.PI * 2,\n            );\n            this.drawingService.previewCtx.strokeRect(\n                this.moveService.selection.startingPoint.x,\n                this.moveService.selection.startingPoint.y,\n                this.selection.width,\n                this.selection.height,\n            );\n            this.drawingService.previewCtx.restore();\n            this.drawingService.previewCtx.stroke();\n        }\n        this.drawingService.autoSave();\n    }\n}\n","export interface AlignmentNames {\n    ALIGN_TOP_LEFT_NAME: string;\n    ALIGN_TOP_RIGHT_NAME: string;\n    ALIGN_TOP_CENTER_NAME: string;\n    ALIGN_CENTER_LEFT_NAME: string;\n    ALIGN_CENTER_RIGHT_NAME: string;\n    ALIGN_CENTER_NAME: string;\n    ALIGN_BOTTOM_LEFT_NAME: string;\n    ALIGN_BOTTOM_CENTER_NAME: string;\n    ALIGN_BOTTOM_RIGHT_NAME: string;\n}\n\nexport const ALIGNMENT_NAMES: AlignmentNames = {\n    ALIGN_TOP_LEFT_NAME: 'Haut-Gauche',\n    ALIGN_TOP_RIGHT_NAME: 'Haut-Centre',\n    ALIGN_TOP_CENTER_NAME: 'Haut-Droite',\n    ALIGN_CENTER_LEFT_NAME: 'Centre-Gauche',\n    ALIGN_CENTER_RIGHT_NAME: 'Centre-Droite',\n    ALIGN_CENTER_NAME: 'Milieu',\n    ALIGN_BOTTOM_LEFT_NAME: 'Bas-Gauche',\n    ALIGN_BOTTOM_CENTER_NAME: 'Bas-Centre',\n    ALIGN_BOTTOM_RIGHT_NAME: 'Bas-Droite',\n};\n","import { Injectable } from '@angular/core';\nimport { Trigonometry } from '@app/classes/math/trigonometry';\nimport { Tool } from '@app/classes/tool';\nimport { Line } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { LineAngle, MouseButton, Quadrant } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n@Injectable({\n    providedIn: 'root',\n})\nexport class LineService extends Tool {\n    trigonometry: Trigonometry = new Trigonometry();\n    name: string = TOOL_NAMES.LINE_TOOL_NAME;\n    shiftClick: Vec2 = { x: 0, y: 0 };\n    isShiftKeyDown: boolean = false;\n    endingClickCoordinates: Vec2;\n    isDrawing: boolean = false;\n    numberOfClicks: number = 0;\n    mouseEvent: MouseEvent;\n    lineData: Line;\n\n    constructor(\n        public drawingService: DrawingService,\n        public colorSelectionService: ColorSelectionService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n        this.lineData = {\n            type: 'line',\n            lineWidth: 1,\n            lineCap: 'round',\n            primaryColor: this.colorSelectionService.primaryColor,\n            secondaryColor: this.colorSelectionService.secondaryColor,\n            mouseClicks: [],\n            storedLines: [],\n            isDot: false,\n            line: { startingPoint: { x: 0, y: 0 }, endingPoint: { x: 0, y: 0 } },\n            isShiftDoubleClick: false,\n            hasLastPointBeenChanged: false,\n            dotWidth: 1,\n        };\n    }\n\n    changeLineWidth(newWidth: number): void {\n        this.lineData.lineWidth = newWidth;\n    }\n\n    changeJunction(isDot: boolean): void {\n        this.lineData.isDot = isDot;\n    }\n\n    changeDotWidth(newWidth: number): void {\n        this.lineData.dotWidth = newWidth;\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.undoRedoStackService.setIsToolInUse(true);\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n        if (event.button !== MouseButton.LEFT) {\n            return;\n        }\n        this.isDrawing = true;\n        this.lineData.mouseClicks.push(this.getPositionFromMouse(event));\n        this.numberOfClicks = this.lineData.mouseClicks.length;\n\n        // Check if it's a new line\n        if (this.numberOfClicks <= 1) {\n            return;\n        }\n\n        // Check if it's a double click holding shift\n        if (this.getPositionFromMouse(event).x === this.shiftClick.x && this.getPositionFromMouse(event).y === this.shiftClick.y) {\n            this.lineData.isShiftDoubleClick = true;\n        }\n        this.shiftClick = this.getPositionFromMouse(event);\n\n        // Check if it is a double click\n        const isDoubleClick: boolean = this.checkIfDoubleClick();\n        if (isDoubleClick || this.lineData.isShiftDoubleClick) {\n            this.isDrawing = false;\n            // Handle case when user double click when there is no line\n            if (\n                this.lineData.mouseClicks[0].x === this.lineData.mouseClicks[1].x &&\n                this.lineData.mouseClicks[0].y === this.lineData.mouseClicks[1].y\n            ) {\n                this.lineData.mouseClicks = [];\n                this.numberOfClicks = 0;\n                return;\n            }\n            // Check if the last point is 20px away from initial point\n            const distance = this.trigonometry.distanceBetweenTwoDots(\n                this.lineData.mouseClicks[0],\n                this.lineData.mouseClicks[this.numberOfClicks - 2],\n            );\n            if (distance < this.trigonometry.MAX_DISTANCE_BETWEEN_TWO_DOTS) {\n                // Replace the ending point received from the click coordinates with the inital point of the line\n                this.lineData.mouseClicks[this.lineData.mouseClicks.length - 1] = this.lineData.mouseClicks[0];\n                this.lineData.storedLines[this.lineData.storedLines.length - 1].endingPoint = this.lineData.mouseClicks[0];\n                this.lineData.hasLastPointBeenChanged = true;\n            }\n\n            // Draw line on base canvas\n            this.lineData.primaryColor = this.colorSelectionService.primaryColor;\n            this.lineData.secondaryColor = this.colorSelectionService.secondaryColor;\n            this.drawFullLine(this.drawingService.baseCtx, this.lineData);\n            this.undoRedoStackService.updateStack(this.lineData);\n            this.lineData.hasLastPointBeenChanged = false;\n\n            // Clear the preview canvas, the stored clicks and the stored lines used for previewing\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.lineData.storedLines = [];\n            this.lineData.mouseClicks = [];\n            this.lineData.isShiftDoubleClick = false;\n            this.undoRedoStackService.setIsToolInUse(false);\n            return;\n        }\n        this.drawSegment();\n        this.drawingService.autoSave();\n    }\n\n    drawSegment(): void {\n        if (!this.isDrawing) {\n            return;\n        }\n        this.lineData.line = {\n            startingPoint: this.lineData.mouseClicks[this.numberOfClicks - 2],\n            endingPoint: this.endingClickCoordinates,\n        };\n        this.drawLine(this.lineData.line.startingPoint, this.lineData.line.endingPoint, this.drawingService.previewCtx, this.lineData.lineWidth);\n\n        if (this.lineData.isDot) {\n            this.drawDots(this.lineData.dotWidth, this.drawingService.previewCtx);\n        }\n        this.lineData.storedLines.push(this.lineData.line);\n\n        this.lineData.mouseClicks[this.lineData.mouseClicks.length - 1] = this.endingClickCoordinates;\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        this.mouseEvent = event;\n        if (!this.isDrawing) return;\n\n        // Clear the old line segment preview\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n\n        // Restore previous line segments\n        this.lineData.storedLines.forEach((line) => {\n            this.drawLine(line.startingPoint, line.endingPoint, this.drawingService.previewCtx, this.lineData.lineWidth);\n        });\n\n        if (this.lineData.isDot) {\n            this.drawDots(this.lineData.dotWidth, this.drawingService.previewCtx);\n        }\n\n        if (this.isShiftKeyDown) {\n            // Handle angles (set a different ending coordinates depending on mouse position)\n            this.adjustLineAngle(this.getPositionFromMouse(event));\n        } else {\n            // Get new coordinates for end of line\n            this.endingClickCoordinates = this.getPositionFromMouse(event);\n        }\n        this.drawLine(\n            this.lineData.mouseClicks[this.numberOfClicks - 1],\n            this.endingClickCoordinates,\n            this.drawingService.previewCtx,\n            this.lineData.lineWidth,\n        );\n    }\n\n    checkIfDoubleClick(): boolean {\n        const previousClickX = this.lineData.mouseClicks[this.numberOfClicks - 2].x;\n        const previousClickY = this.lineData.mouseClicks[this.numberOfClicks - 2].y;\n        const currentClickX = this.lineData.mouseClicks[this.numberOfClicks - 1].x;\n        const currentClickY = this.lineData.mouseClicks[this.numberOfClicks - 1].y;\n        if (previousClickX === currentClickX && previousClickY === currentClickY) {\n            return true;\n        }\n        return false;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n        if (event.key === 'Shift') {\n            this.isShiftKeyDown = true;\n            this.onMouseMove(this.mouseEvent);\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent): void {\n        switch (event.key) {\n            case 'Shift': {\n                this.isShiftKeyDown = false;\n                this.onMouseMove(this.mouseEvent);\n                break;\n            }\n            case 'Backspace': {\n                if (this.numberOfClicks > 1) {\n                    this.deleteLastSegment();\n                }\n                break;\n            }\n            case 'Escape': {\n                this.deleteLine();\n                break;\n            }\n        }\n    }\n\n    deleteLastSegment(): void {\n        this.lineData.storedLines.pop();\n        this.lineData.mouseClicks.pop();\n        --this.numberOfClicks;\n\n        // Clear the old line segment preview\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n\n        // Restore previous line segments\n        this.lineData.storedLines.forEach((line) => {\n            this.drawLine(line.startingPoint, line.endingPoint, this.drawingService.previewCtx, this.lineData.lineWidth);\n        });\n\n        // Draw the new line preview\n        this.drawLine(\n            this.lineData.mouseClicks[this.numberOfClicks - 1],\n            this.endingClickCoordinates,\n            this.drawingService.previewCtx,\n            this.lineData.lineWidth,\n        );\n\n        if (this.lineData.isDot) {\n            this.drawDots(this.lineData.dotWidth, this.drawingService.previewCtx);\n        }\n    }\n\n    deleteLine(): void {\n        this.lineData.storedLines = [];\n        this.lineData.mouseClicks = [];\n        this.numberOfClicks = 0;\n        this.isDrawing = false;\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n    }\n\n    adjustLineAngle(mouseCoordinates: Vec2): void {\n        let opposite: number;\n        let adjacent: number;\n        let hypothenuse: number;\n        let angleDegree: number;\n        let angleRadians: number;\n        let quadrant: Quadrant;\n        let lineAngle: LineAngle;\n\n        adjacent = mouseCoordinates.x - this.lineData.mouseClicks[this.lineData.mouseClicks.length - 1].x;\n        opposite = this.lineData.mouseClicks[this.lineData.mouseClicks.length - 1].y - mouseCoordinates.y;\n\n        hypothenuse = Math.sqrt(Math.pow(opposite, 2) + Math.pow(adjacent, 2));\n        quadrant = this.trigonometry.findCursorQuadrant(adjacent, opposite);\n\n        adjacent = Math.abs(adjacent);\n        opposite = Math.abs(opposite);\n\n        if (!hypothenuse) {\n            hypothenuse = 1;\n        }\n        angleRadians = Math.asin(opposite / hypothenuse);\n        angleDegree = this.trigonometry.radiansToDegrees(angleRadians);\n        lineAngle = this.trigonometry.findClosestAngle(quadrant, angleDegree);\n        this.endingClickCoordinates = this.trigonometry.adjustEndingPoint(lineAngle, mouseCoordinates, adjacent, this.lineData.mouseClicks);\n    }\n\n    drawLine(startingPoint: Vec2, endingPoint: Vec2, ctx: CanvasRenderingContext2D, lineWidth: number): void {\n        ctx.strokeStyle = this.colorSelectionService.primaryColor;\n        ctx.lineCap = 'round';\n        ctx.lineWidth = lineWidth;\n        ctx.beginPath();\n        ctx.moveTo(startingPoint.x, startingPoint.y);\n        ctx.lineTo(endingPoint.x, endingPoint.y);\n        ctx.stroke();\n    }\n\n    drawDots(width: number, ctx: CanvasRenderingContext2D): void {\n        let lastDot = this.lineData.mouseClicks.length;\n\n        if (ctx === this.drawingService.baseCtx) {\n            lastDot--;\n            this.lineData.mouseClicks[this.lineData.mouseClicks.length - 2] = this.lineData.mouseClicks[this.lineData.mouseClicks.length - 1];\n            this.lineData.mouseClicks.pop();\n            if (this.lineData.isShiftDoubleClick) {\n                this.lineData.mouseClicks[this.lineData.mouseClicks.length - 1] = this.lineData.storedLines[\n                    this.lineData.storedLines.length - 1\n                ].endingPoint;\n            }\n        }\n        for (let i = 0; i < lastDot; i++) {\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = this.colorSelectionService.secondaryColor;\n            ctx.fillStyle = this.colorSelectionService.secondaryColor;\n            ctx.beginPath();\n            ctx.arc(this.lineData.mouseClicks[i].x, this.lineData.mouseClicks[i].y, width / 2, 0, 2 * Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n    }\n\n    drawFullLine(ctx: CanvasRenderingContext2D, line: Line): void {\n        line.storedLines.forEach((element) => {\n            ctx.strokeStyle = line.primaryColor;\n            ctx.lineCap = 'round';\n            ctx.lineWidth = line.lineWidth;\n            ctx.beginPath();\n            ctx.moveTo(element.startingPoint.x, element.startingPoint.y);\n            ctx.lineTo(element.endingPoint.x, element.endingPoint.y);\n            ctx.stroke();\n        });\n\n        if (line.isDot) {\n            const LAST_DOT = line.mouseClicks.length;\n            let doubleClickPoint: Vec2 | undefined;\n\n            // Remove the double click that doesnt need to be drawed on the canvas\n            if (line.hasLastPointBeenChanged) {\n                line.mouseClicks[line.mouseClicks.length - 2] = line.mouseClicks[line.mouseClicks.length - 1];\n                doubleClickPoint = line.mouseClicks.pop();\n            }\n            // If it's a double click holding shift adjust ending dot\n            if (line.isShiftDoubleClick) {\n                line.mouseClicks[line.mouseClicks.length - 1] = line.storedLines[line.storedLines.length - 1].endingPoint;\n            }\n\n            for (let i = 0; i < LAST_DOT - 1; i++) {\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = line.secondaryColor;\n                ctx.fillStyle = line.secondaryColor;\n                ctx.beginPath();\n                ctx.arc(line.mouseClicks[i].x, line.mouseClicks[i].y, line.dotWidth / 2, 0, 2 * Math.PI);\n                ctx.fill();\n                ctx.stroke();\n            }\n\n            if (line.hasLastPointBeenChanged) {\n                line.mouseClicks.push(doubleClickPoint as Vec2);\n            }\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SelectionBox } from '@app/classes/selection-box';\nimport { Vec2 } from '@app/classes/vec2';\nimport { ANGLE_HALF_TURN, MAX_ANGLE, ROTATION_STEP, ROTATION_STEP_ALT } from '@app/ressources/global-variables/global-variables';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RotateService {\n    initialSelection: SelectionBox = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n    selection: SelectionBox;\n    selectionImage: HTMLCanvasElement = document.createElement('canvas');\n    selectionImageCtx: CanvasRenderingContext2D;\n    angle: number = 0;\n    isRotationOver: boolean = true;\n    isAltKeyDown: boolean = false;\n    mouseWheel: boolean = false;\n    deltaRotation: number = ROTATION_STEP;\n\n    constructor(public drawingService: DrawingService) {}\n\n    initialize(selection: SelectionBox, selectionImage: HTMLCanvasElement): void {\n        this.initialSelection.startingPoint.x = selection.startingPoint.x;\n        this.initialSelection.startingPoint.y = selection.startingPoint.y;\n        this.initialSelection.height = selection.height;\n        this.initialSelection.width = selection.width;\n        this.selection = selection;\n        this.selectionImage = selectionImage;\n        this.selectionImageCtx = selectionImage.getContext('2d') as CanvasRenderingContext2D;\n    }\n\n    changeAngle(angle: number): void {\n        this.angle = angle;\n    }\n\n    onWheelEvent(event: WheelEvent): void {\n        this.mouseWheel = true;\n        this.isRotationOver = false;\n        const centerX = this.calculateCenter().x;\n        const centerY = this.calculateCenter().y;\n        this.setAngleRotation(event);\n        this.drawOnPreviewCanvas();\n        this.rotateSelectedCanvas(this.selectionImageCtx, centerX, centerY);\n    }\n\n    setAngleRotation(event: WheelEvent): void {\n        if (Math.abs(this.angle) >= MAX_ANGLE) {\n            this.angle = 0;\n        }\n        const newAngle = this.angle + (event.deltaY / Math.abs(event.deltaY)) * this.deltaRotation;\n        this.changeAngle(newAngle);\n    }\n\n    rotateSelectedCanvas(ctx: CanvasRenderingContext2D, centerX: number, centerY: number): void {\n        ctx.translate(centerX, centerY);\n        ctx.rotate(this.angle * (Math.PI / ANGLE_HALF_TURN));\n        ctx.translate(-centerX, -centerY);\n    }\n\n    calculateCenter(): Vec2 {\n        const centerX = this.selection.startingPoint.x + this.selection.width / 2;\n        const centerY = this.selection.startingPoint.y + this.selection.height / 2;\n        const centerSelection: Vec2 = { x: centerX, y: centerY };\n        return centerSelection;\n    }\n\n    rotatePreviewCanvas(): void {\n        const centerX = this.calculateCenter().x;\n        const centerY = this.calculateCenter().y;\n        this.drawingService.previewCtx.translate(centerX, centerY);\n        this.drawingService.previewCtx.rotate(this.angle * (Math.PI / ANGLE_HALF_TURN));\n        this.drawingService.previewCtx.translate(-centerX, -centerY);\n    }\n\n    drawOnPreviewCanvas(): void {\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        this.clearSelectionBackground();\n        this.drawingService.previewCtx.save();\n        this.rotatePreviewCanvas();\n        this.drawingService.previewCtx.drawImage(this.selectionImage, this.selection.startingPoint.x, this.selection.startingPoint.y);\n        this.drawingService.previewCtx.restore();\n    }\n\n    clearSelectionBackground(): void {\n        const currentFillStyle = this.drawingService.previewCtx.fillStyle;\n        this.drawingService.previewCtx.fillStyle = 'white';\n\n        this.drawingService.previewCtx.fillRect(\n            this.initialSelection.startingPoint.x,\n            this.initialSelection.startingPoint.y,\n            this.initialSelection.width,\n            this.initialSelection.height,\n        );\n\n        this.drawingService.previewCtx.globalCompositeOperation = 'destination-in';\n        this.drawingService.previewCtx.drawImage(this.selectionImage, this.initialSelection.startingPoint.x, this.initialSelection.startingPoint.y);\n        this.drawingService.previewCtx.globalCompositeOperation = 'source-over';\n\n        this.drawingService.previewCtx.fillStyle = currentFillStyle;\n    }\n\n    restoreSelection(): void {\n        this.drawOnPreviewCanvas();\n        this.isRotationOver = true;\n        this.angle = 0;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        if (event.key === 'Alt' && !this.isAltKeyDown) {\n            event.preventDefault();\n            this.isAltKeyDown = true;\n            this.deltaRotation = ROTATION_STEP_ALT;\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent): void {\n        if (this.isAltKeyDown && event.key === 'Alt') {\n            this.isAltKeyDown = false;\n            this.deltaRotation = ROTATION_STEP;\n        }\n    }\n}\n","export interface DrawingData {\n    id: string;\n    drawingPng: string;\n    name: string;\n    tags: string[];\n    fileName: string;\n}\n\nexport interface MetaData {\n    id: string;\n    name: string;\n    tags: string[];\n}\n\nexport interface DBData {\n    id: string;\n    name: string;\n    tags: string[];\n    fileName: string;\n}\n\nexport interface ImageData {\n    id: string;\n    drawingPng: string;\n}\n\nexport const ID_NAME = 'id';\nexport const NAME = 'name';\nexport const TAGS_NAME = 'tags';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { IEnvironment } from './IEnvironment';\n\nexport const environment: IEnvironment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NewDrawingModalComponent } from '@app/components/new-drawing-modal/new-drawing-modal.component';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class NewDrawingService {\n    constructor(public drawingService: DrawingService, public dialog: MatDialog) {}\n\n    openWarningModal(): void {\n        if (!this.drawingService.isCanvasBlank(this.drawingService.baseCtx)) {\n            this.dialog.open(NewDrawingModalComponent);\n        }\n    }\n}\n","export interface SidebarElementTooltips {\n    NEW_DRAWING_DESCRIPTION: string;\n    PENCIL_TOOL_DESCRIPTION: string;\n    PEN_TOOL_DESCRIPTION: string;\n    BRUSH_TOOL_DESCRIPTION: string;\n    SPRAY_TOOL_DESCRIPTION: string;\n    SQUARE_TOOL_DESCRIPTION: string;\n    CIRCLE_TOOL_DESCRIPTION: string;\n    LINE_TOOL_DESCRIPTION: string;\n    FILL_TOOL_DESCRIPTION: string;\n    ERASER_TOOL_DESCRIPTION: string;\n    PIPETTE_TOOL_DESCRIPTION: string;\n    POLYGON_TOOL_DESCRIPTION: string;\n    CIRCLE_SELECTION_TOOL_NAME: string;\n    SQUARE_SELECTION_TOOL_NAME: string;\n    STAMP_TOOL_DESCRIPTION: string;\n    HELP_DESCRIPTION: string;\n    UNDO_DESCRIPTION: string;\n    REDO_DESCRIPTION: string;\n    SAVE_DRAWING_DESCRIPTION: string;\n    CAROUSEL_DESCRIPTION: string;\n    EXPORT_DRAWING_DESCRIPTION: string;\n    SELECT_ALL_DESCRIPTION: string;\n    SEND_DESCRIPTION: string;\n    TEXT_TOOL_DESCRIPTION: string;\n    MAGIC_WAND_DESCRIPTION: string;\n    CUT_DESCRIPTION: string;\n    COPY_DESCRIPTION: string;\n    PASTE_DESCRIPTION: string;\n}\n\nexport const SIDEBAR_ELEMENT_TOOLTIPS: SidebarElementTooltips = {\n    MAGIC_WAND_DESCRIPTION: 'Baguette magique (V)',\n    CAROUSEL_DESCRIPTION: 'Carroussel de dessin (Ctrl + G)',\n    NEW_DRAWING_DESCRIPTION: 'Nouveau Dessin (Ctrl + O)',\n    PENCIL_TOOL_DESCRIPTION: 'Crayon (C)',\n    PEN_TOOL_DESCRIPTION: 'Plume (P)',\n    BRUSH_TOOL_DESCRIPTION: 'Pinceau (W)',\n    SPRAY_TOOL_DESCRIPTION: 'Aérosol (A)',\n    SQUARE_TOOL_DESCRIPTION: 'Rectangle (1)',\n    CIRCLE_TOOL_DESCRIPTION: 'Ellipse (2)',\n    LINE_TOOL_DESCRIPTION: 'Ligne (L)',\n    FILL_TOOL_DESCRIPTION: 'Sceau (B)',\n    ERASER_TOOL_DESCRIPTION: 'Efface (E)',\n    TEXT_TOOL_DESCRIPTION: 'Texte (T)',\n    PIPETTE_TOOL_DESCRIPTION: 'Pipette (I)',\n    POLYGON_TOOL_DESCRIPTION: 'Polygone (3)',\n    STAMP_TOOL_DESCRIPTION: 'Étampe (D)',\n    CIRCLE_SELECTION_TOOL_NAME: 'Sélection par ellipse (S)',\n    SQUARE_SELECTION_TOOL_NAME: 'Sélection par rectangle (R)',\n    HELP_DESCRIPTION: \"Guide d'utilisation\",\n    UNDO_DESCRIPTION: 'Annuler (Ctrl + Z)',\n    REDO_DESCRIPTION: 'Refaire (Ctrl + Shift + Z)',\n    SAVE_DRAWING_DESCRIPTION: 'Sauvegarder dessin (Ctrl + S)',\n    EXPORT_DRAWING_DESCRIPTION: 'Exporter dessin (Ctrl + E)',\n    SELECT_ALL_DESCRIPTION: 'Tout sélectionner (Ctrl + A)',\n    SEND_DESCRIPTION: 'Envoyer un dessin',\n    CUT_DESCRIPTION: 'Couper la sélection (Ctrl + X)',\n    COPY_DESCRIPTION: 'Copier la sélection (Ctrl + C)',\n    PASTE_DESCRIPTION: 'Coller la sélection (Ctrl + V)',\n};\n","import { Injectable } from '@angular/core';\nimport { SelectionBox } from '@app/classes/selection-box';\nimport { Vec2 } from '@app/classes/vec2';\nimport { AlignmentNames, ALIGNMENT_NAMES } from '@app/ressources/global-variables/alignment-names';\nimport { GridInfo } from '@app/ressources/global-variables/grid-info';\nimport { MoveService } from '@app/services/tools/transformation-services/move.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MagnetismService {\n    alignmentNames: AlignmentNames = ALIGNMENT_NAMES;\n\n    constructor(public moveService: MoveService) {}\n\n    magnetismCoordinateReference(alignement: string, selection: SelectionBox): Vec2 {\n        switch (alignement) {\n            case this.alignmentNames.ALIGN_TOP_CENTER_NAME: {\n                return { x: selection.startingPoint.x + selection.width / 2, y: selection.startingPoint.y };\n            }\n            case this.alignmentNames.ALIGN_TOP_RIGHT_NAME: {\n                return { x: selection.startingPoint.x + selection.width, y: selection.startingPoint.y };\n            }\n            case this.alignmentNames.ALIGN_CENTER_LEFT_NAME: {\n                return { x: selection.startingPoint.x, y: selection.startingPoint.y + selection.height / 2 };\n            }\n            case this.alignmentNames.ALIGN_CENTER_RIGHT_NAME: {\n                return { x: selection.startingPoint.x + selection.width, y: selection.startingPoint.y + selection.height / 2 };\n            }\n            case this.alignmentNames.ALIGN_CENTER_NAME: {\n                return {\n                    x: selection.startingPoint.x + selection.width / 2,\n                    y: selection.startingPoint.y + selection.height / 2,\n                };\n            }\n            case this.alignmentNames.ALIGN_BOTTOM_LEFT_NAME: {\n                return { x: selection.startingPoint.x, y: selection.startingPoint.y + selection.height };\n            }\n            case this.alignmentNames.ALIGN_BOTTOM_CENTER_NAME: {\n                return { x: selection.startingPoint.x + selection.width / 2, y: selection.startingPoint.y + selection.height };\n            }\n            case this.alignmentNames.ALIGN_BOTTOM_RIGHT_NAME: {\n                return { x: selection.startingPoint.x + selection.width, y: selection.startingPoint.y + selection.height };\n            }\n            default: {\n                return { x: selection.startingPoint.x, y: selection.startingPoint.y };\n            }\n        }\n    }\n\n    magnetismXAxisChange(mousePosDifferenceX: number, gridInfo: GridInfo, selection: SelectionBox): number {\n        const startingCoordRefX = this.magnetismCoordinateReference(gridInfo.ALIGNMENT, selection).x;\n        const coordToSnapX = startingCoordRefX + mousePosDifferenceX;\n        const lowestXDistance = coordToSnapX % gridInfo.SQUARE_SIZE;\n        if (lowestXDistance > gridInfo.SQUARE_SIZE / 2) {\n            mousePosDifferenceX = mousePosDifferenceX + gridInfo.SQUARE_SIZE;\n        }\n        const changeX = mousePosDifferenceX - lowestXDistance;\n        return changeX;\n    }\n\n    magnetismYAxisChange(mousePosDifferenceY: number, gridInfo: GridInfo, selection: SelectionBox): number {\n        const startingCoordRefY = this.magnetismCoordinateReference(gridInfo.ALIGNMENT, selection).y;\n        const coordToSnapY = startingCoordRefY + mousePosDifferenceY;\n        const lowestYDistance = coordToSnapY % gridInfo.SQUARE_SIZE;\n        if (lowestYDistance > gridInfo.SQUARE_SIZE / 2) {\n            mousePosDifferenceY = mousePosDifferenceY + gridInfo.SQUARE_SIZE;\n        }\n        const changeY = mousePosDifferenceY - lowestYDistance;\n        return changeY;\n    }\n\n    onMouseMoveMagnetism(changeX: number, changeY: number): void {\n        this.moveService.onMouseMove(changeX, changeY);\n    }\n}\n","import { AfterViewInit, Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { MAXIMUM_NUMBER_OF_COLORS, MAX_OPACITY } from '@app/ressources/global-variables/global-variables';\nimport { MAXIMUM_RGBA_VALUE } from '@app/ressources/global-variables/rgba';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { PipetteService } from '@app/services/tools/pipette.service';\n@Component({\n    selector: 'app-color-picker',\n    templateUrl: './color-picker.component.html',\n    styleUrls: ['./color-picker.component.scss'],\n})\nexport class ColorPickerComponent implements AfterViewInit {\n    @ViewChild('primary', { read: ElementRef }) primaryColorElement: ElementRef;\n    @ViewChild('secondary', { read: ElementRef }) secondaryColorElement: ElementRef;\n    primaryColor: string = '#000000';\n    secondaryColor: string = '#000000';\n    colors: string[] = ['#000000'];\n    primaryOpacity: number = MAX_OPACITY;\n    secondaryOpacity: number = MAX_OPACITY;\n\n    constructor(public colorSelectionService: ColorSelectionService, public hotkeyService: HotkeyService, public pipetteService: PipetteService) {\n        this.colorSelectionService.primaryColor = this.hexToRGBA(this.primaryColor, this.primaryOpacity);\n        this.colorSelectionService.secondaryColor = this.hexToRGBA(this.secondaryColor, this.secondaryOpacity);\n    }\n\n    @HostListener('keyup', ['$event'])\n    onInput(e: KeyboardEvent): void {\n        e.stopPropagation();\n    }\n\n    changePrimaryColor(color: string): void {\n        this.primaryColor = color;\n        this.colors.unshift(this.primaryColor);\n        if (this.colors.length > MAXIMUM_NUMBER_OF_COLORS) {\n            this.colors.pop();\n        }\n        this.colorSelectionService.primaryColor = this.hexToRGBA(color, this.primaryOpacity);\n    }\n\n    changeSecondaryColor(color: string): void {\n        this.secondaryColor = color;\n        this.colors.unshift(this.secondaryColor);\n        if (this.colors.length > MAXIMUM_NUMBER_OF_COLORS) {\n            this.colors.pop();\n        }\n        this.colorSelectionService.secondaryColor = this.hexToRGBA(color, this.secondaryOpacity);\n    }\n\n    swapColors(): void {\n        const temp: string = this.primaryColor;\n        this.primaryColor = this.secondaryColor;\n        this.secondaryColor = temp;\n        this.colorSelectionService.primaryColor = this.hexToRGBA(this.primaryColor, this.primaryOpacity);\n        this.colorSelectionService.secondaryColor = this.hexToRGBA(this.secondaryColor, this.secondaryOpacity);\n    }\n\n    decrementPrimaryOpacity(): void {\n        if (this.primaryOpacity > 0) {\n            --this.primaryOpacity;\n        }\n        this.colorSelectionService.primaryColor = this.hexToRGBA(this.primaryColor, this.primaryOpacity);\n    }\n\n    incrementPrimaryOpacity(): void {\n        if (this.primaryOpacity < MAX_OPACITY) {\n            ++this.primaryOpacity;\n        }\n        this.colorSelectionService.primaryColor = this.hexToRGBA(this.primaryColor, this.primaryOpacity);\n    }\n\n    decrementSecondaryOpacity(): void {\n        if (this.secondaryOpacity > 0) {\n            --this.secondaryOpacity;\n        }\n        this.colorSelectionService.secondaryColor = this.hexToRGBA(this.secondaryColor, this.secondaryOpacity);\n    }\n\n    incrementSecondaryOpacity(): void {\n        if (this.secondaryOpacity < MAX_OPACITY) {\n            ++this.secondaryOpacity;\n        }\n        this.colorSelectionService.secondaryColor = this.hexToRGBA(this.secondaryColor, this.secondaryOpacity);\n    }\n\n    changePrimaryOpacity(opacity: number, event: KeyboardEvent): void {\n        event.stopPropagation();\n        if (isNaN(opacity) || opacity < 0 || opacity > MAX_OPACITY || opacity.toString() === '') {\n            this.primaryOpacity = MAX_OPACITY;\n            this.colorSelectionService.primaryColor = this.hexToRGBA(this.primaryColor, this.primaryOpacity);\n            alert(\"L'opacité doit être un nombre entre 0 et 100.\");\n        } else {\n            this.primaryOpacity = opacity;\n            this.colorSelectionService.primaryColor = this.hexToRGBA(this.primaryColor, this.primaryOpacity);\n        }\n    }\n\n    changeSecondaryOpacity(opacity: number, event: KeyboardEvent): void {\n        event.stopPropagation();\n        if (isNaN(opacity) || opacity < 0 || opacity > MAX_OPACITY || opacity.toString() === '') {\n            this.secondaryOpacity = MAX_OPACITY;\n            alert(\"L'opacité doit être un nombre entre 0 et 100.\");\n        } else {\n            this.secondaryOpacity = opacity;\n        }\n        this.colorSelectionService.secondaryColor = this.hexToRGBA(this.secondaryColor, this.secondaryOpacity);\n    }\n\n    restorePreviousColor(color: string, isPrimary: boolean): void {\n        if (isPrimary) {\n            this.primaryColor = color;\n            this.colorSelectionService.primaryColor = this.hexToRGBA(color, this.primaryOpacity);\n        } else {\n            this.secondaryColor = color;\n            this.colorSelectionService.secondaryColor = this.hexToRGBA(color, this.secondaryOpacity);\n        }\n    }\n\n    hexToRGBA(color: string, opacity: number): string {\n        const SLICING_END = 16;\n        const SLICING_START_R_1 = -6;\n        const SLICING_START_R_2 = -4;\n        const SLICING_START_G_1 = -4;\n        const SLICING_START_G_2 = -2;\n        const SLICING_START_B = -2;\n        const r: number = parseInt(color.slice(SLICING_START_R_1, SLICING_START_R_2), SLICING_END);\n        const g: number = parseInt(color.slice(SLICING_START_G_1, SLICING_START_G_2), SLICING_END);\n        const b: number = parseInt(color.slice(SLICING_START_B), SLICING_END);\n        const rgba: string = 'rgba(' + r + ',' + g + ',' + b + ',' + (opacity / MAX_OPACITY).toString() + ')';\n        return rgba;\n    }\n\n    ngAfterViewInit(): void {\n        this.pipetteService.primaryColor.subscribe((data: string[]) => {\n            this.changePrimaryColor(data[0]);\n            this.primaryOpacity = Math.round((Number(data[1]) / MAXIMUM_RGBA_VALUE) * MAX_OPACITY);\n            const primary = this.primaryColorElement.nativeElement;\n            primary.value = data[0];\n        });\n        this.pipetteService.secondaryColor.subscribe((data: string[]) => {\n            this.changeSecondaryColor(data[0]);\n            this.secondaryOpacity = Math.round((Number(data[1]) / MAXIMUM_RGBA_VALUE) * MAX_OPACITY);\n            const secondary = this.secondaryColorElement.nativeElement;\n            secondary.value = data[0];\n        });\n    }\n\n    onFocus(): void {\n        this.hotkeyService.isHotkeyEnabled = false;\n    }\n\n    onFocusOut(): void {\n        this.hotkeyService.isHotkeyEnabled = true;\n    }\n}\n","<div class=\"color-picker\">\n    <h4>Couleur</h4>\n    <div class=\"color-selection-container\">\n        <div>\n            <p>Couleur principale</p>\n            <div class=\"choice-container\">\n                <input\n                    class=\"color-input\"\n                    #primary\n                    id=\"primary\"\n                    type=\"color\"\n                    [value]=\"this.primaryColor\"\n                    (change)=\"this.changePrimaryColor($event.target.value)\"\n                />\n                <div id=\"sliderDetails\">\n                    <button class=\"grid-element\" (click)=\"decrementPrimaryOpacity()\">-</button>\n                    <input\n                        class=\"opacity-input grid-element\"\n                        id=\"primary-opacity\"\n                        (change)=\"this.changePrimaryOpacity($event.target.value, $event)\"\n                        [(ngModel)]=\"this.primaryOpacity\"\n                        type=\"text\"\n                        [min]=\"0\"\n                        [max]=\"100\"\n                        (focus)=\"onFocus()\"\n                        (focusout)=\"onFocusOut()\"\n                    />\n                    <button class=\"grid-element\" (click)=\"incrementPrimaryOpacity()\">+</button>\n                </div>\n            </div>\n\n            <p>Couleur secondaire</p>\n            <div class=\"choice-container\">\n                <input\n                    class=\"color-input\"\n                    #secondary\n                    id=\"secondary\"\n                    type=\"color\"\n                    [value]=\"this.secondaryColor\"\n                    (change)=\"this.changeSecondaryColor($event.target.value)\"\n                />\n                <div id=\"sliderDetails\">\n                    <button class=\"grid-element\" (click)=\"decrementSecondaryOpacity()\">-</button>\n                    <input\n                        class=\"opacity-input grid-element\"\n                        id=\"secondary-opacity\"\n                        (change)=\"this.changeSecondaryOpacity($event.target.value, $event)\"\n                        [(ngModel)]=\"this.secondaryOpacity\"\n                        type=\"text\"\n                        [min]=\"0\"\n                        max=\"100\"\n                        (focus)=\"onFocus()\"\n                        (focusout)=\"onFocusOut()\"\n                    />\n                    <button class=\"grid-element\" (click)=\"incrementSecondaryOpacity()\">+</button>\n                </div>\n            </div>\n        </div>\n\n        <mat-icon id=\"swap-button\" (click)=\"this.swapColors()\">swap_vert</mat-icon>\n    </div>\n\n    <hr />\n    <p>Récemment utilisée</p>\n    <div class=\"previous-color\">\n        <button\n            *ngFor=\"let color of colors\"\n            class=\"color\"\n            [ngStyle]=\"{ 'background-color': color }\"\n            (click)=\"this.restorePreviousColor(color, true)\"\n            (contextmenu)=\"this.restorePreviousColor(color, false)\"\n        ></button>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TWO_DECIMAL_MULTIPLIER } from '@app/ressources/global-variables/global-variables';\n\n@Component({\n    selector: 'app-slider',\n    templateUrl: './slider.component.html',\n    styleUrls: ['./slider.component.scss'],\n})\nexport class SliderComponent {\n    @Input() min: number;\n    @Input() max: number;\n    @Input() step: number;\n    @Input() value: number;\n    @Input() title: string;\n\n    @Output() valueChange: EventEmitter<number> = new EventEmitter();\n\n    decrement(): void {\n        if (this.value > this.min) {\n            this.value -= this.step;\n            this.value = Math.round((this.value + Number.EPSILON) * TWO_DECIMAL_MULTIPLIER) / TWO_DECIMAL_MULTIPLIER;\n        }\n        this.changeValue();\n    }\n\n    increment(): void {\n        if (this.value < this.max) {\n            this.value += this.step;\n            this.value = Math.round((this.value + Number.EPSILON) * TWO_DECIMAL_MULTIPLIER) / TWO_DECIMAL_MULTIPLIER;\n        }\n        this.changeValue();\n    }\n\n    changeValue(): void {\n        this.valueChange.emit(this.value);\n    }\n}\n","<div id=\"slider\">\n    <!-- <hr class=\"topBorder\" /> -->\n    <p>{{ title }}</p>\n    <mat-slider [min]=\"min\" [max]=\"max\" [step]=\"step\" [(value)]=\"value\" (change)=\"this.changeValue()\"> </mat-slider>\n    <div id=\"sliderDetails\">\n        <input type=\"text\" [(value)]=\"value\" (change)=\"this.changeValue()\" [min]=\"min\" [max]=\"max\" readonly />\n        <div>\n            <button (click)=\"decrement()\">-</button>\n            <button (click)=\"increment()\">+</button>\n        </div>\n    </div>\n    <hr class=\"bottomBorder\" />\n</div>\n","import { Component } from '@angular/core';\nimport { PolygonService } from '@app/services/tools/polygon.service';\n\n@Component({\n    selector: 'app-polygon-attributes',\n    templateUrl: './polygon-attributes.component.html',\n    styleUrls: ['./polygon-attributes.component.scss'],\n})\nexport class PolygonAttributesComponent {\n    toolWidth: number;\n    fillStyle: number;\n    numberOfSides: number;\n\n    constructor(public polygonService: PolygonService) {\n        this.toolWidth = polygonService.getWidth();\n        this.fillStyle = polygonService.getFillStyle();\n        this.numberOfSides = polygonService.getSides();\n    }\n\n    changeBorderWidth(newWidth: number): void {\n        this.toolWidth = newWidth;\n        this.polygonService.changeWidth(newWidth);\n    }\n\n    changeFillStyle(newFillStyle: number): void {\n        this.polygonService.changeFillStyle(newFillStyle);\n    }\n\n    changeNumberOfSides(sides: number): void {\n        this.numberOfSides = sides;\n        this.polygonService.setSides(sides);\n    }\n}\n","<div id=\"polygonAttributes\">\n    <h2 class=\"toolName\">{{ polygonService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Épaisseur Contour\"\n        [min]=\"polygonService.minBorderWidth\"\n        [max]=\"polygonService.maxBorderWidth\"\n        [step]=\"1\"\n        [value]=\"toolWidth\"\n        (valueChange)=\"changeBorderWidth($event)\"\n    ></app-slider>\n    <app-slider\n        title=\"Nombre de points\"\n        [min]=\"polygonService.minNumberOfSides\"\n        [max]=\"polygonService.maxNumberOfSides\"\n        [step]=\"1\"\n        [value]=\"numberOfSides\"\n        (valueChange)=\"changeNumberOfSides($event)\"\n    ></app-slider>\n    <app-fill-types-selection (valueChange)=\"changeFillStyle($event)\" [currentFillStyle]=\"this.fillStyle\"></app-fill-types-selection>\n</div>\n","export interface FillStyles {\n    FILL_AND_BORDER: number;\n    FILL: number;\n    BORDER: number;\n    DASHED: number;\n}\n\nexport const FILL_STYLES = {\n    FILL_AND_BORDER: 0,\n    FILL: 1,\n    BORDER: 2,\n    DASHED: 3,\n};\n","// Global variables are stored here\nexport const MINIMUM_CANVAS_WIDTH = 250;\nexport const MINIMUM_CANVAS_HEIGHT = 250;\nexport const MINIMUM_WORKSPACE_WIDTH = 500;\nexport const MINIMUM_WORKSPACE_HEIGHT = 500;\nexport const ZOOM_RADIUS = 75;\nexport const HALF_RATIO = 0.5;\nexport const TOOLTIP_DELAY = 500;\nexport const MAXIMUM_DISTANCE_LINE_CONNECTION = 20;\nexport const DEGREES_180 = 180;\nexport const MAXIMUM_NUMBER_OF_COLORS = 10;\nexport const MAX_OPACITY = 100;\nexport const ONE_NEGATIVE_PIXEL = -1;\nexport const MAX_TOOL_WIDTH = 50;\nexport const MIN_TOOL_WIDTH = 1;\nexport const MIN_ERASER_TOOL_WIDTH = 5;\nexport const MAX_BORDER = 20;\nexport const MIN_BORDER = 1;\nexport const DASH_LENGTH = 5;\nexport const DASH_SPACE_LENGTH = 3;\nexport const GROWTH_ZOOM_PIPETTE = 16;\nexport const MIN_TOLERANCE_VALUE = 0;\nexport const MAX_TOLERANCE_VALUE = 100;\nexport const MAX_PERCENTAGE = 100;\nexport const RGBA_STRING_ = 100;\nexport const CONFIRM_SAVED_DURATION = 5000;\nexport const CONFIRM_KEY_PRESS_DURATION = 500;\nexport const KEY_PRESS_INTERVAL_DURATION = 100;\nexport const SELECTION_MOVE_STEP_SIZE = 3;\nexport const LINE_WIDTH_POLYGON_CORRECTION = 1.4;\nexport const MIN_GRID_SQUARE_SIZE = 5;\nexport const MAX_GRID_SQUARE_SIZE = 200;\nexport const MIN_GRID_OPACITY = 10;\nexport const MAX_GRID_OPACITY = 100;\nexport const DEFAULT_GRID_SIZE = 5;\nexport const GRID_STEP = 5;\nexport const MAGIC_WAND_BORDER_ONE_SIDE = 2;\nexport const MAGIC_WAND_BORDER_BOTH_SIDES = 4;\nexport const MAGIC_WAND_TOLERANCE = 10;\nexport const MAGIC_WAND_SECONDARY_TOLERANCE = 50;\nexport const OFFSET = -1;\n\nexport const DEFAULT_GRID_OPACITY = 100;\nexport const TWO_DECIMAL_MULTIPLIER = 100;\n\n// constant for text service\nexport const MARGIN = 5;\nexport const SIZE_STEP = 5;\nexport const MIN_TEXT_TOOL_SIZE = 15;\nexport const MAX_TEXT_TOOL_SIZE = 100;\nexport const MOVE_DOWN = -1;\n\n// constant for rotation service\nexport const ANGLE_HALF_TURN = 180;\nexport const MAX_ANGLE = 360;\nexport const ROTATION_STEP_ALT = 1;\n\n// constants for circle selection and square selection\nexport const MAGNETISM_NAME = 'Magnétisme';\n\n// constants for spray service\nexport const SPRAY_DENSITY = 40;\nexport const MIN_SPRAY_WIDTH = 5;\nexport const MIN_SPRAY_DOT_WIDTH = 1;\nexport const MAX_SPRAY_DOT_WIDTH = 20;\nexport const MIN_SPRAY_FREQUENCY = 10;\nexport const MAX_SPRAY_FREQUENCY = 50;\nexport const ONE_SECOND = 1000;\n\n// constants for pen service\nexport const ROTATION_STEP = 15;\n\nexport const MAX_NUMBER_VISIBLE_DRAWINGS = 3;\nexport const MIN_SIDES = 3;\nexport const MAX_SIDES = 12;\nexport const MAX_TAG_LENGTH = 15;\nexport const MAX_NAME_LENGTH = 15;\nexport const SELECTION_POINT_WIDTH = 6;\nexport const MAX_NUMBER_TAG = 5;\nexport const MAX_OPACITY_RGBA = 255;\n\nexport enum Quadrant {\n    TOP_RIGHT = 0,\n    TOP_LEFT = 1,\n    BOTTOM_LEFT = 2,\n    BOTTOM_RIGHT = 3,\n}\n\nexport enum LineAngle {\n    DEGREES_0 = 0,\n    DEGREES_45 = 1,\n    DEGREES_90 = 2,\n    DEGREES_135 = 3,\n    DEGREES_180 = 4,\n    DEGREES_225 = 5,\n    DEGREES_270 = 6,\n    DEGREES_315 = 7,\n}\n\nexport enum MouseButton {\n    LEFT = 0,\n    MIDDLE = 1,\n    RIGHT = 2,\n    BACK = 3,\n    FORWARD = 4,\n}\n\nexport enum SelectionType {\n    SQUARE = 0,\n    CIRCLE = 1,\n    WAND = 2,\n}\n","import { Injectable } from '@angular/core';\nimport { Resize } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { CANVAS_RESIZING_POINTS } from '@app/ressources/global-variables/canvas-resizing-points';\nimport {\n    HALF_RATIO,\n    MINIMUM_CANVAS_HEIGHT,\n    MINIMUM_CANVAS_WIDTH,\n    MINIMUM_WORKSPACE_HEIGHT,\n    MINIMUM_WORKSPACE_WIDTH,\n    MouseButton,\n} from '@app/ressources/global-variables/global-variables';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ResizeDrawingService {\n    canvasSize: Vec2;\n    previewSize: Vec2;\n    mouseDownCoord: Vec2;\n    mouseDown: boolean = false;\n    serviceCaller: string;\n    workSpaceSize: Vec2;\n    resizeData: Resize;\n    mouseEvent: MouseEvent;\n    imageData: ImageData;\n\n    constructor(public drawingService: DrawingService, public undoRedoStackService: UndoRedoStackService) {}\n\n    setDefaultCanvasSize(): void {\n        if (this.workSpaceSize.x > MINIMUM_WORKSPACE_WIDTH) {\n            this.canvasSize.x = this.workSpaceSize.x * HALF_RATIO;\n        } else {\n            this.canvasSize.x = MINIMUM_CANVAS_WIDTH;\n        }\n\n        if (this.workSpaceSize.y > MINIMUM_WORKSPACE_HEIGHT) {\n            this.canvasSize.y = this.workSpaceSize.y * HALF_RATIO;\n        } else {\n            this.canvasSize.y = MINIMUM_CANVAS_HEIGHT;\n        }\n\n        this.previewSize.x = this.canvasSize.x;\n        this.previewSize.y = this.canvasSize.y;\n\n        setTimeout(() => {\n            this.drawingService.initializeBaseCanvas();\n        });\n    }\n\n    resizeCanvasSize(width: number, height: number): void {\n        this.drawingService.canvas.width = width;\n        this.drawingService.canvas.height = height;\n        this.drawingService.previewCanvas.width = width;\n        this.drawingService.previewCanvas.height = height;\n        this.previewSize.x = width;\n        this.previewSize.y = height;\n    }\n\n    restoreCanvas(resizeData: Resize): void {\n        this.resizeCanvasSize(resizeData.canvasSize.x, resizeData.canvasSize.y);\n        this.drawingService.baseCtx.putImageData(resizeData.imageData, 0, 0);\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.mouseDown = event.button === MouseButton.LEFT;\n        if (this.mouseDown) {\n            this.mouseDownCoord = this.getPositionFromMouse(event);\n            const target = event.target as HTMLElement;\n            this.serviceCaller = target.id;\n        }\n    }\n\n    onMouseUp(): void {\n        if (this.mouseDown) {\n            this.imageData = this.drawingService.getCanvasData();\n            const previewData: ImageData = this.drawingService.getPreviewData();\n\n            this.canvasSize.x = this.previewSize.x;\n            this.canvasSize.y = this.previewSize.y;\n\n            this.updateResizeData();\n            this.undoRedoStackService.updateStack(this.resizeData);\n\n            setTimeout(() => {\n                this.drawingService.initializeBaseCanvas();\n                this.drawingService.baseCtx.putImageData(this.imageData, 0, 0);\n                this.drawingService.previewCtx.putImageData(previewData, 0, 0);\n            });\n        }\n        this.mouseDown = false;\n        this.drawingService.autoSave();\n    }\n\n    getPositionFromMouse(event: MouseEvent): Vec2 {\n        return { x: event.clientX, y: event.clientY };\n    }\n\n    resizeCanvas(event: MouseEvent): void {\n        switch (this.serviceCaller) {\n            case CANVAS_RESIZING_POINTS.VERTICAL:\n                this.verticalResize(event);\n                break;\n            case CANVAS_RESIZING_POINTS.HORIZONTAL:\n                this.horizontalResize(event);\n                break;\n            case CANVAS_RESIZING_POINTS.VERTICAL_AND_HORIZONTAL:\n                this.verticalAndHorizontalResize(event);\n                break;\n            default:\n        }\n    }\n\n    private verticalResize(event: MouseEvent): void {\n        if (this.mouseDown) {\n            const mousePosition = this.getPositionFromMouse(event);\n            const mousePositionChangeY = mousePosition.y - this.mouseDownCoord.y;\n            const newCanvasHeight = this.previewSize.y + mousePositionChangeY;\n            if (newCanvasHeight >= MINIMUM_CANVAS_HEIGHT) {\n                this.previewSize.y = newCanvasHeight;\n            }\n            this.mouseDownCoord = mousePosition;\n        }\n    }\n\n    private verticalAndHorizontalResize(event: MouseEvent): void {\n        if (this.mouseDown) {\n            const mousePosition = this.getPositionFromMouse(event);\n            const mousePositionChangeY = mousePosition.y - this.mouseDownCoord.y;\n            const newCanvasHeight = this.previewSize.y + mousePositionChangeY;\n            if (newCanvasHeight >= MINIMUM_CANVAS_HEIGHT) {\n                this.previewSize.y = newCanvasHeight;\n            }\n            const mousePositionChangeX = mousePosition.x - this.mouseDownCoord.x;\n            const newCanvasWidth = this.previewSize.x + mousePositionChangeX;\n            if (newCanvasWidth >= MINIMUM_CANVAS_WIDTH) {\n                this.previewSize.x = newCanvasWidth;\n            }\n            this.mouseDownCoord = mousePosition;\n        }\n    }\n\n    private horizontalResize(event: MouseEvent): void {\n        if (this.mouseDown) {\n            const mousePosition = this.getPositionFromMouse(event);\n            const mousePositionChangeX = mousePosition.x - this.mouseDownCoord.x;\n            const newCanvasWidth = this.previewSize.x + mousePositionChangeX;\n            if (newCanvasWidth >= MINIMUM_CANVAS_WIDTH) {\n                this.previewSize.x = newCanvasWidth;\n            }\n            this.mouseDownCoord = mousePosition;\n        }\n    }\n\n    private updateResizeData(): void {\n        this.resizeData = {\n            type: 'resize',\n            canvasSize: { x: this.canvasSize.x, y: this.canvasSize.y },\n            imageData: this.imageData,\n        };\n    }\n}\n","import { Component } from '@angular/core';\nimport { SprayService } from '@app/services/tools/spray.service';\n\n@Component({\n    selector: 'app-spray-attributes',\n    templateUrl: './spray-attributes.component.html',\n    styleUrls: ['./spray-attributes.component.scss'],\n})\nexport class SprayAttributesComponent {\n    toolWidth: number;\n    dotWidth: number;\n    sprayFrequency: number;\n\n    constructor(public sprayService: SprayService) {\n        this.toolWidth = sprayService.width;\n        this.dotWidth = sprayService.dotWidth;\n        this.sprayFrequency = sprayService.sprayFrequency;\n    }\n\n    changeWidth(newWidth: number): void {\n        this.toolWidth = newWidth;\n        this.sprayService.changeWidth(this.toolWidth);\n    }\n\n    changeDotWidth(newWidth: number): void {\n        this.dotWidth = newWidth;\n        this.sprayService.changeDotWidth(this.dotWidth);\n    }\n\n    changeSprayFrequency(newSprayFrequency: number): void {\n        this.sprayFrequency = newSprayFrequency;\n        this.sprayService.changeSprayFrequency(newSprayFrequency);\n    }\n}\n","<div id=\"sprayAttributes\">\n    <h2 class=\"toolName\">{{ sprayService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Diamètre du jet\"\n        [min]=\"sprayService.minToolWidth\"\n        [max]=\"sprayService.maxToolWidth\"\n        [step]=\"1\"\n        [value]=\"toolWidth\"\n        (valueChange)=\"changeWidth($event)\"\n    >\n    </app-slider>\n    <app-slider\n        title=\"Diamètre des gouttes\"\n        [min]=\"sprayService.minDotWidth\"\n        [max]=\"sprayService.maxDotWidth\"\n        [step]=\"1\"\n        [value]=\"dotWidth\"\n        (valueChange)=\"changeDotWidth($event)\"\n    >\n    </app-slider>\n    <app-slider\n        title=\"Émission par seconde\"\n        [min]=\"sprayService.minFrequency\"\n        [max]=\"sprayService.maxFrequency\"\n        [step]=\"1\"\n        [value]=\"sprayFrequency\"\n        (valueChange)=\"changeSprayFrequency($event)\"\n    >\n    </app-slider>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatabaseService } from '@app/services/database/database.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { ResizeDrawingService } from '@app/services/resize-drawing/resize-drawing.service';\nimport { ServerResponseService } from '@app/services/server-response/server-response.service';\nimport { DBData } from '@common/communication/drawing-data';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ContinueDrawingService {\n    isLastDrawing: boolean = false;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n    filteredMetadata: DBData[] = [];\n    currentRoute: string;\n    checkOldDrawing: boolean;\n    width: number;\n    private isDrawingLoaded: boolean = false;\n\n    constructor(\n        public drawingService: DrawingService,\n        public resizeDrawingService: ResizeDrawingService,\n        public router: Router,\n        public serverResponseService: ServerResponseService,\n        public databaseService: DatabaseService,\n    ) {}\n\n    continueDrawing(): void {\n        const sourceDrawingURI = localStorage.getItem('drawingKey') as string;\n        const savedCanvasWidth = Number(localStorage.getItem('canvasWidth'));\n        const savedCanvasHeight = Number(localStorage.getItem('canvasHeight'));\n        this.convertURIToImageData(sourceDrawingURI, savedCanvasWidth, savedCanvasHeight);\n    }\n\n    async convertURIToImageData(URI: string, savedCanvasWidth: number, savedCanvasHeight: number): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            if (URI == null) return reject();\n            const context = this.drawingService.baseCtx;\n            const image = new Image();\n            image.src = URI;\n            image.addEventListener(\n                'load',\n                () => {\n                    if (!this.isDrawingLoaded) {\n                        this.resizeDrawingService.resizeCanvasSize(savedCanvasWidth, savedCanvasHeight);\n                        context.drawImage(image, 0, 0, savedCanvasWidth, savedCanvasHeight);\n                        resolve();\n                        this.isDrawingLoaded = true;\n                    }\n                },\n                false,\n            );\n        });\n    }\n\n    loadOldDrawing(): boolean {\n        this.isDrawingLoaded = false;\n        this.drawingService.isLastDrawing = localStorage.length > 0;\n        this.router.navigateByUrl('/editor');\n        return this.isLastDrawing;\n    }\n\n    setLastDrawing(): void {\n        this.drawingService.isLastDrawing = localStorage.length > 0;\n    }\n\n    unlockContinueDrawing(): void {\n        this.drawingService.isLastDrawing = false;\n    }\n\n    clearCanvas(): void {\n        this.drawingService.clearCanvas(this.drawingService.baseCtx);\n    }\n}\n","export interface SidebarElements {\n    NEW_DRAWING_NAME: string;\n    CAROUSEL_NAME: string;\n    SAVE_SERVER_NAME: string;\n    EXPORT_DRAWING_NAME: string;\n    SELECT_ALL: string;\n    UNDO: string;\n    REDO: string;\n}\n\nexport const SIDEBAR_ELEMENTS: SidebarElements = {\n    NEW_DRAWING_NAME: 'NouveauDessin',\n    CAROUSEL_NAME: 'Carousel',\n    SAVE_SERVER_NAME: 'SauvegardeServeur',\n    EXPORT_DRAWING_NAME: 'ExporterDessin',\n    SELECT_ALL: 'Tout sélectionner',\n    UNDO: 'Annuler',\n    REDO: 'Refaire',\n};\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { ResizeDrawingService } from '@app/services/resize-drawing/resize-drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n\n@Component({\n    selector: 'app-new-drawing-modal',\n    templateUrl: './new-drawing-modal.component.html',\n    styleUrls: ['./new-drawing-modal.component.scss'],\n})\nexport class NewDrawingModalComponent implements OnInit, OnDestroy {\n    constructor(\n        public drawingService: DrawingService,\n        public resizeDrawingService: ResizeDrawingService,\n        public hotkeyService: HotkeyService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {}\n\n    ngOnInit(): void {\n        this.hotkeyService.isHotkeyEnabled = false;\n    }\n    createNewDrawing(): void {\n        this.resizeDrawingService.setDefaultCanvasSize();\n        this.drawingService.clearCanvas(this.drawingService.baseCtx);\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        this.undoRedoStackService.resetStack();\n    }\n\n    ngOnDestroy(): void {\n        this.hotkeyService.isHotkeyEnabled = true;\n    }\n}\n","<div class=\"newDrawingModal\">\n    <h1 mat-dialog-title>\n        Attention\n        <mat-icon class=\"example-tab-icon\">warning</mat-icon>\n    </h1>\n    <div mat-dialog-content class=\"text\">\n        <p>Il y a présentement déjà un dessin sur la surface.</p>\n        Voulez-vous l'effacer et créer un nouveau dessin?\n    </div>\n    <div mat-dialog-actions>\n        <button mat-button id=\"newDraw\" (click)=\"createNewDrawing()\" mat-dialog-close>Oui</button>\n        <button mat-button color=\"warn\" mat-dialog-close>Annuler</button>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { PenService } from '@app/services/tools/pen.service';\n\n@Component({\n    selector: 'app-pen-attributes',\n    templateUrl: './pen-attributes.component.html',\n    styleUrls: ['./pen-attributes.component.scss'],\n})\nexport class PenAttributesComponent {\n    toolWidth: number;\n    angle: number;\n\n    constructor(public penService: PenService) {\n        this.toolWidth = penService.width;\n        this.angle = penService.angle;\n\n        this.penService.getAngle().subscribe((angle) => {\n            this.angle = angle as number;\n        });\n    }\n\n    changeWidth(newWidth: number): void {\n        this.toolWidth = newWidth;\n        this.penService.changeWidth(this.toolWidth);\n    }\n\n    changeAngle(newAngle: number): void {\n        this.angle = newAngle;\n        this.penService.changeAngle(this.angle);\n    }\n}\n","<div id=\"penAttributes\">\n    <h2 class=\"toolName\">{{ penService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Épaisseur Ligne\"\n        [min]=\"penService.minToolWidth\"\n        [max]=\"penService.maxToolWidth\"\n        [step]=\"1\"\n        [value]=\"toolWidth\"\n        (valueChange)=\"changeWidth($event)\"\n    >\n    </app-slider>\n    <app-slider title=\"Angle\" [min]=\"0\" [max]=\"180\" [step]=\"1\" [value]=\"angle\" (valueChange)=\"changeAngle($event)\"> </app-slider>\n</div>\n","import { Injectable } from '@angular/core';\nimport { SelectionBox } from '@app/classes/selection-box';\nimport { Selection } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport {\n    MAGIC_WAND_BORDER_BOTH_SIDES,\n    MAGIC_WAND_BORDER_ONE_SIDE,\n    MAGIC_WAND_SECONDARY_TOLERANCE,\n    MAGIC_WAND_TOLERANCE,\n    MAX_PERCENTAGE,\n    MouseButton,\n    OFFSET,\n    SelectionType,\n} from '@app/ressources/global-variables/global-variables';\nimport { MAXIMUM_RGBA_VALUE, RGBA_INDEXER, RGBA_LENGTH } from '@app/ressources/global-variables/rgba';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ClipboardService } from '@app/services/clipboard/clipboard.service';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { MoveService } from '@app/services/tools/transformation-services/move.service';\nimport { RotateService } from '@app/services/tools/transformation-services/rotate.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\nimport { MagnetismService } from './magnetism.service';\nimport { SelectionService } from './selection.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MagicWandService extends SelectionService {\n    name: string = TOOL_NAMES.MAGIC_WAND_TOOL_NAME;\n    mouseDownCoord: Vec2;\n    stack: Vec2[];\n    selectionData: Selection;\n    initialSelection: SelectionBox = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n    selectionImageCtx: CanvasRenderingContext2D = this.selectionImage.getContext('2d') as CanvasRenderingContext2D;\n    transormation: string = '';\n    isNewSelection: boolean = false;\n    pixelData: Uint8ClampedArray;\n    tolerance: number = MAGIC_WAND_TOLERANCE;\n    secondaryTolerance: number = MAGIC_WAND_SECONDARY_TOLERANCE;\n    selectionImageData: ImageData;\n    borderCanvas: HTMLCanvasElement = document.createElement('canvas');\n    borderCanvasCtx: CanvasRenderingContext2D = this.borderCanvas.getContext('2d') as CanvasRenderingContext2D;\n    cornerSelectionValues: Map<string, number> = new Map([\n        ['minX', 0],\n        ['maxX', 0],\n        ['minY', 0],\n        ['maxY', 0],\n    ]);\n\n    constructor(\n        drawingService: DrawingService,\n        public moveService: MoveService,\n        public rotateService: RotateService,\n        public magnetismService: MagnetismService,\n        public colorSelectionService: ColorSelectionService,\n        public clipboardService: ClipboardService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService, moveService, rotateService, clipboardService, magnetismService, undoRedoStackService);\n        this.selectionType = SelectionType.WAND;\n    }\n\n    setMagnetismAlignment(alignment: string): void {\n        this.currentAlignment = alignment;\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.mouseDownCoord = this.getPositionFromMouse(event);\n        if (!this.isInSelection(event)) {\n            this.isNewSelection = true;\n            if (!this.moveService.isTransformationOver) {\n                this.moveService.isTransformationOver = true;\n                this.moveService.printSelectionOnPreview();\n                this.applyPreview();\n            }\n            if (!this.rotateService.isRotationOver) {\n                this.rotateService.restoreSelection();\n                this.applyPreview();\n            }\n            this.selection = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            if (event.button === MouseButton.LEFT && this.isSelectionOver) {\n                this.setContiguousWand();\n            } else if (event.button === MouseButton.RIGHT && this.isSelectionOver) {\n                this.setWand();\n            }\n            this.isSelectionOver = true;\n        } else {\n            this.isSelectionOver = false;\n            this.mouseDownCoord.x = event.x;\n            this.mouseDownCoord.y = event.y;\n            this.transormation = 'move';\n            this.moveService.onMouseDown(event);\n        }\n        this.undoRedoStackService.setIsToolInUse(true);\n    }\n\n    onMouseUp(event: MouseEvent): void {\n        if (this.isNewSelection) {\n            if (this.selection.height !== 0 && this.selection.width !== 0) {\n                this.isSelectionOver = false;\n                this.setSelection(this.initialSelection, this.selection);\n            }\n            this.isNewSelection = false;\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.isSelectionEmptySubject.next(false);\n        } else if (this.transormation === 'move') {\n            this.transormation = '';\n        }\n        this.strokeSelection();\n        this.setSelectionPoint();\n        this.undoRedoStackService.setIsToolInUse(false);\n    }\n\n    onKeyUp(event: KeyboardEvent): void {\n        this.moveService.onKeyUp(event);\n        this.rotateService.onKeyUp(event);\n        this.strokeSelection();\n        this.setSelectionPoint();\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        if (this.transormation === 'move') {\n            if (this.isMagnetism) {\n                const mousePosDifferenceX = event.x - this.mouseDownCoord.x;\n                const mousePosDifferenceY = event.y - this.mouseDownCoord.y;\n                this.onMouseMoveMagnetism(mousePosDifferenceX, mousePosDifferenceY);\n            } else {\n                this.moveService.onMouseMove(event.movementX, event.movementY);\n            }\n        }\n    }\n\n    adjustCornerSelectionValues(value: Vec2): void {\n        if (value.x < (this.cornerSelectionValues.get('minX') as number)) {\n            this.cornerSelectionValues.set('minX', value.x);\n        } else if (value.x > (this.cornerSelectionValues.get('maxX') as number)) {\n            this.cornerSelectionValues.set('maxX', value.x);\n        }\n        if (value.y < (this.cornerSelectionValues.get('minY') as number)) {\n            this.cornerSelectionValues.set('minY', value.y);\n        } else if (value.y > (this.cornerSelectionValues.get('maxY') as number)) {\n            this.cornerSelectionValues.set('maxY', value.y);\n        }\n    }\n\n    setContiguousWand(): void {\n        this.pixelData = this.drawingService.getPixelData(this.mouseDownCoord);\n        this.stack = [this.mouseDownCoord];\n        const selectedPixels: Map<string, boolean> = new Map();\n        this.cornerSelectionValues = new Map([\n            ['minX', this.mouseDownCoord.x],\n            ['maxX', this.mouseDownCoord.x],\n            ['minY', this.mouseDownCoord.y],\n            ['maxY', this.mouseDownCoord.y],\n        ]);\n        const canvasData: ImageData = this.drawingService.getCanvasData();\n        this.selectionImageData = new ImageData(this.drawingService.canvas.width, this.drawingService.canvas.height);\n\n        while (this.stack.length) {\n            const currentPixel = this.stack.pop() as Vec2;\n            const index = (currentPixel.x + currentPixel.y * this.drawingService.canvas.width) * RGBA_LENGTH;\n            if (selectedPixels.has(this.vec2ToString(currentPixel))) {\n                continue;\n            }\n            if (this.isSameColor(this.pixelData, canvasData, index, this.tolerance)) {\n                this.addPixelToSelection(index, canvasData);\n                this.adjustCornerSelectionValues(currentPixel);\n                selectedPixels.set(this.vec2ToString(currentPixel), true);\n                this.nextContiguousPixels(currentPixel, canvasData);\n            }\n        }\n        this.setSelectionWithCorners();\n\n        this.setSelectionData();\n    }\n\n    setSelectionWithCorners(): void {\n        this.selection = {\n            startingPoint: {\n                x: (this.cornerSelectionValues.get('minX') as number) - MAGIC_WAND_BORDER_ONE_SIDE,\n                y: (this.cornerSelectionValues.get('minY') as number) - MAGIC_WAND_BORDER_ONE_SIDE,\n            },\n            height:\n                (this.cornerSelectionValues.get('maxY') as number) -\n                (this.cornerSelectionValues.get('minY') as number) +\n                MAGIC_WAND_BORDER_BOTH_SIDES,\n            width:\n                (this.cornerSelectionValues.get('maxX') as number) -\n                (this.cornerSelectionValues.get('minX') as number) +\n                MAGIC_WAND_BORDER_BOTH_SIDES,\n        };\n    }\n\n    nextContiguousPixels(currentPixel: Vec2, canvasData: ImageData): void {\n        if (currentPixel.y - 1 >= 0) {\n            const index = (currentPixel.x + (currentPixel.y - 1) * this.drawingService.canvas.width) * RGBA_LENGTH;\n            if (this.isSameColor(this.pixelData, canvasData, index, this.tolerance)) {\n                this.stack.push({ x: currentPixel.x, y: currentPixel.y - 1 });\n            } else {\n                this.addSecondaryTolerance(this.pixelData, index, canvasData, { x: currentPixel.x, y: currentPixel.y - 1 });\n            }\n        }\n        if (currentPixel.y + 1 < this.drawingService.canvas.height) {\n            const index = (currentPixel.x + (currentPixel.y + 1) * this.drawingService.canvas.width) * RGBA_LENGTH;\n            if (this.isSameColor(this.pixelData, canvasData, index, this.tolerance)) {\n                this.stack.push({ x: currentPixel.x, y: currentPixel.y + 1 });\n            } else {\n                this.addSecondaryTolerance(this.pixelData, index, canvasData, { x: currentPixel.x, y: currentPixel.y + 1 });\n            }\n        }\n        if (currentPixel.x + 1 < this.drawingService.canvas.width) {\n            const index = (currentPixel.x + 1 + currentPixel.y * this.drawingService.canvas.width) * RGBA_LENGTH;\n            if (this.isSameColor(this.pixelData, canvasData, index, this.tolerance)) {\n                this.stack.push({ x: currentPixel.x + 1, y: currentPixel.y });\n            } else {\n                this.addSecondaryTolerance(this.pixelData, index, canvasData, { x: currentPixel.x + 1, y: currentPixel.y });\n            }\n        }\n        if (currentPixel.x - 1 >= 0) {\n            const index = (currentPixel.x - 1 + currentPixel.y * this.drawingService.canvas.width) * RGBA_LENGTH;\n            if (this.isSameColor(this.pixelData, canvasData, index, this.tolerance)) {\n                this.stack.push({ x: currentPixel.x - 1, y: currentPixel.y });\n            } else {\n                this.addSecondaryTolerance(this.pixelData, index, canvasData, { x: currentPixel.x - 1, y: currentPixel.y });\n            }\n        }\n    }\n\n    addPixelToSelection(index: number, canvasData: ImageData): void {\n        this.selectionImageData.data[index + RGBA_INDEXER.RED] = canvasData.data[index + RGBA_INDEXER.RED];\n        this.selectionImageData.data[index + RGBA_INDEXER.GREEN] = canvasData.data[index + RGBA_INDEXER.GREEN];\n        this.selectionImageData.data[index + RGBA_INDEXER.BLUE] = canvasData.data[index + RGBA_INDEXER.BLUE];\n        this.selectionImageData.data[index + RGBA_INDEXER.ALPHA] = canvasData.data[index + RGBA_INDEXER.ALPHA];\n    }\n\n    addSecondaryTolerance(pixelData: Uint8ClampedArray, index: number, canvasData: ImageData, currentPixel: Vec2): void {\n        if (!this.isSameColor(pixelData, canvasData, index, this.secondaryTolerance)) return;\n        this.adjustCornerSelectionValues(currentPixel);\n        this.addPixelToSelection(index, canvasData);\n    }\n\n    setSelectionData(): void {\n        this.selectionImage.width = this.selection.width;\n        this.selectionImage.height = this.selection.height;\n        this.selectionImageCtx.putImageData(this.selectionImageData, -this.selection.startingPoint.x, -this.selection.startingPoint.y);\n        this.moveService.initialize(this.selection, this.selectionImage);\n        this.rotateService.initialize(this.selection, this.selectionImage);\n        this.undoRedoStackService.updateStack(this.selectionData);\n    }\n\n    strokeSelection(): void {\n        if (this.selection.height !== 0 && this.selection.width !== 0) {\n            this.drawingService.previewCtx.save();\n            this.rotateService.rotatePreviewCanvas();\n            this.setBorderCanvas();\n            this.drawingService.previewCtx.strokeRect(\n                this.selection.startingPoint.x,\n                this.selection.startingPoint.y,\n                this.selection.width,\n                this.selection.height,\n            );\n            this.drawingService.previewCtx.restore();\n        }\n    }\n\n    setBorderPattern(): CanvasPattern {\n        const patternCanvas = document.createElement('canvas');\n        patternCanvas.width = MAGIC_WAND_BORDER_BOTH_SIDES;\n        patternCanvas.height = MAGIC_WAND_BORDER_BOTH_SIDES;\n        const patternCtx = patternCanvas.getContext('2d') as CanvasRenderingContext2D;\n        patternCtx.fillStyle = 'rgb(0, 0, 0)';\n        patternCtx.fillRect(0, 0, 2, 2);\n        patternCtx.fillRect(2, 2, 2, 2);\n        return patternCtx.createPattern(patternCanvas, 'repeat') as CanvasPattern;\n    }\n\n    setBorderCanvas(): void {\n        this.borderCanvas.width = this.selectionImage.width + MAGIC_WAND_BORDER_BOTH_SIDES;\n        this.borderCanvas.height = this.selectionImage.height + MAGIC_WAND_BORDER_BOTH_SIDES;\n        const dArr = [OFFSET, OFFSET, 0, OFFSET, 1, OFFSET, OFFSET, 0, 1, 0, OFFSET, 1, 0, 1, 1, 1];\n\n        for (let i = 0; i < dArr.length; i += 2)\n            this.borderCanvasCtx.drawImage(\n                this.selectionImage,\n                MAGIC_WAND_BORDER_ONE_SIDE + dArr[i] * MAGIC_WAND_BORDER_ONE_SIDE,\n                MAGIC_WAND_BORDER_ONE_SIDE + dArr[i + 1] * MAGIC_WAND_BORDER_ONE_SIDE,\n            );\n        this.borderCanvasCtx.globalCompositeOperation = 'source-in';\n        this.borderCanvasCtx.fillStyle = this.setBorderPattern();\n        this.borderCanvasCtx.fillRect(0, 0, this.borderCanvas.width, this.borderCanvas.height);\n        this.borderCanvasCtx.globalCompositeOperation = 'source-over';\n        this.borderCanvasCtx.drawImage(this.selectionImage, MAGIC_WAND_BORDER_ONE_SIDE, MAGIC_WAND_BORDER_ONE_SIDE);\n        this.drawingService.previewCtx.drawImage(\n            this.borderCanvas,\n            this.selection.startingPoint.x - MAGIC_WAND_BORDER_ONE_SIDE,\n            this.selection.startingPoint.y - MAGIC_WAND_BORDER_ONE_SIDE,\n        );\n    }\n\n    setWand(): void {\n        this.pixelData = this.drawingService.getPixelData(this.mouseDownCoord);\n        this.cornerSelectionValues = new Map([\n            ['minX', this.mouseDownCoord.x],\n            ['maxX', this.mouseDownCoord.x],\n            ['minY', this.mouseDownCoord.y],\n            ['maxY', this.mouseDownCoord.y],\n        ]);\n        const canvasData: ImageData = this.drawingService.getCanvasData();\n        this.selectionImageData = new ImageData(this.drawingService.canvas.width, this.drawingService.canvas.height);\n        for (let index = 0; index < canvasData.data.length; index += RGBA_LENGTH) {\n            if (this.isSameColor(this.pixelData, canvasData, index, this.tolerance)) {\n                this.addPixelToSelection(index, canvasData);\n                const currentPixel: Vec2 = {\n                    x: (index / RGBA_LENGTH) % this.drawingService.canvas.width,\n                    y: Math.floor(index / RGBA_LENGTH / this.drawingService.canvas.width),\n                };\n                this.adjustCornerSelectionValues(currentPixel);\n            }\n        }\n        this.setSelectionWithCorners();\n        this.setSelectionData();\n    }\n\n    isSameColor(pixelData: Uint8ClampedArray, canvasData: ImageData, index: number, tolerance: number): boolean {\n        const diffRed: number = Math.abs(pixelData[RGBA_INDEXER.RED] - canvasData.data[index + RGBA_INDEXER.RED]);\n        const diffGreen: number = Math.abs(pixelData[RGBA_INDEXER.GREEN] - canvasData.data[index + RGBA_INDEXER.GREEN]);\n        const diffBlue: number = Math.abs(pixelData[RGBA_INDEXER.BLUE] - canvasData.data[index + RGBA_INDEXER.BLUE]);\n        const diffAlpha: number = Math.abs(pixelData[RGBA_INDEXER.ALPHA] - canvasData.data[index + RGBA_INDEXER.ALPHA]);\n        const diffPercentage: number = ((diffRed + diffGreen + diffBlue + diffAlpha) / (RGBA_LENGTH * MAXIMUM_RGBA_VALUE)) * MAX_PERCENTAGE;\n        if (diffPercentage > tolerance) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    vec2ToString(pixel: Vec2): string {\n        return pixel.x.toString() + ',' + pixel.y.toString();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Trigonometry } from '@app/classes/math/trigonometry';\nimport { SelectionBox } from '@app/classes/selection-box';\nimport { Tool } from '@app/classes/tool';\nimport { Rectangle } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { FILL_STYLES } from '@app/ressources/global-variables/fill-styles';\nimport { MouseButton, Quadrant } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SquareService extends Tool {\n    name: string = TOOL_NAMES.SQUARE_TOOL_NAME;\n    mouseDown: boolean = false;\n    rectangleData: Rectangle;\n    lastPoint: Vec2;\n    firstPoint: Vec2;\n    previewLayer: HTMLElement | null;\n    trigonometry: Trigonometry = new Trigonometry();\n\n    constructor(\n        drawingService: DrawingService,\n        public colorSelectionService: ColorSelectionService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n        this.rectangleData = {\n            type: 'rectangle',\n            primaryColor: this.colorSelectionService.primaryColor,\n            secondaryColor: this.colorSelectionService.secondaryColor,\n            height: 0,\n            width: 0,\n            topLeftPoint: { x: 0, y: 0 },\n            fillStyle: FILL_STYLES.FILL_AND_BORDER,\n            isShiftDown: false,\n            lineWidth: 1,\n        };\n    }\n\n    initialize(): void {\n        this.mouseDown = false;\n        this.drawingService.previewCtx.lineJoin = 'miter';\n        this.drawingService.baseCtx.lineJoin = 'miter';\n    }\n\n    setIsShiftDown(isShiftDown: boolean): void {\n        this.rectangleData.isShiftDown = isShiftDown;\n    }\n\n    setFirstPoint(newPoint: Vec2): void {\n        this.firstPoint = newPoint;\n    }\n\n    setLastPoint(newPoint: Vec2): void {\n        this.lastPoint = newPoint;\n    }\n\n    setFillStyle(newFillStyle: number): void {\n        this.rectangleData.fillStyle = newFillStyle;\n    }\n\n    getFillStyle(): number {\n        return this.rectangleData.fillStyle;\n    }\n\n    setRectangleWidth(): void {\n        this.rectangleData.width = Math.abs(this.firstPoint.x - this.lastPoint.x);\n    }\n\n    setRectangleHeight(): void {\n        this.rectangleData.height = Math.abs(this.firstPoint.y - this.lastPoint.y);\n    }\n\n    changeWidth(newWidth: number): void {\n        this.rectangleData.lineWidth = newWidth;\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n        this.mouseDown = event.button === MouseButton.LEFT;\n        if (this.mouseDown) {\n            this.firstPoint = this.getPositionFromMouse(event);\n            this.lastPoint = this.getPositionFromMouse(event);\n            this.undoRedoStackService.setIsToolInUse(true);\n        }\n    }\n\n    onMouseUp(event: MouseEvent): void {\n        if (this.mouseDown) {\n            this.lastPoint = this.getPositionFromMouse(event);\n            this.drawShape(this.drawingService.baseCtx);\n            this.mouseDown = false;\n            this.undoRedoStackService.setIsToolInUse(false);\n            this.drawingService.autoSave();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        if (event.key === 'Shift') {\n            this.rectangleData.isShiftDown = true;\n            if (this.mouseDown) {\n                this.drawingService.clearCanvas(this.drawingService.previewCtx);\n                this.drawShape(this.drawingService.previewCtx);\n            }\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent): void {\n        if (event.key === 'Shift' && this.rectangleData.isShiftDown) {\n            this.rectangleData.isShiftDown = false;\n            if (this.mouseDown) {\n                this.drawingService.clearCanvas(this.drawingService.previewCtx);\n                this.drawShape(this.drawingService.previewCtx);\n            }\n        }\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        if (this.mouseDown) {\n            this.lastPoint = this.getPositionFromMouse(event);\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.drawShape(this.drawingService.previewCtx);\n        }\n    }\n\n    drawShape(ctx: CanvasRenderingContext2D): SelectionBox {\n        this.setRectangleHeight();\n        this.setRectangleWidth();\n\n        if (this.rectangleData.isShiftDown) {\n            this.rectangleData.width = Math.min(this.rectangleData.height, this.rectangleData.width);\n            this.rectangleData.height = this.rectangleData.width;\n            this.setSquareAttributes();\n        } else {\n            this.rectangleData.topLeftPoint = this.trigonometry.findTopLeftPointCircle(this.firstPoint, this.lastPoint);\n        }\n\n        this.updateRectangleDataColor();\n        this.drawRectangle(ctx, this.rectangleData);\n\n        if (ctx === this.drawingService.baseCtx) {\n            this.undoRedoStackService.updateStack(this.rectangleData);\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        }\n\n        return { startingPoint: this.rectangleData.topLeftPoint, width: this.rectangleData.width, height: this.rectangleData.height };\n    }\n\n    drawRectangle(ctx: CanvasRenderingContext2D, rectangle: Rectangle): void {\n        ctx.fillStyle = rectangle.primaryColor;\n        ctx.strokeStyle = rectangle.secondaryColor;\n        ctx.lineWidth = rectangle.lineWidth;\n        if (rectangle.fillStyle === FILL_STYLES.FILL) {\n            ctx.strokeStyle = rectangle.primaryColor;\n            ctx.lineWidth = 1;\n        }\n        ctx.beginPath();\n        if (rectangle.width > ctx.lineWidth && rectangle.height > ctx.lineWidth) {\n            rectangle.width -= ctx.lineWidth;\n            rectangle.height -= ctx.lineWidth;\n            rectangle.topLeftPoint.x += ctx.lineWidth / 2;\n            rectangle.topLeftPoint.y += ctx.lineWidth / 2;\n            ctx.rect(rectangle.topLeftPoint.x, rectangle.topLeftPoint.y, rectangle.width, rectangle.height);\n            if (rectangle.fillStyle !== FILL_STYLES.BORDER && rectangle.fillStyle !== FILL_STYLES.DASHED) {\n                ctx.fillRect(rectangle.topLeftPoint.x, rectangle.topLeftPoint.y, rectangle.width, rectangle.height);\n            }\n            rectangle.width += ctx.lineWidth;\n            rectangle.height += ctx.lineWidth;\n        }\n        ctx.stroke();\n    }\n\n    setSquareAttributes(): void {\n        switch (this.trigonometry.findQuadrant(this.firstPoint, this.lastPoint)) {\n            case Quadrant.BOTTOM_LEFT:\n                this.rectangleData.topLeftPoint.x = this.firstPoint.x - this.rectangleData.width;\n                this.rectangleData.topLeftPoint.y = this.firstPoint.y;\n                break;\n            case Quadrant.TOP_LEFT:\n                this.rectangleData.topLeftPoint.x = this.firstPoint.x - this.rectangleData.width;\n                this.rectangleData.topLeftPoint.y = this.firstPoint.y - this.rectangleData.height;\n                break;\n            case Quadrant.BOTTOM_RIGHT:\n                this.rectangleData.topLeftPoint.x = this.firstPoint.x;\n                this.rectangleData.topLeftPoint.y = this.firstPoint.y;\n                break;\n            case Quadrant.TOP_RIGHT:\n                this.rectangleData.topLeftPoint.x = this.firstPoint.x;\n                this.rectangleData.topLeftPoint.y = this.firstPoint.y - this.rectangleData.height;\n                break;\n        }\n    }\n\n    private updateRectangleDataColor(): void {\n        this.rectangleData.primaryColor = this.colorSelectionService.primaryColor;\n        this.rectangleData.secondaryColor = this.colorSelectionService.secondaryColor;\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Tool } from '@app/classes/tool';\nimport { Spray } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport {\n    MAX_SPRAY_DOT_WIDTH,\n    MAX_SPRAY_FREQUENCY,\n    MIN_SPRAY_DOT_WIDTH,\n    MIN_SPRAY_FREQUENCY,\n    MIN_SPRAY_WIDTH,\n    MouseButton,\n    ONE_SECOND,\n    SPRAY_DENSITY,\n} from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n// this tool was inpired by the code found on http://perfectionkills.com/exploring-canvas-drawing-techniques/\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SprayService extends Tool implements OnDestroy {\n    name: string = TOOL_NAMES.SPRAY_TOOL_NAME;\n    density: number = SPRAY_DENSITY;\n    minDotWidth: number = MIN_SPRAY_DOT_WIDTH;\n    maxDotWidth: number = MAX_SPRAY_DOT_WIDTH;\n    minFrequency: number = MIN_SPRAY_FREQUENCY;\n    maxFrequency: number = MAX_SPRAY_FREQUENCY;\n    minToolWidth: number = MIN_SPRAY_WIDTH;\n    sprayData: Spray;\n    timeoutId: ReturnType<typeof setTimeout>;\n    mouseCoord: Vec2;\n    width: number = this.minToolWidth;\n    dotWidth: number = this.minDotWidth;\n    sprayFrequency: number = this.minFrequency;\n    canvasData: ImageData;\n\n    constructor(\n        drawingService: DrawingService,\n        public colorSelectionService: ColorSelectionService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this.timeoutId);\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n        if (event.button !== MouseButton.LEFT) {\n            return;\n        } else {\n            this.mouseDown = true;\n            this.mouseCoord = this.getPositionFromMouse(event);\n            clearTimeout(this.timeoutId);\n            this.timeoutId = setTimeout(this.drawSpray, ONE_SECOND / this.sprayFrequency, this, this.drawingService.previewCtx);\n            this.undoRedoStackService.setIsToolInUse(true);\n        }\n    }\n\n    onMouseUp(): void {\n        if (this.mouseDown) {\n            clearTimeout(this.timeoutId);\n            this.drawingService.applyPreview();\n            this.undoRedoStackService.setIsToolInUse(false);\n            this.canvasData = this.drawingService.getCanvasData();\n            this.updateSprayData();\n            this.undoRedoStackService.updateStack(this.sprayData);\n        }\n        this.mouseDown = false;\n        this.drawingService.autoSave();\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        if (this.mouseDown) {\n            this.mouseCoord = this.getPositionFromMouse(event);\n        }\n    }\n\n    onMouseLeave(): void {\n        if (this.mouseDown) {\n            clearTimeout(this.timeoutId);\n            this.drawingService.applyPreview();\n            this.undoRedoStackService.setIsToolInUse(false);\n        }\n    }\n\n    onMouseEnter(event: MouseEvent): void {\n        if (this.mouseDown) {\n            this.mouseCoord = this.getPositionFromMouse(event);\n            this.timeoutId = setTimeout(this.drawSpray, ONE_SECOND / this.sprayFrequency, this, this.drawingService.previewCtx);\n            this.undoRedoStackService.setIsToolInUse(true);\n        }\n    }\n\n    drawSpray(self: SprayService, ctx: CanvasRenderingContext2D): void {\n        for (let i = self.density; i--; ) {\n            const angle = self.getRandomNumber(0, Math.PI * 2);\n            const radius = self.getRandomNumber(0, self.width);\n            ctx.globalAlpha = Math.random();\n            ctx.strokeStyle = self.colorSelectionService.primaryColor;\n            ctx.fillStyle = self.colorSelectionService.primaryColor;\n            ctx.beginPath();\n            ctx.arc(\n                self.mouseCoord.x + radius * Math.cos(angle),\n                self.mouseCoord.y + radius * Math.sin(angle),\n                self.getRandomNumber(1, self.dotWidth / 2),\n                0,\n                2 * Math.PI,\n            );\n            ctx.fill();\n        }\n        if (!self.timeoutId) return;\n        self.timeoutId = setTimeout(self.drawSpray, ONE_SECOND / self.sprayFrequency, self, ctx);\n    }\n\n    getRandomNumber(min: number, max: number): number {\n        return Math.random() * (max - min) + min;\n    }\n\n    changeWidth(newWidth: number): void {\n        this.width = newWidth;\n    }\n\n    changeDotWidth(newDotWidth: number): void {\n        this.dotWidth = newDotWidth;\n    }\n\n    changeSprayFrequency(newSprayFrequency: number): void {\n        this.sprayFrequency = newSprayFrequency;\n    }\n\n    reset(): void {\n        clearTimeout(this.timeoutId);\n        this.drawingService.previewCtx.globalAlpha = 1;\n    }\n\n    updateSprayData(): void {\n        this.sprayData = {\n            type: 'fill',\n            imageData: this.canvasData,\n        };\n        this.drawingService.autoSave();\n    }\n\n    restoreSpray(sprayData: Spray): void {\n        this.drawingService.baseCtx.putImageData(sprayData.imageData, 0, 0);\n    }\n}\n","export interface FilterStyles {\n    NONE: number;\n    BLACK_AND_WHITE: number;\n    SEPHIA: number;\n    SATURATE: number;\n    INVERT: number;\n    BLUR: number;\n}\n\nexport const FILTER_STYLES: FilterStyles = {\n    NONE: 0,\n    BLACK_AND_WHITE: 1,\n    SEPHIA: 2,\n    SATURATE: 3,\n    INVERT: 4,\n    BLUR: 5,\n};\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EmailBody } from '@app/ressources/global-variables/email-body';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EmailService {\n    constructor(private http: HttpClient) {}\n\n    sendMail(url: string, body: EmailBody): Observable<void> {\n        return this.http.post<void>(url, body);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent, MatChipList } from '@angular/material/chips';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MAX_NAME_LENGTH, MAX_NUMBER_TAG, MAX_TAG_LENGTH } from '@app/ressources/global-variables/global-variables';\nimport { DatabaseService } from '@app/services/database/database.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { ServerResponseService } from '@app/services/server-response/server-response.service';\nimport { TextService } from '@app/services/tools/text.service';\nimport { MetaData } from '@common/communication/drawing-data';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-saving',\n    templateUrl: './saving.component.html',\n    styleUrls: ['./saving.component.scss'],\n})\nexport class SavingComponent implements OnInit, OnDestroy {\n    destroy$: Subject<boolean> = new Subject<boolean>();\n    isSaveButtonDisabled: boolean = false;\n    currentTag: string = '';\n    name: string = '';\n    maxTags: boolean = false;\n    isLastTagInvalid: boolean = false;\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA, SPACE];\n    tags: string[] = [];\n    ownerForm: FormGroup;\n\n    constructor(\n        public hotkeyService: HotkeyService,\n        public serverResponseService: ServerResponseService,\n        public databaseService: DatabaseService,\n        public drawingService: DrawingService,\n        public dialog: MatDialog,\n        public textService: TextService,\n    ) {}\n    @ViewChild('chipList') chipList: MatChipList;\n    @ViewChild('tag') tagInput: ElementRef;\n\n    ngOnInit(): void {\n        if (this.textService.isNewText) {\n            this.textService.createText();\n        }\n        this.hotkeyService.isHotkeyEnabled = false;\n        this.ownerForm = new FormGroup({\n            name: new FormControl(this.name, [Validators.required, Validators.maxLength(MAX_NAME_LENGTH)]),\n            tags: new FormControl(this.currentTag, [Validators.maxLength(MAX_NAME_LENGTH)]),\n        });\n    }\n\n    currentTagInput(tag: string): void {\n        this.currentTag = tag;\n        if (tag.length > MAX_TAG_LENGTH) {\n            this.chipList.errorState = true;\n            this.chipList._markAsTouched();\n        } else {\n            this.chipList.errorState = false;\n        }\n    }\n    hasError(controlName: string, errorName: string): boolean {\n        return this.ownerForm.controls[controlName].hasError(errorName);\n    }\n\n    hasTagError(tag: string): boolean {\n        return tag.length > MAX_TAG_LENGTH;\n    }\n\n    addTag(event: MatChipInputEvent): void {\n        const input = event.input;\n        const value = event.value;\n\n        if ((value || '').trim()) {\n            this.validateTag(value);\n        }\n        if (this.tags.length === MAX_NUMBER_TAG) {\n            this.maxTags = true;\n            this.tagInput.nativeElement.disabled = true;\n        }\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    validateTag(tag: string): void {\n        if (this.tags.length < MAX_NUMBER_TAG) {\n            if (tag.length > MAX_TAG_LENGTH) {\n                this.isLastTagInvalid = true;\n            } else {\n                this.tags.push(tag.trim());\n                this.isLastTagInvalid = false;\n            }\n        }\n    }\n    removeTag(tag: string): void {\n        const index = this.tags.indexOf(tag);\n        if (this.maxTags) {\n            this.maxTags = false;\n            this.tagInput.nativeElement.disabled = false;\n        }\n        if (index >= 0) {\n            this.tags.splice(index, 1);\n        }\n    }\n\n    async addDrawing(): Promise<void> {\n        this.isSaveButtonDisabled = true;\n        const canvas = this.drawingService.baseCtx.canvas.toDataURL();\n        const blob = await (await fetch(canvas)).blob();\n        const ID: string = new Date().getUTCMilliseconds() + '';\n        const meta: MetaData = { id: ID, name: this.name, tags: this.tags };\n        this.databaseService\n            .addDrawing(meta, blob)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(\n                () => {\n                    this.isSaveButtonDisabled = false;\n                    this.serverResponseService.saveConfirmSnackBar();\n                    this.dialog.closeAll();\n                },\n                () => {\n                    this.isSaveButtonDisabled = false;\n                    this.serverResponseService.saveErrorSnackBar();\n                    this.dialog.closeAll();\n                },\n            );\n    }\n\n    changeName(name: string): void {\n        this.name = name;\n        this.ownerForm.markAllAsTouched();\n    }\n\n    ngOnDestroy(): void {\n        this.hotkeyService.isHotkeyEnabled = true;\n        this.destroy$.next(true);\n        this.destroy$.unsubscribe();\n    }\n}\n","<div class=\"saving\">\n    <h1 mat-dialog-title>Sauvegarde du dessin</h1>\n    <form class=\"saving\" autocomplete=\"off\" [formGroup]=\"ownerForm\">\n        <mat-form-field appearance=\"fill\" floatLabel=\"floatLabelControl.value\">\n            <mat-label>Nom du dessin</mat-label>\n            <input\n                matInput\n                #name\n                type=\"text\"\n                id=\"name\"\n                [required]=\"true\"\n                formControlName=\"name\"\n                (keyup)=\"this.changeName(name.value)\"\n                placeholder=\"Ex: Forêt Boréal\"\n            />\n            <mat-hint class=\"mat-hint\" align=\"end\">Pas plus de 15 charactères de long.</mat-hint>\n            <mat-error *ngIf=\"hasError('name', 'required')\">Nom est requis</mat-error>\n            <mat-error *ngIf=\"hasError('name', 'maxlength')\">Nom est trop long (max 15 charactères)</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"chip-list\">\n            <mat-placeholder class=\"placeholder\">Étiquettes du dessin:</mat-placeholder>\n            <mat-chip-list #chipList aria-label=\"Tag selection\">\n                <mat-chip *ngFor=\"let tag of tags\" (removed)=\"removeTag(tag)\">\n                    {{ tag }}\n                    <mat-icon matChipRemove>cancel</mat-icon>\n                </mat-chip>\n                <input\n                    #tag\n                    type=\"text\"\n                    id=\"tag\"\n                    [disabled]=\"this.maxTags\"\n                    (keyup)=\"this.currentTagInput(tag.value)\"\n                    (keydown)=\"this.currentTagInput(tag.value)\"\n                    [matChipInputFor]=\"chipList\"\n                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                    [matChipInputAddOnBlur]=\"true\"\n                    (matChipInputTokenEnd)=\"addTag($event)\"\n                />\n            </mat-chip-list>\n            <mat-error *ngIf=\"hasTagError(tag.value)\">L'étiquette est trop longue. (max. 15 charactères)</mat-error>\n            <mat-hint align=\"end\">Max 5 étiquettes - Max 15 char./étiquette.</mat-hint>\n            <div class=\"maxTags-notification\" *ngIf=\"maxTags\">Nombre maximum d'étiquettes</div>\n        </mat-form-field>\n    </form>\n    <div mat-dialog-actions>\n        <button mat-button [disabled]=\"!ownerForm.valid || isSaveButtonDisabled\" id=\"save\" (click)=\"addDrawing()\">Sauvegarder</button>\n        <button mat-button color=\"warn\" mat-dialog-close>Fermer</button>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { CircleSelectionService } from '@app/services/tools/selection-services/circle-selection.service';\n\n@Component({\n    selector: 'app-circle-selection-attributes',\n    templateUrl: './circle-selection-attributes.component.html',\n    styleUrls: ['./circle-selection-attributes.component.scss'],\n})\nexport class CircleSelectionAttributesComponent {\n    constructor(public circleSelectionService: CircleSelectionService) {}\n}\n","<div id=\"circleSelectionAttributes\">\n    <h2 class=\"toolName\">{{ circleSelectionService.name }}</h2>\n    <hr />\n    <app-magnetism [service]=\"circleSelectionService\"></app-magnetism>\n</div>\n","export interface CanvasResizingPoints {\n    VERTICAL: string;\n    HORIZONTAL: string;\n    VERTICAL_AND_HORIZONTAL: string;\n}\n\nexport const CANVAS_RESIZING_POINTS: CanvasResizingPoints = {\n    VERTICAL: 'verticalCanvasResizePoint',\n    HORIZONTAL: 'horizontalCanvasResizePoint',\n    VERTICAL_AND_HORIZONTAL: 'verticalAndHorizontalCanvasResizePoint',\n};\n","import { Injectable } from '@angular/core';\nimport { Trigonometry } from '@app/classes/math/trigonometry';\nimport { Tool } from '@app/classes/tool';\nimport { Polygon } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { FILL_STYLES } from '@app/ressources/global-variables/fill-styles';\nimport {\n    DASH_LENGTH,\n    DASH_SPACE_LENGTH,\n    LINE_WIDTH_POLYGON_CORRECTION,\n    MAX_SIDES,\n    MIN_SIDES,\n    MouseButton,\n    Quadrant,\n} from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { CircleService } from '@app/services/tools/circle.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PolygonService extends Tool {\n    name: string = TOOL_NAMES.POLYGON_TOOL_NAME;\n    centerX: number;\n    centerY: number;\n    center: Vec2;\n    private trigonometry: Trigonometry = new Trigonometry();\n    private polygonData: Polygon;\n    minNumberOfSides: number = MIN_SIDES;\n    maxNumberOfSides: number = MAX_SIDES;\n\n    constructor(\n        drawingService: DrawingService,\n        public colorSelectionService: ColorSelectionService,\n        public circleService: CircleService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n        this.polygonData = {\n            type: 'polygon',\n            primaryColor: this.colorSelectionService.primaryColor,\n            secondaryColor: this.colorSelectionService.secondaryColor,\n            fillStyle: FILL_STYLES.FILL_AND_BORDER,\n            lineWidth: 1,\n            circleHeight: 0,\n            circleWidth: 0,\n            firstPoint: { x: 0, y: 0 },\n            lastPoint: { x: 0, y: 0 },\n            sides: 3,\n        };\n    }\n\n    initialize(): void {\n        this.drawingService.previewCtx.lineJoin = 'miter';\n        this.drawingService.baseCtx.lineJoin = 'miter';\n    }\n\n    changeFillStyle(newFillStyle: number): void {\n        this.polygonData.fillStyle = newFillStyle;\n    }\n    changeWidth(newWidth: number): void {\n        this.polygonData.lineWidth = newWidth;\n    }\n    setSides(sides: number): void {\n        this.polygonData.sides = sides;\n    }\n\n    getFillStyle(): number {\n        return this.polygonData.fillStyle;\n    }\n    getWidth(): number {\n        return this.polygonData.lineWidth;\n    }\n    getSides(): number {\n        return this.polygonData.sides;\n    }\n\n    setCenterX(): void {\n        this.centerX = Math.abs(this.polygonData.firstPoint.y - this.polygonData.lastPoint.y);\n    }\n    setCenterY(): void {\n        this.centerY = Math.abs(this.polygonData.firstPoint.y - this.polygonData.lastPoint.y);\n    }\n    setCircleWidth(): void {\n        this.polygonData.circleWidth = Math.abs(this.polygonData.firstPoint.x - this.polygonData.lastPoint.x);\n    }\n    setCircleHeight(): void {\n        this.polygonData.circleHeight = Math.abs(this.polygonData.firstPoint.y - this.polygonData.lastPoint.y);\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n        this.mouseDown = event.button === MouseButton.LEFT;\n        if (this.mouseDown) {\n            this.polygonData.firstPoint = this.getPositionFromMouse(event);\n            this.polygonData.lastPoint = this.getPositionFromMouse(event);\n            this.undoRedoStackService.setIsToolInUse(true);\n        }\n    }\n\n    onMouseUp(event: MouseEvent): void {\n        if (this.mouseDown) {\n            this.polygonData.lastPoint = this.getPositionFromMouse(event);\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.updatePolygonDataColor();\n            if (this.polygonData.firstPoint.x !== this.polygonData.lastPoint.x && this.polygonData.firstPoint.y !== this.polygonData.lastPoint.y) {\n                this.drawPolygon(this.drawingService.baseCtx, this.polygonData);\n                this.undoRedoStackService.updateStack(this.polygonData);\n            }\n            this.mouseDown = false;\n            this.undoRedoStackService.setIsToolInUse(false);\n\n            this.polygonData.circleWidth = 0;\n            this.polygonData.circleHeight = 0;\n        }\n        this.drawingService.autoSave();\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        if (this.mouseDown) {\n            this.polygonData.lastPoint = this.getPositionFromMouse(event);\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.center = this.trigonometry.getCenter(this.polygonData.firstPoint, this.polygonData.lastPoint);\n            const currentLineWidth = this.drawingService.previewCtx.lineWidth;\n            this.drawingService.previewCtx.lineWidth = 1;\n            this.drawingService.previewCtx.strokeStyle = 'black';\n            this.drawingService.previewCtx.setLineDash([DASH_LENGTH, DASH_SPACE_LENGTH]);\n            this.drawCircle(this.drawingService.previewCtx);\n            this.drawingService.previewCtx.lineWidth = currentLineWidth;\n            this.drawingService.previewCtx.setLineDash([0]);\n            this.updatePolygonDataColor();\n            this.drawPolygon(this.drawingService.previewCtx, this.polygonData);\n        }\n    }\n\n    drawCircle(ctx: CanvasRenderingContext2D): void {\n        this.circleService.setFillStyle(FILL_STYLES.BORDER);\n        this.circleService.ellipseData.firstPoint = this.polygonData.firstPoint;\n        this.circleService.ellipseData.lastPoint = this.polygonData.lastPoint;\n        this.circleService.drawCircle(ctx, this.trigonometry.findTopLeftPointCircle(this.polygonData.firstPoint, this.polygonData.lastPoint));\n    }\n\n    drawPolygon(ctx: CanvasRenderingContext2D, polygonData: Polygon): void {\n        ctx.fillStyle = polygonData.primaryColor;\n        ctx.strokeStyle = polygonData.secondaryColor;\n        ctx.lineWidth = polygonData.lineWidth;\n        ctx.setLineDash([0]);\n\n        if (this.polygonData.fillStyle === FILL_STYLES.FILL) {\n            ctx.strokeStyle = this.colorSelectionService.primaryColor;\n            ctx.lineWidth = 1;\n        }\n\n        this.polygonData.firstPoint = polygonData.firstPoint;\n        this.polygonData.lastPoint = polygonData.lastPoint;\n        this.setCircleHeight();\n        this.setCircleWidth();\n        const ellipseRadiusX = polygonData.circleWidth / 2;\n        const ellipseRadiusY = polygonData.circleHeight / 2;\n        let circleRadius = Math.min(ellipseRadiusX, ellipseRadiusY);\n        const quadrant = this.trigonometry.findQuadrant(polygonData.firstPoint, polygonData.lastPoint);\n        const center: Vec2 = { x: 0, y: 0 };\n\n        switch (quadrant) {\n            case Quadrant.BOTTOM_LEFT:\n                center.x = polygonData.firstPoint.x - circleRadius;\n                center.y = polygonData.firstPoint.y + circleRadius;\n                break;\n            case Quadrant.TOP_LEFT:\n                center.x = polygonData.firstPoint.x - circleRadius;\n                center.y = polygonData.firstPoint.y - circleRadius;\n                break;\n            case Quadrant.BOTTOM_RIGHT:\n                center.x = polygonData.firstPoint.x + circleRadius;\n                center.y = polygonData.firstPoint.y + circleRadius;\n                break;\n            case Quadrant.TOP_RIGHT:\n                center.x = polygonData.firstPoint.x + circleRadius;\n                center.y = polygonData.firstPoint.y - circleRadius;\n                break;\n        }\n        ctx.beginPath();\n        ctx.lineWidth = polygonData.lineWidth;\n\n        if (circleRadius > ctx.lineWidth / LINE_WIDTH_POLYGON_CORRECTION) {\n            circleRadius -= ctx.lineWidth / LINE_WIDTH_POLYGON_CORRECTION;\n            ctx.moveTo(center.x, center.y - circleRadius);\n            for (let i = 0; i <= polygonData.sides + 1; i++) {\n                ctx.lineTo(\n                    center.x + circleRadius * Math.cos((i * 2 * Math.PI) / polygonData.sides - Math.PI / 2),\n                    center.y + circleRadius * Math.sin((i * 2 * Math.PI) / polygonData.sides - Math.PI / 2),\n                );\n            }\n            if (this.polygonData.fillStyle !== FILL_STYLES.BORDER) {\n                ctx.fill();\n            }\n        }\n\n        ctx.stroke();\n        ctx.closePath();\n    }\n\n    private updatePolygonDataColor(): void {\n        this.polygonData.primaryColor = this.colorSelectionService.primaryColor;\n        this.polygonData.secondaryColor = this.colorSelectionService.secondaryColor;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Tool } from '@app/classes/tool';\nimport { Eraser } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { MIN_ERASER_TOOL_WIDTH, MouseButton } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EraserService extends Tool {\n    name: string = TOOL_NAMES.ERASER_TOOL_NAME;\n    eraserData: Eraser;\n    minToolWidth: number = MIN_ERASER_TOOL_WIDTH;\n\n    constructor(drawingService: DrawingService, public undoRedoStackService: UndoRedoStackService) {\n        super(drawingService);\n        this.eraserData = {\n            type: 'eraser',\n            path: [],\n            lineWidth: 5,\n            lineCap: 'square',\n            fillStyle: 'white',\n            primaryColor: 'white',\n        };\n        this.clearPath();\n    }\n\n    setCursor(): void {\n        this.drawingService.gridCanvas.style.cursor = 'none';\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n        if (event.button !== MouseButton.LEFT) {\n            return;\n        } else {\n            this.mouseDown = true;\n            this.clearPath();\n            this.mouseDownCoord = this.getPositionFromMouse(event);\n            this.eraserData.path.push(this.mouseDownCoord);\n            this.drawRect(this.drawingService.previewCtx, this.eraserData.path);\n            this.undoRedoStackService.setIsToolInUse(true);\n        }\n        this.squareCursor(event);\n    }\n\n    onMouseUp(event: MouseEvent): void {\n        if (this.mouseDown) {\n            const mousePosition = this.getPositionFromMouse(event);\n            this.eraserData.path.push(mousePosition);\n            this.drawEraserStroke(this.drawingService.baseCtx, this.eraserData);\n            this.undoRedoStackService.updateStack(this.eraserData);\n            this.undoRedoStackService.setIsToolInUse(false);\n        }\n        this.mouseDown = false;\n        this.clearPath();\n        this.drawingService.autoSave();\n    }\n\n    onMouseLeave(): void {\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        this.drawEraserStroke(this.drawingService.baseCtx, this.eraserData);\n        this.clearPath();\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        if (this.mouseDown) {\n            const mousePosition = this.getPositionFromMouse(event);\n            this.eraserData.path.push(mousePosition);\n            this.drawEraserStroke(this.drawingService.previewCtx, this.eraserData);\n        }\n        this.squareCursor(event);\n    }\n\n    private squareCursor(event: MouseEvent): void {\n        this.drawingService.previewCtx.lineWidth = 1;\n        this.drawingService.previewCtx.strokeStyle = 'black';\n        this.drawingService.previewCtx.fillStyle = 'white';\n        this.drawingService.previewCtx.strokeRect(\n            this.getPositionFromMouse(event).x - this.eraserData.lineWidth / 2,\n            this.getPositionFromMouse(event).y - this.eraserData.lineWidth / 2,\n            this.eraserData.lineWidth,\n            this.eraserData.lineWidth,\n        );\n        this.drawingService.previewCtx.fillRect(\n            this.getPositionFromMouse(event).x - this.eraserData.lineWidth / 2,\n            this.getPositionFromMouse(event).y - this.eraserData.lineWidth / 2,\n            this.eraserData.lineWidth,\n            this.eraserData.lineWidth,\n        );\n    }\n\n    drawEraserStroke(ctx: CanvasRenderingContext2D, eraser: Eraser): void {\n        ctx.lineWidth = eraser.lineWidth;\n        ctx.strokeStyle = 'white';\n        ctx.lineCap = 'square';\n        ctx.beginPath();\n        for (const point of eraser.path) {\n            ctx.lineTo(point.x, point.y);\n        }\n        ctx.stroke();\n    }\n\n    changeWidth(newWidth: number): void {\n        this.eraserData.lineWidth = newWidth;\n    }\n\n    private drawRect(ctx: CanvasRenderingContext2D, path: Vec2[]): void {\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = 'white';\n        ctx.fillStyle = 'white';\n        ctx.beginPath();\n        for (const point of path) {\n            ctx.rect(\n                point.x - this.eraserData.lineWidth / 2,\n                point.y - this.eraserData.lineWidth / 2,\n                this.eraserData.lineWidth,\n                this.eraserData.lineWidth,\n            );\n        }\n        ctx.fill();\n        ctx.stroke();\n    }\n\n    private clearPath(): void {\n        this.eraserData.path = [];\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { SelectionBox } from '@app/classes/selection-box';\nimport { Vec2 } from '@app/classes/vec2';\nimport { ARROW_KEYS } from '@app/ressources/global-variables/arrow-keys';\nimport { CONFIRM_KEY_PRESS_DURATION, KEY_PRESS_INTERVAL_DURATION, SELECTION_MOVE_STEP_SIZE } from '@app/ressources/global-variables/global-variables';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\nimport { RotateService } from './rotate.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MoveService implements OnDestroy {\n    initialSelection: SelectionBox = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n    selection: SelectionBox;\n    isTransformationOver: boolean = true;\n    pressedKeys: Map<string, boolean> = new Map([\n        [ARROW_KEYS.LEFT, false],\n        [ARROW_KEYS.UP, false],\n        [ARROW_KEYS.RIGHT, false],\n        [ARROW_KEYS.DOWN, false],\n    ]);\n    intervalId: ReturnType<typeof setTimeout> | undefined = undefined;\n    selectionImage: HTMLCanvasElement = document.createElement('canvas');\n\n    constructor(public drawingService: DrawingService, public rotateService: RotateService, public undoRedoStackService: UndoRedoStackService) {}\n\n    ngOnDestroy(): void {\n        if (this.intervalId) {\n            clearInterval(this.intervalId);\n        }\n    }\n\n    initialize(selection: SelectionBox, selectionImage: HTMLCanvasElement): void {\n        this.setSelection(this.initialSelection, selection);\n        this.selection = selection;\n        this.selectionImage = selectionImage;\n    }\n\n    snapOnGrid(event: KeyboardEvent, baseCoordinates: Vec2, squareSize: number): void {\n        let isArrowKey = false;\n\n        switch (event.key) {\n            case ARROW_KEYS.LEFT:\n                this.selection.startingPoint.x -= baseCoordinates.x % squareSize;\n                let changeYLeft = baseCoordinates.y % squareSize;\n                if (changeYLeft > squareSize / 2) {\n                    changeYLeft = changeYLeft - squareSize;\n                }\n                this.selection.startingPoint.y -= changeYLeft;\n                break;\n            case ARROW_KEYS.UP:\n                this.selection.startingPoint.y -= baseCoordinates.y % squareSize;\n                let changeXUp = baseCoordinates.x % squareSize;\n                if (changeXUp > squareSize / 2) {\n                    changeXUp = changeXUp - squareSize;\n                }\n                this.selection.startingPoint.x -= changeXUp;\n                break;\n            case ARROW_KEYS.RIGHT:\n                if (baseCoordinates.x % squareSize !== 0) this.selection.startingPoint.x += squareSize - (baseCoordinates.x % squareSize);\n                let changeYRight = baseCoordinates.y % squareSize;\n                if (changeYRight > squareSize / 2) {\n                    changeYRight = changeYRight - squareSize;\n                }\n                this.selection.startingPoint.y -= changeYRight;\n                break;\n            case ARROW_KEYS.DOWN:\n                if (baseCoordinates.y % squareSize !== 0) this.selection.startingPoint.y += squareSize - (baseCoordinates.y % squareSize);\n                let changeXDown = baseCoordinates.x % squareSize;\n                if (changeXDown > squareSize / 2) {\n                    changeXDown = changeXDown - squareSize;\n                }\n                this.selection.startingPoint.x -= changeXDown;\n                break;\n        }\n\n        if (this.pressedKeys.has(event.key)) {\n            this.pressedKeys.set(event.key, true);\n            isArrowKey = true;\n        }\n\n        if (isArrowKey) {\n            this.printSelectionOnPreview();\n            this.isTransformationOver = false;\n        }\n    }\n    onMouseDown(event: MouseEvent): void {\n        this.isTransformationOver = false;\n    }\n\n    onMouseMove(movementX: number, movementY: number): void {\n        this.selection.startingPoint.x += movementX;\n        this.selection.startingPoint.y += movementY;\n        this.printSelectionOnPreview();\n    }\n\n    onKeyDown(event: KeyboardEvent, isMagnetism: boolean, squareSize: number): void {\n        let isArrowKey = false;\n        let moveStep = SELECTION_MOVE_STEP_SIZE;\n        if (isMagnetism) {\n            moveStep = squareSize;\n        }\n        switch (event.key) {\n            case ARROW_KEYS.LEFT:\n                if (!this.pressedKeys.get(ARROW_KEYS.LEFT)) {\n                    this.selection.startingPoint.x -= moveStep;\n                }\n                break;\n            case ARROW_KEYS.UP:\n                if (!this.pressedKeys.get(ARROW_KEYS.UP)) {\n                    this.selection.startingPoint.y -= moveStep;\n                }\n                break;\n            case ARROW_KEYS.RIGHT:\n                if (!this.pressedKeys.get(ARROW_KEYS.RIGHT)) {\n                    this.selection.startingPoint.x += moveStep;\n                }\n                break;\n            case ARROW_KEYS.DOWN:\n                if (!this.pressedKeys.get(ARROW_KEYS.DOWN)) {\n                    this.selection.startingPoint.y += moveStep;\n                }\n                break;\n        }\n\n        if (this.pressedKeys.has(event.key)) {\n            this.pressedKeys.set(event.key, true);\n            isArrowKey = true;\n        }\n\n        setTimeout(() => {\n            if (this.isArrowKeyPressed()) {\n                this.undoRedoStackService.setIsToolInUse(true);\n                if (!this.intervalId) {\n                    this.intervalId = setInterval(this.move, KEY_PRESS_INTERVAL_DURATION, this, isMagnetism, squareSize);\n                }\n            }\n        }, CONFIRM_KEY_PRESS_DURATION);\n\n        if (isArrowKey) {\n            this.printSelectionOnPreview();\n            this.isTransformationOver = false;\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent): void {\n        if (this.pressedKeys.has(event.key)) {\n            this.pressedKeys.set(event.key, false);\n            this.undoRedoStackService.setIsToolInUse(false);\n        }\n\n        if (this.intervalId) {\n            if (!this.isArrowKeyPressed()) {\n                clearInterval(this.intervalId);\n                this.intervalId = undefined;\n            }\n        }\n    }\n\n    clearSelectionBackground(): void {\n        const currentFillStyle = this.drawingService.previewCtx.fillStyle;\n        this.drawingService.previewCtx.fillStyle = 'white';\n\n        this.drawingService.previewCtx.fillRect(\n            this.initialSelection.startingPoint.x,\n            this.initialSelection.startingPoint.y,\n            this.initialSelection.width,\n            this.initialSelection.height,\n        );\n\n        this.drawingService.previewCtx.globalCompositeOperation = 'destination-in';\n        this.drawingService.previewCtx.drawImage(this.selectionImage, this.initialSelection.startingPoint.x, this.initialSelection.startingPoint.y);\n        this.drawingService.previewCtx.globalCompositeOperation = 'source-over';\n\n        this.drawingService.previewCtx.fillStyle = currentFillStyle;\n    }\n\n    printSelectionOnPreview(): void {\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        this.clearSelectionBackground();\n        this.drawingService.previewCtx.save();\n        this.rotateService.rotatePreviewCanvas();\n        this.drawingService.previewCtx.drawImage(this.selectionImage, this.selection.startingPoint.x, this.selection.startingPoint.y);\n        this.drawingService.previewCtx.restore();\n    }\n\n    private move(self: MoveService, isMagnetism: boolean, squareSize: number): void {\n        let moveStep = SELECTION_MOVE_STEP_SIZE;\n        if (isMagnetism) {\n            moveStep = squareSize;\n        }\n\n        if (self.pressedKeys.get(ARROW_KEYS.LEFT)) {\n            self.selection.startingPoint.x -= moveStep;\n        }\n        if (self.pressedKeys.get(ARROW_KEYS.UP)) {\n            self.selection.startingPoint.y -= moveStep;\n        }\n        if (self.pressedKeys.get(ARROW_KEYS.RIGHT)) {\n            self.selection.startingPoint.x += moveStep;\n        }\n        if (self.pressedKeys.get(ARROW_KEYS.DOWN)) {\n            self.selection.startingPoint.y += moveStep;\n        }\n\n        self.printSelectionOnPreview();\n    }\n\n    private isArrowKeyPressed(): boolean {\n        for (const [key] of this.pressedKeys) {\n            if (this.pressedKeys.get(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    setSelection(selection: SelectionBox, incomingSelection: SelectionBox): void {\n        selection.startingPoint.x = incomingSelection.startingPoint.x;\n        selection.startingPoint.y = incomingSelection.startingPoint.y;\n        selection.width = incomingSelection.width;\n        selection.height = incomingSelection.height;\n    }\n}\n","import { Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport { MAX_TEXT_TOOL_SIZE, MIN_TEXT_TOOL_SIZE } from '@app/ressources/global-variables/global-variables';\nimport { FONTS, Fonts } from '@app/ressources/global-variables/text';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { TextService } from '@app/services/tools/text.service';\n\n@Component({\n    selector: 'app-text-attributes',\n    templateUrl: './text-attributes.component.html',\n    styleUrls: ['./text-attributes.component.scss'],\n})\nexport class TextComponent implements OnDestroy {\n    @ViewChild('textSizeInput', { read: ElementRef }) textSizeInput: ElementRef;\n    textSize: number;\n    fontStyle: Fonts = {\n        GEORGIA: FONTS.GEORGIA,\n        ARIAL: FONTS.ARIAL,\n        TIME_NEW_ROMAN: FONTS.TIME_NEW_ROMAN,\n        VERDANA: FONTS.VERDANA,\n        COURIER_NEW: FONTS.COURIER_NEW,\n    };\n    maxTextSize: number = MAX_TEXT_TOOL_SIZE;\n    minTextSize: number = MIN_TEXT_TOOL_SIZE;\n\n    constructor(public textService: TextService, public hotkeyService: HotkeyService) {\n        this.textSize = this.textService.textSize;\n    }\n\n    changeFont(font: string): void {\n        this.textService.font = font;\n        this.textService.applyTextStyle();\n    }\n\n    changeSize(size: number): void {\n        size = Number(size);\n        if (isNaN(size) || size < MIN_TEXT_TOOL_SIZE || size > MAX_TEXT_TOOL_SIZE || size.toString() === '') {\n            alert('La taille du texte doit être un nombre entre 10 et 100.');\n        } else {\n            this.textSize = size;\n            this.textService.textSize = size;\n            this.textService.applyTextStyle();\n        }\n    }\n\n    changeItalic(style: boolean): void {\n        if (style) {\n            this.textService.italicText = 'italic';\n        } else {\n            this.textService.italicText = 'normal';\n        }\n        this.textService.applyTextStyle();\n    }\n\n    changeBoldText(bold: boolean): void {\n        if (bold) {\n            this.textService.boldText = 'bold';\n        } else {\n            this.textService.boldText = 'normal';\n        }\n        this.textService.applyTextStyle();\n    }\n\n    changeAlignment(align: string): void {\n        this.textService.align = align as CanvasTextAlign;\n        this.textService.applyTextStyle();\n    }\n\n    ngOnDestroy(): void {\n        this.textService.createText();\n    }\n\n    onFocus(): void {\n        this.hotkeyService.isHotkeyEnabled = false;\n        this.textService.isWritingEnable = false;\n    }\n\n    onFocusOut(): void {\n        this.textService.isWritingEnable = true;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        if (event.key === 'Enter') {\n            this.textSizeInput.nativeElement.blur();\n            event.stopPropagation();\n        }\n    }\n}\n","<div id=\"textAttributes\">\n    <h2 class=\"toolName\">{{ textService.name }}</h2>\n    <hr />\n    <p>Police</p>\n    <mat-form-field appearance=\"fill\">\n        <mat-select (selectionChange)=\"this.changeFont($event.value)\" [value]=\"fontStyle.GEORGIA\">\n            <mat-option [value]=\"fontStyle.GEORGIA\">Georgia</mat-option>\n            <mat-option [value]=\"fontStyle.ARIAL\">Arial</mat-option>\n            <mat-option [value]=\"fontStyle.TIME_NEW_ROMAN\">Times New Roman</mat-option>\n            <mat-option [value]=\"fontStyle.VERDANA\">Verdana</mat-option>\n            <mat-option [value]=\"fontStyle.COURIER_NEW\">Courier New</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <hr />\n    <p>Taille</p>\n    <div id=\"sizeDetail\">\n        <input\n            #textSizeInput\n            type=\"text\"\n            [(value)]=\"textSize\"\n            (change)=\"changeSize($event.target.value)\"\n            [min]=\"minTextSize\"\n            [max]=\"maxTextSize\"\n            (keydown)=\"onKeyDown($event)\"\n            (focus)=\"onFocus()\"\n            (focusout)=\"onFocusOut()\"\n        />\n        <div>\n            <button (click)=\"changeSize(textSize - 1)\">-</button>\n            <button (click)=\"changeSize(textSize + 1)\">+</button>\n        </div>\n    </div>\n    <hr />\n    <p>Style</p>\n    <div id=\"style\">\n        <mat-checkbox #italic (change)=\"this.changeItalic(italic.checked)\">Italique</mat-checkbox>\n        <mat-checkbox #gras (change)=\"this.changeBoldText(gras.checked)\">Gras</mat-checkbox>\n    </div>\n    <hr />\n    <p>Alignement</p>\n    <mat-button-toggle-group #group=\"matButtonToggleGroup\">\n        <mat-button-toggle value=\"start\" (change)=\"this.changeAlignment($event.value)\" checked>\n            <mat-icon>format_align_left</mat-icon>\n        </mat-button-toggle>\n        <mat-button-toggle value=\"center\" (change)=\"this.changeAlignment($event.value)\">\n            <mat-icon>format_align_center</mat-icon>\n        </mat-button-toggle>\n        <mat-button-toggle value=\"end\" (change)=\"this.changeAlignment($event.value)\">\n            <mat-icon>format_align_right</mat-icon>\n        </mat-button-toggle>\n    </mat-button-toggle-group>\n</div>\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { PipetteService } from '@app/services/tools/pipette.service';\n\n@Component({\n    selector: 'app-pipette-attributes',\n    templateUrl: './pipette-attributes.component.html',\n    styleUrls: ['./pipette-attributes.component.scss'],\n})\nexport class PipetteAttributesComponent implements AfterViewInit, OnInit {\n    @ViewChild('zoom', { static: false }) zoom: ElementRef<HTMLCanvasElement>;\n\n    private zoomCtx: CanvasRenderingContext2D;\n\n    constructor(public pipetteService: PipetteService) {}\n\n    ngOnInit(): void {\n        this.pipetteService.mouseOut.subscribe((data: boolean) => {\n            data ? (this.zoom.nativeElement.style.visibility = 'visible') : (this.zoom.nativeElement.style.visibility = 'hidden');\n        });\n    }\n\n    ngAfterViewInit(): void {\n        this.zoom.nativeElement.style.visibility = 'hidden';\n        this.zoomCtx = this.zoom.nativeElement.getContext('2d') as CanvasRenderingContext2D;\n        this.pipetteService.zoomCtx = this.zoomCtx;\n        this.pipetteService.zoom = this.zoom.nativeElement;\n    }\n}\n","<div id=\"pipetteAttributes\">\n    <h2 class=\"toolName\">{{ pipetteService.name }}</h2>\n    <hr />\n    <canvas id=\"zoom\" #zoom width=\"150px\" height=\"150px\"></canvas>\n</div>\n","import { AfterViewInit, Component, ElementRef, HostListener, Input, ViewChild } from '@angular/core';\nimport { Vec2 } from '@app/classes/vec2';\nimport { ContinueDrawingService } from '@app/services/continue-drawing/continue-drawing.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { ResizeDrawingService } from '@app/services/resize-drawing/resize-drawing.service';\nimport { ToolSelectionService } from '@app/services/tool-selection/tool-selection.service';\n\n@Component({\n    selector: 'app-drawing',\n    templateUrl: './drawing.component.html',\n    styleUrls: ['./drawing.component.scss'],\n})\nexport class DrawingComponent implements AfterViewInit {\n    @ViewChild('baseCanvas', { static: false }) baseCanvas: ElementRef<HTMLCanvasElement>;\n    @ViewChild('previewCanvas', { static: false }) previewCanvas: ElementRef<HTMLCanvasElement>;\n    @ViewChild('gridCanvas', { static: false }) gridCanvas: ElementRef<HTMLCanvasElement>;\n\n    @Input() canvasSize: Vec2;\n    @Input() previewSize: Vec2;\n\n    private baseCtx: CanvasRenderingContext2D;\n    private previewCtx: CanvasRenderingContext2D;\n    private gridCtx: CanvasRenderingContext2D;\n\n    constructor(\n        private drawingService: DrawingService,\n        public toolSelectionService: ToolSelectionService,\n        public resizeDrawingService: ResizeDrawingService,\n        public continueDrawingService: ContinueDrawingService,\n    ) {}\n\n    ngAfterViewInit(): void {\n        this.baseCtx = this.baseCanvas.nativeElement.getContext('2d') as CanvasRenderingContext2D;\n        this.previewCtx = this.previewCanvas.nativeElement.getContext('2d') as CanvasRenderingContext2D;\n        this.gridCtx = this.gridCanvas.nativeElement.getContext('2d') as CanvasRenderingContext2D;\n        this.drawingService.baseCtx = this.baseCtx;\n        this.drawingService.gridCtx = this.gridCtx;\n        this.drawingService.previewCtx = this.previewCtx;\n        this.drawingService.canvas = this.baseCanvas.nativeElement;\n        this.drawingService.previewCanvas = this.previewCanvas.nativeElement;\n        this.drawingService.gridCanvas = this.gridCanvas.nativeElement;\n        this.toolSelectionService.setCurrentToolCursor();\n    }\n\n    @HostListener('mousemove', ['$event'])\n    onMouseMove(event: MouseEvent): void {\n        this.toolSelectionService.currentToolMouseMove(event);\n    }\n\n    @HostListener('mousedown', ['$event'])\n    onMouseDown(event: MouseEvent): void {\n        this.toolSelectionService.currentToolMouseDown(event);\n    }\n\n    @HostListener('mouseup', ['$event'])\n    onMouseUp(event: MouseEvent): void {\n        this.toolSelectionService.currentToolMouseUp(event);\n    }\n\n    @HostListener('mouseleave', ['$event'])\n    onMouseLeave(): void {\n        this.toolSelectionService.currentToolMouseLeave();\n    }\n    @HostListener('mouseenter', ['$event'])\n    onMouseEnter(event: MouseEvent): void {\n        this.toolSelectionService.currentToolMouseEnter(event);\n    }\n    @HostListener('mousewheel', ['$event'])\n    onMouseWheel(event: WheelEvent): void {\n        this.toolSelectionService.currentToolWheelEvent(event);\n    }\n\n    get width(): number {\n        return this.canvasSize.x;\n    }\n\n    get height(): number {\n        return this.canvasSize.y;\n    }\n}\n","<div id=\"canvas-container\">\n    <canvas id=\"canvas\" #baseCanvas [attr.width]=\"width\" [attr.height]=\"height\"></canvas>\n    <canvas id=\"previewLayer\" #previewCanvas [attr.width]=\"width\" [attr.height]=\"height\"></canvas>\n    <canvas id=\"gridLayer\" #gridCanvas [attr.width]=\"width\" [attr.height]=\"height\"></canvas>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    constructor() {\n        const func = (e: MouseEvent) => {\n            e.preventDefault();\n        };\n        document.addEventListener('contextmenu', func, false);\n    }\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<router-outlet></router-outlet>\n","import { MAX_BORDER, MAX_TOOL_WIDTH, MIN_BORDER, MIN_TOOL_WIDTH } from '@app/ressources/global-variables/global-variables';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { Vec2 } from './vec2';\n\n// disabling ts lint because methods have to be empty since they are implemented in the inhereting classes (polymorphism)\n// tslint:disable:no-empty\nexport abstract class Tool {\n    mouseDownCoord: Vec2;\n    mouseDown: boolean = false;\n    name: string;\n    maxToolWidth: number = MAX_TOOL_WIDTH;\n    minToolWidth: number = MIN_TOOL_WIDTH;\n    maxBorderWidth: number = MAX_BORDER;\n    minBorderWidth: number = MIN_BORDER;\n\n    constructor(protected drawingService: DrawingService) {}\n\n    onMouseDown(event: MouseEvent): void {}\n\n    onMouseUp(event: MouseEvent): void {}\n\n    onMouseMove(event: MouseEvent): void {}\n\n    onMouseLeave(): void {}\n\n    onMouseEnter(event: MouseEvent): void {}\n\n    onKeyDown(event: KeyboardEvent): void {}\n\n    onKeyPress(event: KeyboardEvent): void {}\n\n    onKeyUp(event: KeyboardEvent): void {}\n\n    onWheelEvent(event: WheelEvent): void {}\n\n    getPositionFromMouse(event: MouseEvent): Vec2 {\n        return { x: event.offsetX, y: event.offsetY };\n    }\n\n    setCursor(): void {\n        this.drawingService.gridCanvas.style.cursor = 'crosshair';\n    }\n\n    reset(): void {}\n\n    initialize(): void {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FillStyles, FILL_STYLES } from '@app/ressources/global-variables/fill-styles';\n\n@Component({\n    selector: 'app-fill-types-selection',\n    templateUrl: './fill-types-selection.component.html',\n    styleUrls: ['./fill-types-selection.component.scss'],\n})\nexport class FillTypesSelectionComponent {\n    @Input() currentFillStyle: number;\n    @Output() valueChange: EventEmitter<number> = new EventEmitter();\n\n    fillStyles: FillStyles = {\n        FILL_AND_BORDER: FILL_STYLES.FILL_AND_BORDER,\n        FILL: FILL_STYLES.FILL,\n        BORDER: FILL_STYLES.BORDER,\n        DASHED: FILL_STYLES.DASHED,\n    };\n\n    changeValue(event: Event): void {\n        const target = event.target as HTMLInputElement;\n        this.valueChange.emit(Number(target.value));\n    }\n}\n","<div class=\"typeOfFill\">\n    <p class=\"title\">Type de tracé</p>\n    <div class=\"radioContainer\">\n        <label>\n            <input\n                type=\"radio\"\n                name=\"typeOfFill\"\n                [value]=\"fillStyles.FILL_AND_BORDER\"\n                (change)=\"this.changeValue($event)\"\n                [checked]=\"this.currentFillStyle === fillStyles.FILL_AND_BORDER\"\n            />\n            <p>Plein avec contour</p>\n        </label>\n        <label>\n            <input\n                type=\"radio\"\n                name=\"typeOfFill\"\n                [value]=\"fillStyles.FILL\"\n                (change)=\"this.changeValue($event)\"\n                [checked]=\"this.currentFillStyle === fillStyles.FILL\"\n            />\n            <p>Plein</p>\n        </label>\n        <label>\n            <input\n                type=\"radio\"\n                name=\"typeOfFill\"\n                [value]=\"fillStyles.BORDER\"\n                (change)=\"this.changeValue($event)\"\n                [checked]=\"this.currentFillStyle === fillStyles.BORDER\"\n            />\n            <p>Contour</p>\n        </label>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { ToolNames, TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ToolSelectionService } from '@app/services/tool-selection/tool-selection.service';\n\n@Component({\n    selector: 'app-attribute-panel',\n    templateUrl: './attribute-panel.component.html',\n    styleUrls: ['./attribute-panel.component.scss'],\n})\nexport class AttributePanelComponent {\n    toolNames: ToolNames = TOOL_NAMES;\n    constructor(public toolSelectionService: ToolSelectionService) {}\n}\n","<div class=\"attribute-panel\">\n    <div class=\"container\" *ngIf=\"toolSelectionService.currentTool\">\n        <app-pencil-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.PENCIL_TOOL_NAME\"> </app-pencil-attributes>\n        <app-pen-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.PEN_TOOL_NAME\"> </app-pen-attributes>\n        <app-brush-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.BRUSH_TOOL_NAME\"> </app-brush-attributes>\n        <app-spray-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.SPRAY_TOOL_NAME\"> </app-spray-attributes>\n        <app-stamp-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.STAMP_TOOL_NAME\"></app-stamp-attributes>\n        <app-square-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.SQUARE_TOOL_NAME\"> </app-square-attributes>\n        <app-circle-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.CIRCLE_TOOL_NAME\"> </app-circle-attributes>\n        <app-line-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.LINE_TOOL_NAME\"> </app-line-attributes>\n        <app-fill-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.FILL_TOOL_NAME\"> </app-fill-attributes>\n        <app-eraser-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.ERASER_TOOL_NAME\"> </app-eraser-attributes>\n        <app-text-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.TEXT_TOOL_NAME\"> </app-text-attributes>\n        <app-polygon-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.POLYGON_TOOL_NAME\"></app-polygon-attributes>\n        <app-circle-selection-attributes\n            *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.CIRCLE_SELECTION_TOOL_NAME\"\n        ></app-circle-selection-attributes>\n        <app-square-selection-attributes\n            *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.SQUARE_SELECTION_TOOL_NAME\"\n        ></app-square-selection-attributes>\n        <app-magic-wand-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.MAGIC_WAND_TOOL_NAME\"> </app-magic-wand-attributes>\n        <app-pipette-attributes *ngIf=\"toolSelectionService.currentTool.name === this.toolNames.PIPETTE_TOOL_NAME\"> </app-pipette-attributes>\n    </div>\n    <div id=\"modifiers\">\n        <app-grid></app-grid>\n        <app-color-picker></app-color-picker>\n    </div>\n</div>\n","export interface ToolNames {\n    PENCIL_TOOL_NAME: string;\n    PEN_TOOL_NAME: string;\n    BRUSH_TOOL_NAME: string;\n    SPRAY_TOOL_NAME: string;\n    SQUARE_TOOL_NAME: string;\n    CIRCLE_TOOL_NAME: string;\n    LINE_TOOL_NAME: string;\n    FILL_TOOL_NAME: string;\n    ERASER_TOOL_NAME: string;\n    SQUARE_SELECTION_TOOL_NAME: string;\n    CIRCLE_SELECTION_TOOL_NAME: string;\n    PIPETTE_TOOL_NAME: string;\n    POLYGON_TOOL_NAME: string;\n    TEXT_TOOL_NAME: string;\n    MAGIC_WAND_TOOL_NAME: string;\n    STAMP_TOOL_NAME: string;\n}\n\nexport const TOOL_NAMES: ToolNames = {\n    PENCIL_TOOL_NAME: 'Crayon',\n    PEN_TOOL_NAME: 'Plume',\n    BRUSH_TOOL_NAME: 'Pinceau',\n    SPRAY_TOOL_NAME: 'Aérosol',\n    SQUARE_TOOL_NAME: 'Rectangle',\n    CIRCLE_TOOL_NAME: 'Ellipse',\n    LINE_TOOL_NAME: 'Ligne',\n    FILL_TOOL_NAME: 'Sceau',\n    ERASER_TOOL_NAME: 'Efface',\n    SQUARE_SELECTION_TOOL_NAME: 'Sélection - Rectangle',\n    CIRCLE_SELECTION_TOOL_NAME: 'Sélection - Ellipse',\n    PIPETTE_TOOL_NAME: 'Pipette',\n    POLYGON_TOOL_NAME: 'Polygone',\n    TEXT_TOOL_NAME: 'Texte',\n    STAMP_TOOL_NAME: 'Étampe',\n    MAGIC_WAND_TOOL_NAME: 'Baguette Magique',\n};\n\nexport const TOOL_NAMES_ARRAY: string[] = [\n    TOOL_NAMES.PENCIL_TOOL_NAME,\n    TOOL_NAMES.PEN_TOOL_NAME,\n    TOOL_NAMES.BRUSH_TOOL_NAME,\n    TOOL_NAMES.SPRAY_TOOL_NAME,\n    TOOL_NAMES.SQUARE_TOOL_NAME,\n    TOOL_NAMES.CIRCLE_TOOL_NAME,\n    TOOL_NAMES.LINE_TOOL_NAME,\n    TOOL_NAMES.FILL_TOOL_NAME,\n    TOOL_NAMES.ERASER_TOOL_NAME,\n    TOOL_NAMES.PIPETTE_TOOL_NAME,\n    TOOL_NAMES.SQUARE_SELECTION_TOOL_NAME,\n    TOOL_NAMES.CIRCLE_SELECTION_TOOL_NAME,\n    TOOL_NAMES.POLYGON_TOOL_NAME,\n    TOOL_NAMES.TEXT_TOOL_NAME,\n    TOOL_NAMES.STAMP_TOOL_NAME,\n    TOOL_NAMES.MAGIC_WAND_TOOL_NAME,\n];\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { CONFIRM_SAVED_DURATION } from '@app/ressources/global-variables/global-variables';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ServerResponseService {\n    constructor(public snackBar: MatSnackBar) {}\n\n    loadErrorSnackBar(): void {\n        const config = new MatSnackBarConfig();\n        this.snackBar.open('Erreur dans le chargement du dessin', 'Fermer', config);\n    }\n\n    saveErrorSnackBar(): void {\n        const config = new MatSnackBarConfig();\n        this.snackBar.open('Erreur dans la sauvegarde du dessin', 'Fermer', config);\n    }\n\n    deleteErrorSnackBar(): void {\n        const config = new MatSnackBarConfig();\n        this.snackBar.open('Erreur dans la suppression du dessin', 'Fermer', config);\n    }\n\n    saveConfirmSnackBar(): void {\n        const config = new MatSnackBarConfig();\n        config.duration = CONFIRM_SAVED_DURATION;\n        this.snackBar.open('Le dessin a été sauvegardé', 'Fermer', config);\n    }\n\n    sendMailConfirmSnackBar(): void {\n        const config = new MatSnackBarConfig();\n        config.duration = CONFIRM_SAVED_DURATION;\n        this.snackBar.open('Le courriel est bien envoyé', 'Fermer', config);\n    }\n\n    sendMailErrorSnackBar(): void {\n        const config = new MatSnackBarConfig();\n        this.snackBar.open(\"Erreur dans l'envoie du courriel\", 'Fermer', config);\n    }\n}\n","import { AfterViewInit, Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { Vec2 } from '@app/classes/vec2';\nimport { DrawingComponent } from '@app/components/drawing/drawing.component';\nimport { CanvasResizingPoints, CANVAS_RESIZING_POINTS } from '@app/ressources/global-variables/canvas-resizing-points';\nimport {\n    MINIMUM_CANVAS_HEIGHT,\n    MINIMUM_CANVAS_WIDTH,\n    MINIMUM_WORKSPACE_HEIGHT,\n    MINIMUM_WORKSPACE_WIDTH,\n} from '@app/ressources/global-variables/global-variables';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { ResizeDrawingService } from '@app/services/resize-drawing/resize-drawing.service';\nimport { ToolSelectionService } from '@app/services/tool-selection/tool-selection.service';\n@Component({\n    selector: 'app-editor',\n    templateUrl: './editor.component.html',\n    styleUrls: ['./editor.component.scss'],\n})\nexport class EditorComponent implements AfterViewInit {\n    @ViewChild('drawingComponent', { static: false }) drawingComponent: DrawingComponent;\n    @ViewChild('workSpace', { static: false }) workSpaceRef: ElementRef<HTMLDivElement>;\n    @ViewChild('previewDiv', { static: false }) previewDivRef: ElementRef<HTMLDivElement>;\n\n    workSpaceSize: Vec2 = { x: MINIMUM_WORKSPACE_WIDTH, y: MINIMUM_WORKSPACE_HEIGHT };\n    previewSize: Vec2 = { x: MINIMUM_CANVAS_WIDTH, y: MINIMUM_CANVAS_HEIGHT };\n    canvasSize: Vec2 = { x: MINIMUM_CANVAS_WIDTH, y: MINIMUM_CANVAS_HEIGHT };\n    canvasResizingPoints: CanvasResizingPoints = CANVAS_RESIZING_POINTS;\n    previewDiv: HTMLDivElement;\n\n    shortcutsArray: string[] = ['c', 'p', 'w', '1', '2', '3', 'l', 'b', 'e', 'i', 'o', 'g', 's', 'r', 'a', 'z', 'Z', 'd', 'm', 't', '+', '-', 'v'];\n\n    constructor(\n        public hotkeyService: HotkeyService,\n        public toolSelectionService: ToolSelectionService,\n        public resizeDrawingService: ResizeDrawingService,\n    ) {\n        this.resizeDrawingService.workSpaceSize = this.workSpaceSize;\n        this.resizeDrawingService.previewSize = this.previewSize;\n        this.resizeDrawingService.canvasSize = this.canvasSize;\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            const workspaceElement: HTMLElement = this.workSpaceRef.nativeElement;\n            this.workSpaceSize.x = workspaceElement.offsetWidth;\n            this.workSpaceSize.y = workspaceElement.offsetHeight;\n            this.previewDiv = this.previewDivRef.nativeElement;\n            this.previewDiv.style.display = 'none';\n            this.previewDiv.style.borderWidth = '1px';\n            this.previewDiv.style.borderColor = '#09acd9';\n            this.previewDiv.style.borderStyle = 'dashed';\n            this.previewDiv.style.position = 'absolute';\n            this.resizeDrawingService.setDefaultCanvasSize();\n        });\n    }\n\n    @HostListener('document:keyup', ['$event'])\n    onKeyUp(event: KeyboardEvent): void {\n        this.toolSelectionService.currentToolKeyUp(event);\n    }\n\n    @HostListener('document:keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent): void {\n        if (this.shortcutsArray.includes(event.key)) {\n            this.hotkeyService.onKeyDown(event);\n        }\n        this.toolSelectionService.currentToolKeyDown(event);\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.previewDiv.style.display = 'block';\n        this.resizeDrawingService.onMouseDown(event);\n    }\n\n    @HostListener('mousemove', ['$event'])\n    onMouseMove(event: MouseEvent): void {\n        this.resizeDrawingService.resizeCanvas(event);\n    }\n\n    @HostListener('mouseup', ['$event'])\n    onMouseUp(event: MouseEvent): void {\n        this.resizeDrawingService.onMouseUp();\n        this.previewDiv.style.display = 'none';\n        this.toolSelectionService.currentToolMouseUp(event);\n    }\n}\n","<div class=\"container\">\n    <app-sidebar></app-sidebar>\n    <app-attribute-panel></app-attribute-panel>\n    <div #workSpace id=\"workSpace\">\n        <app-drawing #drawingComponent class=\"drawing\" tabindex=\"0\" [canvasSize]=\"canvasSize\" [previewSize]=\"previewSize\"></app-drawing>\n        <div #previewDiv id=\"previewDiv\" [ngStyle]=\"{ height: previewSize.y + 'px', width: previewSize.x + 'px' }\"></div>\n\n        <div\n            [id]=\"canvasResizingPoints.VERTICAL\"\n            class=\"canvasResizePoint\"\n            [ngStyle]=\"{ 'top.px': previewSize.y - 3, 'left.px': previewSize.x / 2 - 3 }\"\n            (mousedown)=\"onMouseDown($event)\"\n        ></div>\n        <div\n            [id]=\"canvasResizingPoints.VERTICAL_AND_HORIZONTAL\"\n            class=\"canvasResizePoint\"\n            [ngStyle]=\"{ 'top.px': previewSize.y - 9, 'left.px': previewSize.x - 3 }\"\n            (mousedown)=\"onMouseDown($event)\"\n        ></div>\n        <div\n            [id]=\"canvasResizingPoints.HORIZONTAL\"\n            class=\"canvasResizePoint\"\n            [ngStyle]=\"{ 'top.px': previewSize.y / 2 - 15, 'left.px': previewSize.x - 3 }\"\n            (mousedown)=\"onMouseDown($event)\"\n        ></div>\n    </div>\n</div>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { ContinueDrawingService } from '@app/services/continue-drawing/continue-drawing.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app/app.component';\nimport { AttributePanelComponent } from './components/attribute-panel/attribute-panel.component';\nimport { CarouselComponent } from './components/carousel/carousel.component';\nimport { ColorPickerComponent } from './components/color-picker/color-picker.component';\nimport { DrawingDetailComponent } from './components/drawing-detail/drawing-detail.component';\nimport { DrawingComponent } from './components/drawing/drawing.component';\nimport { EditorComponent } from './components/editor/editor.component';\nimport { ExportComponent } from './components/export/export.component';\nimport { GeneralDetailComponent } from './components/general-detail/general-detail.component';\nimport { GridComponent } from './components/grid/grid.component';\nimport { LoadSelectedDrawingAlertComponent } from './components/load-selected-drawing-alert/load-selected-drawing-alert.component';\nimport { MainPageComponent } from './components/main-page/main-page.component';\nimport { NewDrawingModalComponent } from './components/new-drawing-modal/new-drawing-modal.component';\nimport { SavingComponent } from './components/saving/saving.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { BrushAttributesComponent } from './components/tools/brush-attributes/brush-attributes.component';\nimport { CircleAttributesComponent } from './components/tools/circle-attributes/circle-attributes.component';\nimport { CircleSelectionAttributesComponent } from './components/tools/circle-selection-attributes/circle-selection-attributes.component';\nimport { EraserAttributesComponent } from './components/tools/eraser-attributes/eraser-attributes.component';\nimport { FillAttributesComponent } from './components/tools/fill-attributes/fill-attributes.component';\nimport { LineAttributesComponent } from './components/tools/line-attributes/line-attributes.component';\nimport { MagicWandAttributesComponent } from './components/tools/magic-wand-attributes/magic-wand-attributes.component';\nimport { PenAttributesComponent } from './components/tools/pen-attributes/pen-attributes.component';\nimport { PencilAttributesComponent } from './components/tools/pencil-attributes/pencil-attributes.component';\nimport { PipetteAttributesComponent } from './components/tools/pipette-attributes/pipette-attributes.component';\nimport { PolygonAttributesComponent } from './components/tools/polygon-attributes/polygon-attributes.component';\nimport { FillTypesSelectionComponent } from './components/tools/shared-Attributes/fill-types-selection/fill-types-selection.component';\nimport { MagnetismComponent } from './components/tools/shared-Attributes/magnetism/magnetism.component';\nimport { SliderComponent } from './components/tools/shared-Attributes/slider/slider.component';\nimport { SprayAttributesComponent } from './components/tools/spray-attributes/spray-attributes.component';\nimport { SquareAttributesComponent } from './components/tools/square-attributes/square-attributes.component';\nimport { SquareSelectionAttributesComponent } from './components/tools/square-selection-attributes/square-selection-attributes.component';\nimport { StampAttributesComponent } from './components/tools/stamp-attributes/stamp-attributes.component';\nimport { TextComponent } from './components/tools/text-attributes/text-attributes.component';\nimport { UserGuideComponent } from './components/userguide/user-guide.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        GridComponent,\n        EditorComponent,\n        SidebarComponent,\n        MagicWandAttributesComponent,\n        DrawingComponent,\n        MainPageComponent,\n        UserGuideComponent,\n        LoadSelectedDrawingAlertComponent,\n        UserGuideComponent,\n        DrawingDetailComponent,\n        GeneralDetailComponent,\n        AttributePanelComponent,\n        BrushAttributesComponent,\n        CircleAttributesComponent,\n        EraserAttributesComponent,\n        LineAttributesComponent,\n        PencilAttributesComponent,\n        SliderComponent,\n        SquareAttributesComponent,\n        NewDrawingModalComponent,\n        ColorPickerComponent,\n        FillTypesSelectionComponent,\n        PipetteAttributesComponent,\n        FillAttributesComponent,\n        SavingComponent,\n        CarouselComponent,\n        ExportComponent,\n        PolygonAttributesComponent,\n        SquareSelectionAttributesComponent,\n        CircleSelectionAttributesComponent,\n        PenAttributesComponent,\n        SprayAttributesComponent,\n        TextComponent,\n        StampAttributesComponent,\n        MagnetismComponent,\n    ],\n    imports: [\n        BrowserModule,\n        MatCardModule,\n        NoopAnimationsModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatChipsModule,\n        MatTabsModule,\n        MatSliderModule,\n        MatSnackBarModule,\n        MatRadioModule,\n        MatTooltipModule,\n        MatIconModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatExpansionModule,\n        MatSelectModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCheckboxModule,\n        MatInputModule,\n    ],\n    entryComponents: [UserGuideComponent, MainPageComponent],\n    providers: [{ provide: 'ContinueDrawingService', useClass: ContinueDrawingService }],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\nimport { LineService } from '@app/services/tools/line.service';\n\n@Component({\n    selector: 'app-line-attributes',\n    templateUrl: './line-attributes.component.html',\n    styleUrls: ['./line-attributes.component.scss'],\n})\nexport class LineAttributesComponent {\n    toolWidth: number;\n    dotWith: number;\n    isDot: boolean;\n\n    constructor(public lineService: LineService) {\n        this.toolWidth = lineService.lineData.lineWidth;\n        this.dotWith = lineService.lineData.dotWidth;\n        this.isDot = lineService.lineData.isDot;\n    }\n\n    changeDotWidth(newWidth: number): void {\n        this.dotWith = newWidth;\n        this.lineService.changeDotWidth(newWidth);\n    }\n\n    changeLineWidth(newWidth: number): void {\n        this.toolWidth = newWidth;\n        this.lineService.changeLineWidth(newWidth);\n    }\n\n    changeJunctionPoint(isChecked: boolean): void {\n        this.lineService.changeJunction(isChecked);\n    }\n}\n","<div id=\"lineAttributes\">\n    <h2 class=\"toolName\">{{ lineService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Épaisseur Ligne\"\n        [min]=\"lineService.minToolWidth\"\n        [max]=\"lineService.maxToolWidth\"\n        [step]=\"1\"\n        [value]=\"toolWidth\"\n        (valueChange)=\"changeLineWidth($event)\"\n    ></app-slider>\n\n    <app-slider\n        title=\"Diamètre Point Jonction\"\n        [min]=\"lineService.minToolWidth\"\n        [max]=\"lineService.maxToolWidth\"\n        [step]=\"1\"\n        [value]=\"dotWith\"\n        (valueChange)=\"changeDotWidth($event)\"\n    ></app-slider>\n    <mat-checkbox (change)=\"changeJunctionPoint($event.checked)\" [checked]=\"isDot\">Afficher jonction</mat-checkbox>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Tool } from '@app/classes/tool';\nimport { Pencil } from '@app/classes/tool-properties';\nimport { MouseButton } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PencilService extends Tool {\n    pencilData: Pencil;\n    name: string = TOOL_NAMES.PENCIL_TOOL_NAME;\n\n    constructor(\n        drawingService: DrawingService,\n        public colorSelectionService: ColorSelectionService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n        this.pencilData = {\n            type: 'pencil',\n            path: [],\n            lineWidth: 1,\n            primaryColor: this.colorSelectionService.primaryColor,\n        };\n    }\n\n    onMouseLeave(): void {\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        this.drawPencilStroke(this.drawingService.baseCtx, this.pencilData);\n        this.clearPath();\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n        if (event.button !== MouseButton.LEFT) {\n            return;\n        } else {\n            this.mouseDown = true;\n            this.clearPath();\n            this.mouseDownCoord = this.getPositionFromMouse(event);\n            this.pencilData.path.push(this.mouseDownCoord);\n            this.pencilData.primaryColor = this.colorSelectionService.primaryColor;\n            this.drawPencilStroke(this.drawingService.previewCtx, this.pencilData);\n            this.undoRedoStackService.setIsToolInUse(true);\n        }\n    }\n\n    onMouseUp(event: MouseEvent): void {\n        if (this.mouseDown) {\n            const mousePosition = this.getPositionFromMouse(event);\n            this.pencilData.path.push(mousePosition);\n            this.undoRedoStackService.updateStack(this.pencilData);\n            this.pencilData.primaryColor = this.colorSelectionService.primaryColor;\n            this.drawPencilStroke(this.drawingService.baseCtx, this.pencilData);\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.undoRedoStackService.setIsToolInUse(false);\n        }\n        this.mouseDown = false;\n        this.clearPath();\n        this.drawingService.autoSave();\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        if (this.mouseDown) {\n            const mousePosition = this.getPositionFromMouse(event);\n            this.pencilData.path.push(mousePosition);\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.pencilData.primaryColor = this.colorSelectionService.primaryColor;\n            this.drawPencilStroke(this.drawingService.previewCtx, this.pencilData);\n        }\n    }\n\n    drawPencilStroke(ctx: CanvasRenderingContext2D, pencil: Pencil): void {\n        ctx.lineWidth = pencil.lineWidth;\n        ctx.strokeStyle = pencil.primaryColor;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.beginPath();\n        for (const point of pencil.path) {\n            ctx.lineTo(point.x, point.y);\n        }\n        ctx.stroke();\n    }\n\n    changeWidth(newWidth: number): void {\n        this.pencilData.lineWidth = newWidth;\n    }\n\n    private clearPath(): void {\n        this.pencilData.path = [];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SelectionBox } from '@app/classes/selection-box';\nimport { Tool } from '@app/classes/tool';\nimport { Selection } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { AlignmentNames, ALIGNMENT_NAMES } from '@app/ressources/global-variables/alignment-names';\nimport { FILL_STYLES } from '@app/ressources/global-variables/fill-styles';\nimport {\n    ANGLE_HALF_TURN,\n    DASH_LENGTH,\n    DASH_SPACE_LENGTH,\n    MouseButton,\n    SELECTION_POINT_WIDTH,\n} from '@app/ressources/global-variables/global-variables';\nimport { GridInfo } from '@app/ressources/global-variables/grid-info';\nimport { ClipboardService } from '@app/services/clipboard/clipboard.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { CircleService } from '@app/services/tools/circle.service';\nimport { MagnetismService } from '@app/services/tools/selection-services/magnetism.service';\nimport { SquareService } from '@app/services/tools/square.service';\nimport { MoveService } from '@app/services/tools/transformation-services/move.service';\nimport { RotateService } from '@app/services/tools/transformation-services/rotate.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\nimport { Observable, Subject } from 'rxjs';\n@Injectable({\n    providedIn: 'root',\n})\n\n// disabling ts lint because methods have to be empty since they are implemented in the inhereting classes (polymorphism)\n// tslint:disable:no-empty\nexport class SelectionService extends Tool {\n    initialSelection: SelectionBox = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n    selection: SelectionBox = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n    selectionImage: HTMLCanvasElement = document.createElement('canvas');\n    transormation: string = '';\n    selectionType: number;\n    underlyingService: SquareService | CircleService;\n    isEscapeKeyPressed: boolean;\n    isShiftKeyDown: boolean;\n    selectionData: Selection;\n    canvasData: ImageData;\n    isNewSelection: boolean = false;\n    isSelectionOver: boolean = true;\n    isSelectionEmptySubject: Subject<boolean> = new Subject<boolean>();\n    isMagnetism: boolean = false;\n    squareSize: number;\n    alignmentNames: AlignmentNames = ALIGNMENT_NAMES;\n    currentAlignment: string = this.alignmentNames.ALIGN_TOP_LEFT_NAME;\n    mouseDownCoord: Vec2 = { x: 0, y: 0 };\n\n    constructor(\n        public drawingService: DrawingService,\n        public moveService: MoveService,\n        public rotateService: RotateService,\n        public clipboardService: ClipboardService,\n        public magnetismService: MagnetismService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n        this.isSelectionEmptySubject.next(true);\n    }\n\n    initialize(): void {\n        this.drawingService.previewCtx.lineWidth = 1;\n        this.drawingService.previewCtx.strokeStyle = 'black';\n        this.drawingService.previewCtx.setLineDash([DASH_LENGTH, DASH_SPACE_LENGTH]);\n        if (\n            (this.clipboardService.selection.height !== 0 || this.clipboardService.selection.height !== 0) &&\n            this.selectionType === this.clipboardService.selectionType\n        ) {\n            this.clipboardService.isPasteAvailableSubject.next(true);\n        }\n    }\n\n    setGridSpacing(size: number): void {\n        this.squareSize = size;\n    }\n\n    enableMagnetism(isChecked: boolean): void {\n        this.isMagnetism = isChecked;\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.drawingService.previewCtx.setLineDash([DASH_LENGTH, DASH_SPACE_LENGTH]);\n        if (event.button !== MouseButton.LEFT) return;\n        if (!this.isInSelection(event)) {\n            this.isNewSelection = true;\n            if (!this.moveService.isTransformationOver) {\n                this.moveService.isTransformationOver = true;\n                this.moveService.printSelectionOnPreview();\n                this.applyPreview();\n            }\n            if (!this.rotateService.isRotationOver) {\n                this.rotateService.restoreSelection();\n                this.applyPreview();\n            }\n            this.isSelectionOver = true;\n            this.selection = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n            this.isSelectionEmptySubject.next(true);\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.underlyingService.changeWidth(1);\n            this.underlyingService.onMouseDown(event);\n        } else {\n            this.isSelectionOver = false;\n            this.mouseDownCoord.x = event.x;\n            this.mouseDownCoord.y = event.y;\n            this.transormation = 'move';\n            this.moveService.onMouseDown(event);\n        }\n        this.undoRedoStackService.setIsToolInUse(true);\n    }\n\n    onMouseUp(event: MouseEvent): void {\n        if (this.isNewSelection) {\n            this.underlyingService.setLastPoint(this.getPositionFromMouse(event));\n            const currentFillStyle = this.underlyingService.getFillStyle();\n            this.underlyingService.setFillStyle(FILL_STYLES.DASHED);\n\n            this.selection = this.underlyingService.drawShape(this.drawingService.previewCtx);\n            if (this.selection.height !== 0 && this.selection.width !== 0) {\n                this.isSelectionEmptySubject.next(false);\n                this.isSelectionOver = false;\n                this.setSelection(this.initialSelection, this.selection);\n                this.setSelectionData();\n            }\n            this.underlyingService.setFillStyle(currentFillStyle);\n            this.isNewSelection = false;\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        } else if (this.transormation === 'move') {\n            this.transormation = '';\n        }\n        this.strokeSelection();\n        this.setSelectionPoint();\n        this.undoRedoStackService.setIsToolInUse(false);\n        this.drawingService.autoSave();\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        if (this.isNewSelection) {\n            const currentFillStyle = this.underlyingService.getFillStyle();\n            this.underlyingService.setFillStyle(FILL_STYLES.BORDER);\n            this.underlyingService.onMouseMove(event);\n            this.underlyingService.setFillStyle(currentFillStyle);\n        } else if (this.transormation === 'move') {\n            if (this.isMagnetism) {\n                const mousePosDifferenceX = event.x - this.mouseDownCoord.x;\n                const mousePosDifferenceY = event.y - this.mouseDownCoord.y;\n                this.onMouseMoveMagnetism(mousePosDifferenceX, mousePosDifferenceY);\n            } else {\n                this.moveService.onMouseMove(event.movementX, event.movementY);\n            }\n        }\n    }\n\n    onMouseMoveMagnetism(mousePosDifferenceX: number, mousePosDifferenceY: number): void {\n        const gridInfo: GridInfo = { SQUARE_SIZE: this.squareSize, ALIGNMENT: this.currentAlignment };\n        const changeX = this.magnetismService.magnetismXAxisChange(mousePosDifferenceX, gridInfo, this.selection);\n        this.mouseDownCoord.x = this.mouseDownCoord.x + changeX;\n        const changeY = this.magnetismService.magnetismYAxisChange(mousePosDifferenceY, gridInfo, this.selection);\n        this.mouseDownCoord.y = this.mouseDownCoord.y + changeY;\n        this.magnetismService.onMouseMoveMagnetism(changeX, changeY);\n    }\n\n    isSnappedOnGrid(coordinates: Vec2): boolean {\n        if (coordinates.x % this.squareSize === 0 && coordinates.y % this.squareSize === 0) return true;\n        return false;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        this.rotateService.onKeyDown(event);\n        if (event.ctrlKey) {\n            this.ctrlKeyDown(event);\n        }\n        if (this.selection.height !== 0 || this.selection.height !== 0) {\n            const axisCoordinates: Vec2 = this.magnetismService.magnetismCoordinateReference(this.currentAlignment, this.selection);\n            if (this.isMagnetism && !this.isSnappedOnGrid(axisCoordinates)) {\n                this.moveService.snapOnGrid(event, axisCoordinates, this.squareSize);\n            } else {\n                this.moveService.onKeyDown(event, this.isMagnetism, this.squareSize);\n            }\n        }\n        if (this.isNewSelection) {\n            this.underlyingService.setFillStyle(FILL_STYLES.DASHED);\n            this.underlyingService.onKeyDown(event);\n        }\n        switch (event.key) {\n            case 'Escape': {\n                this.isEscapeKeyPressed = true;\n                this.reset();\n                break;\n            }\n            case 'Shift': {\n                this.isShiftKeyDown = true;\n                if (this.underlyingService) this.underlyingService.setIsShiftDown(true);\n                break;\n            }\n            case 'Delete': {\n                this.drawingService.clearCanvas(this.drawingService.previewCtx);\n                this.moveService.clearSelectionBackground();\n                this.applyPreview();\n                this.selection = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n                this.isSelectionEmptySubject.next(true);\n                const selectionImageCtx = this.selectionImage.getContext('2d') as CanvasRenderingContext2D;\n                selectionImageCtx.clearRect(0, 0, this.selectionImage.width, this.selectionImage.height);\n                this.moveService.initialize(this.selection, this.selectionImage);\n                this.moveService.isTransformationOver = true;\n                break;\n            }\n        }\n    }\n\n    ctrlKeyDown(event: KeyboardEvent): void {\n        switch (event.key) {\n            case 'x': {\n                this.cut();\n                break;\n            }\n            case 'c': {\n                this.copy();\n                break;\n            }\n            case 'v': {\n                this.paste();\n                break;\n            }\n        }\n    }\n\n    selectAll(): void {\n        this.selection = {\n            startingPoint: { x: 0, y: 0 },\n            width: this.drawingService.canvas.width,\n            height: this.drawingService.canvas.height,\n        };\n        this.isSelectionEmptySubject.next(false);\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        this.underlyingService.setFirstPoint({ x: 0, y: 0 });\n        this.underlyingService.setLastPoint({ x: this.drawingService.canvas.width, y: this.drawingService.canvas.height });\n        this.underlyingService.setFillStyle(FILL_STYLES.DASHED);\n        this.selection = this.underlyingService.drawShape(this.drawingService.previewCtx);\n        this.setSelection(this.initialSelection, this.selection);\n        this.setSelectionData();\n        this.setSelectionPoint();\n    }\n\n    onKeyUp(event: KeyboardEvent): void {\n        if (event.key === 'z') {\n        }\n        this.moveService.onKeyUp(event);\n        this.rotateService.onKeyUp(event);\n        if (!this.isShiftKeyDown) {\n            this.underlyingService.onKeyUp(event);\n            this.strokeSelection();\n        }\n        if (event.key === 'Shift') {\n            if (this.isNewSelection) {\n                this.underlyingService.onKeyUp(event);\n            }\n            this.underlyingService.setIsShiftDown(false);\n            this.isShiftKeyDown = false;\n        }\n        this.setSelectionPoint();\n    }\n\n    isInSelection(event: MouseEvent): boolean {\n        const currentPosition = this.getPositionFromMouse(event);\n        if (this.rotateService.mouseWheel) {\n            const angleRad = this.rotateService.angle * (Math.PI / ANGLE_HALF_TURN);\n            const sin = Math.sin(angleRad);\n            const cos = Math.cos(angleRad);\n            const x =\n                cos * (currentPosition.x - this.rotateService.calculateCenter().x) +\n                sin * (currentPosition.y - this.rotateService.calculateCenter().y) +\n                this.rotateService.calculateCenter().x;\n            const y =\n                cos * (currentPosition.y - this.rotateService.calculateCenter().y) -\n                sin * (currentPosition.x - this.rotateService.calculateCenter().x) +\n                this.rotateService.calculateCenter().y;\n            currentPosition.x = x;\n            currentPosition.y = y;\n        }\n        if (\n            currentPosition.x > this.selection.startingPoint.x &&\n            currentPosition.x < this.selection.startingPoint.x + this.selection.width &&\n            currentPosition.y > this.selection.startingPoint.y &&\n            currentPosition.y < this.selection.startingPoint.y + this.selection.height\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    reset(): void {\n        if (this.selection.height !== 0 && this.selection.height !== 0 && !this.isEscapeKeyPressed) {\n            this.moveService.printSelectionOnPreview();\n            this.applyPreview();\n        }\n        this.selection = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n        this.isSelectionEmptySubject.next(true);\n        this.moveService.initialSelection = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n        this.mouseDown = false;\n        this.transormation = '';\n        this.moveService.isTransformationOver = true;\n        this.drawingService.previewCtx.setLineDash([0]);\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        this.clipboardService.isPasteAvailableSubject.next(false);\n    }\n\n    setSelection(selection: SelectionBox, incomingSelection: SelectionBox): void {\n        selection.startingPoint.x = incomingSelection.startingPoint.x;\n        selection.startingPoint.y = incomingSelection.startingPoint.y;\n        selection.width = incomingSelection.width;\n        selection.height = incomingSelection.height;\n    }\n\n    setSelectionImage(selectionImage: HTMLCanvasElement): void {\n        this.selectionImage.width = selectionImage.width;\n        this.selectionImage.height = selectionImage.height;\n        const selectionImageCtx = this.selectionImage.getContext('2d') as CanvasRenderingContext2D;\n        selectionImageCtx.drawImage(selectionImage, 0, 0);\n    }\n\n    setSelectionData(): void {}\n\n    strokeSelection(): void {}\n\n    applyPreview(): void {\n        this.drawingService.applyPreview();\n        this.canvasData = this.drawingService.getCanvasData();\n        this.updateSelectionData();\n        this.undoRedoStackService.updateStack(this.selectionData);\n    }\n\n    updateSelectionData(): void {\n        this.selectionData = {\n            type: 'selection',\n            imageData: this.canvasData,\n        };\n    }\n\n    setSelectionPoint(): void {\n        if (this.selection.height !== 0 && this.selection.width !== 0) {\n            const topY: number = this.selection.startingPoint.y - SELECTION_POINT_WIDTH / 2;\n            const middleY: number = this.selection.startingPoint.y + this.selection.height / 2 - SELECTION_POINT_WIDTH / 2;\n            const bottomY: number = this.selection.startingPoint.y + this.selection.height - SELECTION_POINT_WIDTH / 2;\n            const leftX: number = this.selection.startingPoint.x - SELECTION_POINT_WIDTH / 2;\n            const middleX: number = this.selection.startingPoint.x + this.selection.width / 2 - SELECTION_POINT_WIDTH / 2;\n            const rightX: number = this.selection.startingPoint.x + this.selection.width - SELECTION_POINT_WIDTH / 2;\n\n            this.drawingService.previewCtx.save();\n            this.rotateService.rotatePreviewCanvas();\n            this.drawingService.previewCtx.fillStyle = '#09acd9';\n            this.drawingService.previewCtx.fillRect(leftX, topY, SELECTION_POINT_WIDTH, SELECTION_POINT_WIDTH);\n            this.drawingService.previewCtx.fillRect(middleX, topY, SELECTION_POINT_WIDTH, SELECTION_POINT_WIDTH);\n            this.drawingService.previewCtx.fillRect(rightX, topY, SELECTION_POINT_WIDTH, SELECTION_POINT_WIDTH);\n            this.drawingService.previewCtx.fillRect(leftX, middleY, SELECTION_POINT_WIDTH, SELECTION_POINT_WIDTH);\n            this.drawingService.previewCtx.fillRect(rightX, middleY, SELECTION_POINT_WIDTH, SELECTION_POINT_WIDTH);\n            this.drawingService.previewCtx.fillRect(leftX, bottomY, SELECTION_POINT_WIDTH, SELECTION_POINT_WIDTH);\n            this.drawingService.previewCtx.fillRect(middleX, bottomY, SELECTION_POINT_WIDTH, SELECTION_POINT_WIDTH);\n            this.drawingService.previewCtx.fillRect(rightX, bottomY, SELECTION_POINT_WIDTH, SELECTION_POINT_WIDTH);\n            this.drawingService.previewCtx.restore();\n        }\n    }\n\n    onWheelEvent(event: WheelEvent): void {\n        this.drawingService.previewCtx.setLineDash([DASH_LENGTH, DASH_SPACE_LENGTH]);\n        if (!this.isSelectionOver) {\n            this.rotateService.onWheelEvent(event);\n            this.strokeSelection();\n            this.setSelectionPoint();\n        }\n    }\n\n    cut(): void {\n        if (this.selection.height !== 0 || this.selection.height !== 0) {\n            this.clipboardService.copy(this.selection, this.selectionImage, this.rotateService.angle);\n            this.clipboardService.selectionType = this.selectionType;\n            this.moveService.clearSelectionBackground();\n            this.applyPreview();\n            this.selection = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n            this.isSelectionEmptySubject.next(true);\n            this.moveService.isTransformationOver = true;\n            this.isSelectionOver = true;\n        }\n    }\n\n    copy(): void {\n        if (this.selection.height !== 0 || this.selection.height !== 0) {\n            this.clipboardService.copy(this.selection, this.selectionImage, this.rotateService.angle);\n            this.clipboardService.selectionType = this.selectionType;\n            this.moveService.printSelectionOnPreview();\n        }\n    }\n\n    paste(): void {\n        if (\n            (this.clipboardService.selection.height !== 0 || this.clipboardService.selection.height !== 0) &&\n            this.selectionType === this.clipboardService.selectionType\n        ) {\n            if (!this.moveService.isTransformationOver || !this.isSelectionOver) {\n                this.moveService.clearSelectionBackground();\n                this.moveService.printSelectionOnPreview();\n                this.applyPreview();\n            }\n            this.setSelection(this.selection, this.clipboardService.selection);\n            this.setSelectionImage(this.clipboardService.clipBoardCanvas);\n            this.rotateService.initialize(this.selection, this.selectionImage);\n            this.isSelectionEmptySubject.next(false);\n            this.rotateService.angle = this.clipboardService.angle;\n            this.rotateService.initialSelection = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n            this.isSelectionOver = false;\n            this.moveService.initialize(this.selection, this.selectionImage);\n            this.moveService.initialSelection = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n            this.moveService.printSelectionOnPreview();\n            this.moveService.isTransformationOver = false;\n            this.strokeSelection();\n            this.setSelectionPoint();\n        }\n    }\n\n    getIsSelectionEmptySubject(): Observable<boolean> {\n        return this.isSelectionEmptySubject.asObservable();\n    }\n\n    setMagnetismAlignment(currentAlignment: string): void {}\n    // tslint:disable-next-line: max-file-line-count\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-load-selected-drawing-alert',\n    templateUrl: './load-selected-drawing-alert.component.html',\n    styleUrls: ['./load-selected-drawing-alert.component.scss'],\n})\nexport class LoadSelectedDrawingAlertComponent {\n    constructor(public dialogRef: MatDialogRef<LoadSelectedDrawingAlertComponent>) {}\n\n    close(): void {\n        this.dialogRef.close('Fermer');\n    }\n\n    load(): void {\n        this.dialogRef.close('Oui');\n    }\n}\n","<div class=\"loadSelectedModal\">\n    <h1 mat-dialog-title>\n        Attention\n        <mat-icon class=\"example-tab-icon\">warning</mat-icon>\n    </h1>\n    <div mat-dialog-content class=\"text\">\n        <p>Il y a présentement déjà un dessin sur la surface.</p>\n        Voulez-vous l'effacer et charger le dessin sélectionné?\n    </div>\n    <div mat-dialog-actions>\n        <button mat-button id=\"loadDrawing\" (click)=\"load()\" mat-dialog-close>Oui</button>\n        <button mat-button id=\"close\" color=\"warn\" (click)=\"close()\" mat-dialog-close>Annuler</button>\n    </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DBData, ID_NAME, MetaData, NAME, TAGS_NAME } from '@common/communication/drawing-data';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DatabaseService {\n    private readonly BASE_URL: string = 'http://localhost:3000/api/database';\n\n    constructor(private http: HttpClient) {}\n\n    addDrawing(meta: MetaData, blob: Blob): Observable<void> {\n        const formData = new FormData();\n        formData.append(ID_NAME, meta.id);\n        formData.append(NAME, meta.name);\n        meta.tags.forEach((tag: string) => {\n            formData.append(TAGS_NAME, tag);\n        });\n        formData.append('image', blob);\n        return this.http.post<void>(this.BASE_URL + '/addDrawing', formData);\n    }\n\n    deleteDrawing(fileName: string): Observable<void> {\n        return this.http.delete<void>(this.BASE_URL + '/deleteDrawing/' + fileName);\n    }\n\n    getAllDBData(): Observable<DBData[]> {\n        return this.http.get<DBData[]>(this.BASE_URL + '/getDBData').pipe(catchError(this.handleError<DBData[]>('getAllDBData')));\n    }\n    getDrawingPng(filename: string): Observable<Blob> {\n        return this.http\n            .get<Blob>(this.BASE_URL + '/getDrawingPng/' + filename, { responseType: 'blob' as 'json' })\n            .pipe(catchError(this.handleError<Blob>('getDrawingPng')));\n    }\n\n    private handleError<T>(request: string, result?: T): (error: Error) => Observable<T> {\n        return (error: Error): Observable<T> => {\n            return of(result as T);\n        };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    INITIAL_STAMP_ANGLE,\n    INITIAL_STAMP_SIZE,\n    MAX_STAMP_SIZE,\n    MIN_STAMP_SIZE,\n    SCALE_FACTOR,\n    StampAttributes,\n    STAMPS,\n    TRANSLATION_FACTOR,\n} from '@app/classes/stamps';\nimport { Tool } from '@app/classes/tool';\nimport { Stamp } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { ANGLE_HALF_TURN, MAX_ANGLE, ROTATION_STEP } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\nimport { Observable, Subject } from 'rxjs';\n@Injectable({\n    providedIn: 'root',\n})\nexport class StampService extends Tool {\n    name: string = TOOL_NAMES.STAMP_TOOL_NAME;\n    maxSize: number = MAX_STAMP_SIZE;\n    minSize: number = MIN_STAMP_SIZE;\n    private angleObservable: Subject<number> = new Subject<number>();\n    private currentMouseEvent: MouseEvent;\n    private isAltKeyDown: boolean = false;\n    private stampData: Stamp;\n\n    constructor(\n        public drawingService: DrawingService,\n        public colorSelectionService: ColorSelectionService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n        this.stampData = {\n            type: 'stamp',\n            color: this.colorSelectionService.primaryColor,\n            size: INITIAL_STAMP_SIZE,\n            position: { x: 0, y: 0 },\n            currentStamp: STAMPS.ANGULAR,\n            angle: INITIAL_STAMP_ANGLE,\n        };\n    }\n\n    setSize(newSize: number): void {\n        this.stampData.size = newSize;\n    }\n    setCurrentStamp(newStamp: StampAttributes): void {\n        this.stampData.currentStamp = newStamp;\n    }\n    setAngle(newAngle: number): void {\n        this.stampData.angle = newAngle;\n    }\n\n    getSize(): number {\n        return this.stampData.size;\n    }\n\n    setCursor(): void {\n        this.drawingService.gridCanvas.style.cursor = 'none';\n    }\n\n    onMouseEnter(): void {\n        this.setCursor();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        if (event.key === 'Alt') {\n            event.preventDefault();\n            this.isAltKeyDown = true;\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent): void {\n        if (event.key === 'Alt') {\n            this.isAltKeyDown = false;\n        }\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        this.currentMouseEvent = event;\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        this.updateStampData(event);\n        this.printStamp(this.drawingService.previewCtx, this.stampData);\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.updateStampData(event);\n        this.printStamp(this.drawingService.baseCtx, this.stampData);\n        this.undoRedoStackService.updateStack(this.stampData);\n        this.undoRedoStackService.setIsToolInUse(false);\n        this.drawingService.autoSave();\n    }\n\n    printStamp(ctx: CanvasRenderingContext2D, stampData: Stamp): void {\n        const path = new Path2D(stampData.currentStamp.path);\n\n        const center: Vec2 = { x: stampData.position.x, y: stampData.position.y };\n\n        // Rotate stamp\n        ctx.translate(center.x, center.y);\n        ctx.rotate(-((stampData.angle * Math.PI) / ANGLE_HALF_TURN));\n        ctx.translate(-center.x, -center.y);\n\n        // Move stamp center to cursor position\n        ctx.translate(stampData.position.x - stampData.size * TRANSLATION_FACTOR, stampData.position.y - stampData.size * TRANSLATION_FACTOR);\n        ctx.scale(stampData.size / SCALE_FACTOR, stampData.size / SCALE_FACTOR);\n\n        // Print stamp on canvas\n        ctx.strokeStyle = ctx.fillStyle = stampData.color;\n        ctx.stroke(path);\n        ctx.fill(path);\n        ctx.scale(stampData.size * SCALE_FACTOR, stampData.size * SCALE_FACTOR);\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    onWheelEvent(event: WheelEvent): void {\n        let rotationStep = ROTATION_STEP;\n        if (this.isAltKeyDown) {\n            rotationStep = 1;\n        }\n        this.changeAngle(this.stampData.angle - (event.deltaY / Math.abs(event.deltaY)) * rotationStep);\n        this.onMouseMove(this.currentMouseEvent);\n    }\n\n    onMouseLeave(): void {\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n    }\n\n    updateStampData(mouseEvent: MouseEvent): void {\n        this.stampData.color = this.colorSelectionService.primaryColor;\n        this.stampData.position = this.getPositionFromMouse(mouseEvent);\n    }\n\n    getAngle(): Observable<number> {\n        return this.angleObservable;\n    }\n\n    changeAngle(newAngle: number): void {\n        newAngle %= MAX_ANGLE;\n        if (newAngle < 0) {\n            newAngle += MAX_ANGLE;\n        }\n        this.stampData.angle = newAngle;\n        this.angleObservable.next(this.stampData.angle);\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Fill, Selection } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { MAX_PERCENTAGE } from '@app/ressources/global-variables/global-variables';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DrawingService {\n    baseCtx: CanvasRenderingContext2D;\n    gridCtx: CanvasRenderingContext2D;\n    previewCtx: CanvasRenderingContext2D;\n    gridSpacing: number;\n    gridOpacity: number;\n    isGridEnabled: boolean;\n    canvas: HTMLCanvasElement;\n    gridCanvas: HTMLCanvasElement;\n    previewCanvas: HTMLCanvasElement;\n    isLastDrawing: boolean;\n\n    constructor(private injector: Injector) {}\n    setGrid(): void {\n        this.clearCanvas(this.gridCtx);\n        const canvasWidth = this.canvas.width;\n        const canvasHeight = this.canvas.height;\n        this.gridCtx.beginPath();\n        for (let x = 0; x <= canvasWidth; x += this.gridSpacing) {\n            this.gridCtx.moveTo(x, 0);\n            this.gridCtx.lineTo(x, canvasHeight);\n        }\n\n        for (let x = 0; x <= canvasHeight; x += this.gridSpacing) {\n            this.gridCtx.moveTo(0, x);\n            this.gridCtx.lineTo(canvasWidth, x);\n        }\n        this.gridCtx.globalAlpha = this.gridOpacity / MAX_PERCENTAGE;\n        this.gridCtx.strokeStyle = 'black';\n        this.gridCtx.closePath();\n        this.gridCtx.stroke();\n    }\n\n    clearCanvas(context: CanvasRenderingContext2D): void {\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    checkedDrawing(): boolean {\n        return this.isLastDrawing;\n    }\n\n    initializeBaseCanvas(): void {\n        if (this.isGridEnabled) this.setGrid();\n        if (this.isLastDrawing) {\n            // using an injector with a deprecated version to inject and bypass an observed circular dependency\n            // Retrieves an instance from the injector based on the provided token.\n            // tslint:disable-next-line: deprecation\n            this.injector.get('ContinueDrawingService').continueDrawing();\n        } else {\n            this.baseCtx.fillStyle = 'white';\n            this.baseCtx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n    }\n\n    isCanvasBlank(context: CanvasRenderingContext2D): boolean {\n        const blank = document.createElement('canvas');\n        blank.width = this.canvas.width;\n        blank.height = this.canvas.height;\n        const blankCtx = blank.getContext('2d') as CanvasRenderingContext2D;\n        blankCtx.fillStyle = 'white';\n        blankCtx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        return context.canvas.toDataURL() === blank.toDataURL();\n    }\n\n    applyPreview(): void {\n        this.baseCtx.drawImage(this.previewCanvas, 0, 0);\n        this.clearCanvas(this.previewCtx);\n    }\n\n    drawFill(fill: Fill): void {\n        this.baseCtx.putImageData(fill.imageData, 0, 0);\n    }\n\n    restoreSelection(selection: Selection): void {\n        this.baseCtx.putImageData(selection.imageData, 0, 0);\n    }\n\n    getPixelData(pixelCoord: Vec2): Uint8ClampedArray {\n        return this.baseCtx.getImageData(pixelCoord.x, pixelCoord.y, 1, 1).data;\n    }\n\n    getCanvasData(): ImageData {\n        return this.baseCtx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    getPreviewData(): ImageData {\n        return this.previewCtx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    autoSave(): void {\n        if (!this.canvas) return;\n        localStorage.clear();\n        localStorage.setItem('drawingKey', this.canvas.toDataURL());\n        localStorage.setItem('canvasWidth', this.canvas.width.toString());\n        localStorage.setItem('canvasHeight', this.canvas.height.toString());\n    }\n}\n","import { Component } from '@angular/core';\nimport { Feature } from '@app/ressources/texts/feature';\nimport { BASIC_TOOLS, DRAWING_TOOLS, FILL, OTHER_FEATURES, SHAPES, TRANSFORMATIONS, UNDO_REDO } from '@app/ressources/texts/tool-descriptions';\n\n@Component({\n    selector: 'app-drawing-detail',\n    templateUrl: './drawing-detail.component.html',\n    styleUrls: ['./drawing-detail.component.scss'],\n})\nexport class DrawingDetailComponent {\n    basicTools: Feature[] = BASIC_TOOLS;\n\n    otherFeatures: Feature[] = OTHER_FEATURES;\n\n    drawingTools: Feature[] = DRAWING_TOOLS;\n\n    shapes: Feature[] = SHAPES;\n\n    fills: Feature[] = FILL;\n\n    undoredo: Feature[] = UNDO_REDO;\n\n    transformations: Feature[] = TRANSFORMATIONS;\n}\n","<mat-expansion-panel>\n    <mat-expansion-panel-header>\n        <mat-panel-title> Outils </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <mat-expansion-panel *ngFor=\"let basicTool of basicTools\">\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                {{ basicTool.NAME }}\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>{{ basicTool.DESCRIPTION }}</p>\n        <video autoplay loop muted><source class=\"animated-gif\" src=\"{{ basicTool.PICTURE }}\" type=\"video/mp4\" /></video>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle>\n        <mat-expansion-panel-header>\n            <mat-panel-title> Outils de tracage </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-expansion-panel *ngFor=\"let drawingTool of drawingTools\" hideToggle>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{ drawingTool.NAME }}\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <p>{{ drawingTool.DESCRIPTION }}</p>\n            <video autoplay loop muted><source class=\"animated-gif\" src=\"{{ drawingTool.PICTURE }}\" type=\"video/mp4\" /></video>\n        </mat-expansion-panel>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle>\n        <mat-expansion-panel-header>\n            <mat-panel-title> Forme </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-expansion-panel *ngFor=\"let shape of shapes\" hideToggle>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{ shape.NAME }}\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <p>{{ shape.DESCRIPTION }}</p>\n            <video autoplay loop muted><source class=\"animated-gif\" src=\"{{ shape.PICTURE }}\" type=\"video/mp4\" /></video>\n        </mat-expansion-panel>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel *ngFor=\"let fill of fills\">\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                {{ fill.NAME }}\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>{{ fill.DESCRIPTION }}</p>\n        <video autoplay loop muted><source class=\"animated-gif\" src=\"{{ fill.PICTURE }}\" type=\"video/mp4\" /></video>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle>\n        <mat-expansion-panel-header>\n            <mat-panel-title> Outils de sélection </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-expansion-panel *ngFor=\"let transformation of transformations\" hideToggle>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{ transformation.NAME }}\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <p>{{ transformation.DESCRIPTION }}</p>\n            <video autoplay loop muted><source class=\"animated-gif\" src=\"{{ transformation.PICTURE }}\" type=\"video/mp4\" /></video>\n        </mat-expansion-panel>\n    </mat-expansion-panel>\n</mat-expansion-panel>\n\n<mat-expansion-panel *ngFor=\"let feature of otherFeatures\">\n    <mat-expansion-panel-header>\n        <mat-panel-title>\n            {{ feature.NAME }}\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <p>{{ feature.DESCRIPTION }}</p>\n    <img class=\"image\" src=\"{{ feature.PICTURE }}\" type=\"image/png\" />\n</mat-expansion-panel>\n\n<mat-expansion-panel *ngFor=\"let undo of undoredo\">\n    <mat-expansion-panel-header>\n        <mat-panel-title>\n            {{ undo.NAME }}\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <p>{{ undo.DESCRIPTION }}</p>\n    <div><img class=\"image\" src=\"{{ undo.PICTURE }}\" type=\"image/png\" /></div>\n    <div><img class=\"image\" src=\"../../../assets/img/refaire.png\" type=\"image/png\" /></div>\n</mat-expansion-panel>\n","import { Injectable } from '@angular/core';\nimport { MAGNETISM_NAME } from '@app/ressources/global-variables/global-variables';\nimport { GRID_DECREASE_NAME, GRID_INCREASE_NAME, GRID_NAME } from '@app/ressources/global-variables/grid-elements';\nimport { SidebarElements, SIDEBAR_ELEMENTS } from '@app/ressources/global-variables/sidebar-elements';\nimport { ToolNames, TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeyService {\n    toolName: Subject<string> = new Subject<string>();\n    toolNames: ToolNames = TOOL_NAMES;\n    sidebarElements: SidebarElements = SIDEBAR_ELEMENTS;\n    isHotkeyEnabled: boolean = true;\n\n    keyMapping: Map<string, string> = new Map([\n        ['c', this.toolNames.PENCIL_TOOL_NAME],\n        ['p', this.toolNames.PEN_TOOL_NAME],\n        ['w', this.toolNames.BRUSH_TOOL_NAME],\n        ['a', this.toolNames.SPRAY_TOOL_NAME],\n        ['1', this.toolNames.SQUARE_TOOL_NAME],\n        ['2', this.toolNames.CIRCLE_TOOL_NAME],\n        ['l', this.toolNames.LINE_TOOL_NAME],\n        ['3', this.toolNames.POLYGON_TOOL_NAME],\n        ['b', this.toolNames.FILL_TOOL_NAME],\n        ['e', this.toolNames.ERASER_TOOL_NAME],\n        ['r', this.toolNames.SQUARE_SELECTION_TOOL_NAME],\n        ['s', this.toolNames.CIRCLE_SELECTION_TOOL_NAME],\n        ['i', this.toolNames.PIPETTE_TOOL_NAME],\n        ['t', this.toolNames.TEXT_TOOL_NAME],\n        ['d', this.toolNames.STAMP_TOOL_NAME],\n        ['v', this.toolNames.MAGIC_WAND_TOOL_NAME],\n        ['-', GRID_DECREASE_NAME],\n        ['+', GRID_INCREASE_NAME],\n        ['g', GRID_NAME],\n        ['m', MAGNETISM_NAME],\n    ]);\n    keysNeedCtrl: Map<string, string> = new Map([\n        ['o', this.sidebarElements.NEW_DRAWING_NAME],\n        ['g', this.sidebarElements.CAROUSEL_NAME],\n        ['s', this.sidebarElements.SAVE_SERVER_NAME],\n        ['e', this.sidebarElements.EXPORT_DRAWING_NAME],\n        ['a', this.sidebarElements.SELECT_ALL],\n        ['z', this.sidebarElements.UNDO],\n    ]);\n    keysNeedShift: Map<string, string> = new Map([['Z', this.sidebarElements.REDO]]);\n\n    onKeyDown(event: KeyboardEvent): void {\n        if (!this.isHotkeyEnabled) return;\n        if (event.shiftKey || event.ctrlKey) event.preventDefault();\n        let keyName: string | undefined;\n        if (event.shiftKey && event.ctrlKey) {\n            keyName = this.keysNeedShift.get(event.key.toString());\n        } else if (event.ctrlKey) {\n            keyName = this.keysNeedCtrl.get(event.key.toString());\n        } else {\n            keyName = this.keyMapping.get(event.key.toString());\n        }\n        if (keyName) {\n            this.toolName.next(keyName);\n        }\n    }\n    getKey(): Observable<string> {\n        return this.toolName.asObservable();\n    }\n}\n","import { Component } from '@angular/core';\nimport { FillService } from '@app/services/tools/fill.service';\n\n@Component({\n    selector: 'app-fill-attributes',\n    templateUrl: './fill-attributes.component.html',\n    styleUrls: ['./fill-attributes.component.scss'],\n})\nexport class FillAttributesComponent {\n    tolerance: number;\n\n    constructor(public fillService: FillService) {\n        this.tolerance = fillService.tolerance;\n    }\n\n    changeTolerance(newTolerance: number): void {\n        this.tolerance = newTolerance;\n        this.fillService.changeTolerance(this.tolerance);\n    }\n}\n","<div id=\"fillAttributes\">\n    <h2 class=\"toolName\">{{ fillService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Tolérance\"\n        [min]=\"fillService.minTolerance\"\n        [max]=\"fillService.maxTolerance\"\n        [step]=\"1\"\n        [value]=\"tolerance\"\n        (valueChange)=\"changeTolerance($event)\"\n    >\n    </app-slider>\n</div>\n","export const SCALE_FACTOR = 20;\nexport const TRANSLATION_FACTOR = 11;\nexport const MIN_STAMP_SIZE = 1;\nexport const MAX_STAMP_SIZE = 10;\nexport const INITIAL_STAMP_SIZE = 5;\nexport const INITIAL_STAMP_ANGLE = 0;\n\nexport interface StampAttributes {\n    path: string;\n    width: number;\n    height: number;\n}\n\nexport interface Stamps {\n    ANGULAR: StampAttributes;\n    NODEJS: StampAttributes;\n    DOCKER: StampAttributes;\n    JAVASCRIPT: StampAttributes;\n    GITLAB: StampAttributes;\n}\n\nexport const STAMPS: Stamps = {\n    ANGULAR: {\n        path:\n            'M185.7 268.1h76.2l-38.1-91.6-38.1 91.6zM223.8 32L16 106.4l31.8 275.7 176 97.9 176-97.9 31.8-275.7zM354 373.8h-48.6l-26.2-65.4H168.6l-26.2 65.4H93.7L223.8 81.5z',\n        width: 448,\n        height: 512,\n    },\n    NODEJS: {\n        path:\n            'M224 508c-6.7 0-13.5-1.8-19.4-5.2l-61.7-36.5c-9.2-5.2-4.7-7-1.7-8 12.3-4.3 14.8-5.2 27.9-12.7 1.4-.8 3.2-.5 4.6.4l47.4 28.1c1.7 1 4.1 1 5.7 0l184.7-106.6c1.7-1 2.8-3 2.8-5V149.3c0-2.1-1.1-4-2.9-5.1L226.8 37.7c-1.7-1-4-1-5.7 0L36.6 144.3c-1.8 1-2.9 3-2.9 5.1v213.1c0 2 1.1 4 2.9 4.9l50.6 29.2c27.5 13.7 44.3-2.4 44.3-18.7V167.5c0-3 2.4-5.3 5.4-5.3h23.4c2.9 0 5.4 2.3 5.4 5.3V378c0 36.6-20 57.6-54.7 57.6-10.7 0-19.1 0-42.5-11.6l-48.4-27.9C8.1 389.2.7 376.3.7 362.4V149.3c0-13.8 7.4-26.8 19.4-33.7L204.6 9c11.7-6.6 27.2-6.6 38.8 0l184.7 106.7c12 6.9 19.4 19.8 19.4 33.7v213.1c0 13.8-7.4 26.7-19.4 33.7L243.4 502.8c-5.9 3.4-12.6 5.2-19.4 5.2zm149.1-210.1c0-39.9-27-50.5-83.7-58-57.4-7.6-63.2-11.5-63.2-24.9 0-11.1 4.9-25.9 47.4-25.9 37.9 0 51.9 8.2 57.7 33.8.5 2.4 2.7 4.2 5.2 4.2h24c1.5 0 2.9-.6 3.9-1.7s1.5-2.6 1.4-4.1c-3.7-44.1-33-64.6-92.2-64.6-52.7 0-84.1 22.2-84.1 59.5 0 40.4 31.3 51.6 81.8 56.6 60.5 5.9 65.2 14.8 65.2 26.7 0 20.6-16.6 29.4-55.5 29.4-48.9 0-59.6-12.3-63.2-36.6-.4-2.6-2.6-4.5-5.3-4.5h-23.9c-3 0-5.3 2.4-5.3 5.3 0 31.1 16.9 68.2 97.8 68.2 58.4-.1 92-23.2 92-63.4z',\n        width: 448,\n        height: 512,\n    },\n    DOCKER: {\n        path:\n            'M349.9 236.3h-66.1v-59.4h66.1v59.4zm0-204.3h-66.1v60.7h66.1V32zm78.2 144.8H362v59.4h66.1v-59.4zm-156.3-72.1h-66.1v60.1h66.1v-60.1zm78.1 0h-66.1v60.1h66.1v-60.1zm276.8 100c-14.4-9.7-47.6-13.2-73.1-8.4-3.3-24-16.7-44.9-41.1-63.7l-14-9.3-9.3 14c-18.4 27.8-23.4 73.6-3.7 103.8-8.7 4.7-25.8 11.1-48.4 10.7H2.4c-8.7 50.8 5.8 116.8 44 162.1 37.1 43.9 92.7 66.2 165.4 66.2 157.4 0 273.9-72.5 328.4-204.2 21.4.4 67.6.1 91.3-45.2 1.5-2.5 6.6-13.2 8.5-17.1l-13.3-8.9zm-511.1-27.9h-66v59.4h66.1v-59.4zm78.1 0h-66.1v59.4h66.1v-59.4zm78.1 0h-66.1v59.4h66.1v-59.4zm-78.1-72.1h-66.1v60.1h66.1v-60.1z',\n        width: 640,\n        height: 512,\n    },\n    JAVASCRIPT: {\n        path:\n            'M0 32v448h448V32H0zm243.8 349.4c0 43.6-25.6 63.5-62.9 63.5-33.7 0-53.2-17.4-63.2-38.5l34.3-20.7c6.6 11.7 12.6 21.6 27.1 21.6 13.8 0 22.6-5.4 22.6-26.5V237.7h42.1v143.7zm99.6 63.5c-39.1 0-64.4-18.6-76.7-43l34.3-19.8c9 14.7 20.8 25.6 41.5 25.6 17.4 0 28.6-8.7 28.6-20.8 0-14.4-11.4-19.5-30.7-28l-10.5-4.5c-30.4-12.9-50.5-29.2-50.5-63.5 0-31.6 24.1-55.6 61.6-55.6 26.8 0 46 9.3 59.8 33.7L368 290c-7.2-12.9-15-18-27.1-18-12.3 0-20.1 7.8-20.1 18 0 12.6 7.8 17.7 25.9 25.6l10.5 4.5c35.8 15.3 55.9 31 55.9 66.2 0 37.8-29.8 58.6-69.7 58.6z',\n        width: 448,\n        height: 512,\n    },\n    GITLAB: {\n        path:\n            'M105.2 24.9c-3.1-8.9-15.7-8.9-18.9 0L29.8 199.7h132c-.1 0-56.6-174.8-56.6-174.8zM.9 287.7c-2.6 8 .3 16.9 7.1 22l247.9 184-226.2-294zm160.8-88l94.3 294 94.3-294zm349.4 88l-28.8-88-226.3 294 247.9-184c6.9-5.1 9.7-14 7.2-22zM425.7 24.9c-3.1-8.9-15.7-8.9-18.9 0l-56.6 174.8h132z',\n        width: 512,\n        height: 512,\n    },\n};\n","import { Component } from '@angular/core';\nimport { CircleService } from '@app/services/tools/circle.service';\n\n@Component({\n    selector: 'app-circle-attributes',\n    templateUrl: './circle-attributes.component.html',\n    styleUrls: ['./circle-attributes.component.scss'],\n})\nexport class CircleAttributesComponent {\n    toolWidth: number;\n    fillStyle: number;\n\n    constructor(public circleService: CircleService) {\n        this.toolWidth = circleService.ellipseData.lineWidth;\n        this.fillStyle = circleService.getFillStyle();\n    }\n\n    changeBorderWidth(newWidth: number): void {\n        this.toolWidth = newWidth;\n        this.circleService.changeWidth(newWidth);\n    }\n\n    changeFillStyle(newFillStyle: number): void {\n        this.circleService.setFillStyle(newFillStyle);\n    }\n}\n","<div id=\"circleAttributes\">\n    <h2 class=\"toolName\">{{ circleService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Épaisseur Contour\"\n        [min]=\"circleService.minBorderWidth\"\n        [max]=\"circleService.maxBorderWidth\"\n        [step]=\"1\"\n        [value]=\"toolWidth\"\n        (valueChange)=\"changeBorderWidth($event)\"\n    ></app-slider>\n    <app-fill-types-selection (valueChange)=\"changeFillStyle($event)\" [currentFillStyle]=\"this.fillStyle\"></app-fill-types-selection>\n</div>\n","export interface Fonts {\n    GEORGIA: string;\n    ARIAL: string;\n    TIME_NEW_ROMAN: string;\n    VERDANA: string;\n    COURIER_NEW: string;\n}\n\nexport const FONTS: Fonts = {\n    GEORGIA: 'Georgia',\n    ARIAL: 'Arial',\n    TIME_NEW_ROMAN: 'Time New Roman',\n    VERDANA: 'Verdana',\n    COURIER_NEW: 'Courier New',\n};\n\nexport const AUTHORIZED_KEY: string[] = [\n    '.',\n    ',',\n    \"'\",\n    'é',\n    'à',\n    'è',\n    ';',\n    'ç',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'N',\n    'M',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    '!',\n    '@',\n    '#',\n    '$',\n    '%',\n    '?',\n    '&',\n    '*',\n    '(',\n    ')',\n    '_',\n    '+',\n    '-',\n    '=',\n    '|',\n    'Enter',\n    ' ',\n];\n","import { Injectable } from '@angular/core';\nimport { ToolProperties } from '@app/classes/tool-properties';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UndoRedoStackService {\n    undoStack: ToolProperties[] = [];\n    redoStack: ToolProperties[] = [];\n    isToolInUse: Subject<boolean> = new Subject<boolean>();\n\n    setIsToolInUse(isInUse: boolean): void {\n        this.isToolInUse.next(isInUse);\n    }\n\n    getIsToolInUse(): Observable<boolean> {\n        return this.isToolInUse.asObservable();\n    }\n\n    updateStack(modification: ToolProperties): void {\n        this.undoStack.push(Object.assign({}, modification));\n        if (this.redoStack.length) {\n            this.redoStack = [];\n        }\n    }\n\n    resetStack(): void {\n        this.undoStack = [];\n        this.redoStack = [];\n    }\n}\n","export interface ArrowKeys {\n    LEFT: string;\n    UP: string;\n    RIGHT: string;\n    DOWN: string;\n}\n\nexport const ARROW_KEYS: ArrowKeys = {\n    LEFT: 'ArrowLeft',\n    UP: 'ArrowUp',\n    RIGHT: 'ArrowRight',\n    DOWN: 'ArrowDown',\n};\n","import { Injectable } from '@angular/core';\nimport { Tool } from '@app/classes/tool';\nimport { Brush } from '@app/classes/tool-properties';\nimport { MouseButton } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BrushService extends Tool {\n    name: string = TOOL_NAMES.BRUSH_TOOL_NAME;\n    brushData: Brush;\n\n    constructor(\n        drawingService: DrawingService,\n        public colorSelectionService: ColorSelectionService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n        this.brushData = {\n            type: 'brush',\n            path: [],\n            lineWidth: 1,\n            lineCap: 'round',\n            pattern: 'none',\n            primaryColor: this.colorSelectionService.primaryColor,\n        };\n    }\n\n    reset(): void {\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        if (event.button !== MouseButton.LEFT) {\n            return;\n        } else {\n            this.mouseDown = true;\n            this.clearPath();\n            this.applyPattern(this.brushData.pattern);\n            this.mouseDownCoord = this.getPositionFromMouse(event);\n            this.brushData.path.push(this.mouseDownCoord);\n            this.brushData.primaryColor = this.colorSelectionService.primaryColor;\n            this.drawLine(this.drawingService.previewCtx, this.brushData);\n            this.undoRedoStackService.setIsToolInUse(true);\n        }\n    }\n\n    onMouseUp(event: MouseEvent): void {\n        if (this.mouseDown) {\n            const mousePosition = this.getPositionFromMouse(event);\n            this.brushData.path.push(mousePosition);\n            this.brushData.primaryColor = this.colorSelectionService.primaryColor;\n            this.drawLine(this.drawingService.baseCtx, this.brushData);\n            this.undoRedoStackService.updateStack(this.brushData);\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.applyPattern('none');\n            this.undoRedoStackService.setIsToolInUse(false);\n        }\n        this.mouseDown = false;\n        this.clearPath();\n        this.drawingService.autoSave();\n    }\n\n    onMouseLeave(): void {\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        this.brushData.primaryColor = this.colorSelectionService.primaryColor;\n        this.drawLine(this.drawingService.baseCtx, this.brushData);\n        this.clearPath();\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        if (this.mouseDown) {\n            const mousePosition = this.getPositionFromMouse(event);\n            this.brushData.path.push(mousePosition);\n\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.drawLine(this.drawingService.previewCtx, this.brushData);\n        }\n    }\n\n    changeWidth(newWidth: number): void {\n        this.brushData.lineWidth = newWidth;\n    }\n\n    setPattern(pattern: string): void {\n        this.brushData.pattern = pattern;\n    }\n\n    drawLine(ctx: CanvasRenderingContext2D, brush: Brush): void {\n        this.applyPattern(brush.pattern);\n        ctx.lineWidth = brush.lineWidth;\n        ctx.lineCap = ctx.lineJoin = 'round';\n        ctx.strokeStyle = brush.primaryColor;\n        ctx.beginPath();\n        for (const point of brush.path) {\n            ctx.lineTo(point.x, point.y);\n        }\n        ctx.stroke();\n    }\n\n    applyPattern(pattern: string): void {\n        if (pattern === 'none') {\n            this.drawingService.baseCtx.filter = 'none';\n            this.drawingService.previewCtx.filter = 'none';\n        } else {\n            this.drawingService.baseCtx.filter = 'url(/assets/patterns.svg#' + pattern + ')';\n            this.drawingService.previewCtx.filter = 'url(/assets/patterns.svg#' + pattern + ')';\n        }\n        this.drawingService.baseCtx.strokeRect(-this.drawingService.baseCtx.lineWidth, 0, 1, 0);\n        this.drawingService.previewCtx.strokeRect(-this.drawingService.previewCtx.lineWidth, 0, 1, 0);\n    }\n\n    private clearPath(): void {\n        this.brushData.path = [];\n    }\n}\n","import { Component } from '@angular/core';\nimport { SquareSelectionService } from '@app/services/tools/selection-services/square-selection.service';\n\n@Component({\n    selector: 'app-square-selection-attributes',\n    templateUrl: './square-selection-attributes.component.html',\n    styleUrls: ['./square-selection-attributes.component.scss'],\n})\nexport class SquareSelectionAttributesComponent {\n    constructor(public squareSelectionService: SquareSelectionService) {}\n}\n","<div id=\"squareSelectionAttributes\">\n    <h2 class=\"toolName\">{{ squareSelectionService.name }}</h2>\n    <hr />\n    <app-magnetism [service]=\"squareSelectionService\"></app-magnetism>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Tool } from '@app/classes/tool';\nimport { Pen } from '@app/classes/tool-properties';\nimport { Vec2 } from '@app/classes/vec2';\nimport { ANGLE_HALF_TURN, MouseButton, ROTATION_STEP } from '@app/ressources/global-variables/global-variables';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { ColorSelectionService } from '@app/services/color-selection/color-selection.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\nimport { Observable, Subject } from 'rxjs';\n\n// this tool was inpired by the code found on http://perfectionkills.com/exploring-canvas-drawing-techniques/\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PenService extends Tool {\n    name: string = TOOL_NAMES.PEN_TOOL_NAME;\n    width: number = 1;\n    angle: number = 0;\n    angleObservable: Subject<number> = new Subject<number>();\n    altKeyPressed: boolean = false;\n    lastPoint: Vec2;\n    currentPoint: Vec2;\n    penData: Pen;\n    canvasData: ImageData;\n\n    constructor(\n        drawingService: DrawingService,\n        public colorSelectionService: ColorSelectionService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {\n        super(drawingService);\n    }\n\n    changeWidth(newWidth: number): void {\n        this.width = newWidth;\n    }\n\n    changeAngle(newAngle: number): void {\n        newAngle %= ANGLE_HALF_TURN;\n        if (newAngle < 0) {\n            newAngle += ANGLE_HALF_TURN;\n        }\n        this.angle = newAngle;\n        this.angleObservable.next(this.angle);\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.drawingService.baseCtx.filter = 'none';\n        this.drawingService.previewCtx.filter = 'none';\n        if (event.button !== MouseButton.LEFT) {\n            return;\n        } else {\n            this.mouseDown = true;\n            this.lastPoint = this.getPositionFromMouse(event);\n            this.currentPoint = this.getPositionFromMouse(event);\n            this.drawPenStroke(this.drawingService.previewCtx);\n            this.undoRedoStackService.setIsToolInUse(true);\n        }\n    }\n\n    onMouseUp(event: MouseEvent): void {\n        if (this.mouseDown) {\n            this.drawingService.applyPreview();\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.undoRedoStackService.setIsToolInUse(false);\n            this.canvasData = this.drawingService.getCanvasData();\n            this.updatePenData();\n            this.undoRedoStackService.updateStack(this.penData);\n        }\n        this.mouseDown = false;\n        this.drawingService.autoSave();\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        if (this.mouseDown) {\n            this.lastPoint = this.currentPoint;\n            this.currentPoint = this.getPositionFromMouse(event);\n            this.drawPenStroke(this.drawingService.previewCtx);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        if (event.altKey && !this.altKeyPressed) {\n            event.preventDefault();\n            this.altKeyPressed = true;\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent): void {\n        if (event.key === 'Alt') {\n            this.altKeyPressed = false;\n        }\n    }\n\n    onWheelEvent(event: WheelEvent): void {\n        let rotationStep = ROTATION_STEP;\n        if (this.altKeyPressed) {\n            rotationStep = 1;\n        }\n        const newAngle = this.angle - (event.deltaY / Math.abs(event.deltaY)) * rotationStep;\n        this.changeAngle(newAngle);\n    }\n\n    drawPenStroke(ctx: CanvasRenderingContext2D): void {\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = this.colorSelectionService.primaryColor;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.beginPath();\n        const lastPoint = this.lastPoint;\n        const point = this.currentPoint;\n        ctx.moveTo(lastPoint.x, lastPoint.y);\n        ctx.lineTo(point.x, point.y);\n        const angleRadians = this.toRadians(this.angle);\n        for (let j = 1; j <= this.width / 2; j++) {\n            ctx.moveTo(lastPoint.x - j * Math.sin(angleRadians), lastPoint.y - j * Math.cos(angleRadians));\n            ctx.lineTo(point.x - j * Math.sin(angleRadians), point.y - j * Math.cos(angleRadians));\n            ctx.moveTo(lastPoint.x + j * Math.sin(angleRadians), lastPoint.y + j * Math.cos(angleRadians));\n            ctx.lineTo(point.x + j * Math.sin(angleRadians), point.y + j * Math.cos(angleRadians));\n        }\n        ctx.stroke();\n    }\n\n    toRadians(angle: number): number {\n        return angle * (Math.PI / ANGLE_HALF_TURN);\n    }\n\n    getAngle(): Observable<number> {\n        return this.angleObservable;\n    }\n\n    restorePen(penData: Pen): void {\n        this.drawingService.baseCtx.putImageData(penData.imageData, 0, 0);\n    }\n\n    updatePenData(): void {\n        this.penData = {\n            type: 'pen',\n            imageData: this.canvasData,\n        };\n        this.drawingService.autoSave();\n    }\n}\n","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EmailBody } from '@app/ressources/global-variables/email-body';\nimport { FilterStyles, FILTER_STYLES } from '@app/ressources/global-variables/filter';\nimport { MAX_NAME_LENGTH } from '@app/ressources/global-variables/global-variables';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { EmailService } from '@app/services/email/email.service';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { ServerResponseService } from '@app/services/server-response/server-response.service';\nimport { TextService } from '@app/services/tools/text.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-export',\n    templateUrl: './export.component.html',\n    styleUrls: ['./export.component.scss'],\n})\nexport class ExportComponent implements AfterViewInit, OnInit, OnDestroy {\n    filterStyles: FilterStyles = {\n        NONE: FILTER_STYLES.NONE,\n        BLACK_AND_WHITE: FILTER_STYLES.BLACK_AND_WHITE,\n        SEPHIA: FILTER_STYLES.SEPHIA,\n        SATURATE: FILTER_STYLES.SATURATE,\n        INVERT: FILTER_STYLES.INVERT,\n        BLUR: FILTER_STYLES.BLUR,\n    };\n    differentFilter: string[] = ['none', 'grayscale(100%)', 'sepia(100%)', 'saturate(8)', 'invert(100%)', 'blur(5px)'];\n    extension: string[] = ['image/png', 'image/jpeg'];\n\n    name: string = '';\n    destroy$: Subject<boolean> = new Subject<boolean>();\n    imagesrc: string = '';\n    urlImage: string = '';\n    urlExtension: string = '';\n    filterCanvas: HTMLCanvasElement = document.createElement('canvas');\n    link: HTMLAnchorElement = document.createElement('a');\n    ownerForm: FormGroup;\n    emailAddress: string = '';\n    userForm: FormGroup;\n    isSendMailButtonDisabled: boolean = false;\n    isExportButtonDisabled: boolean = false;\n\n    constructor(\n        public drawingService: DrawingService,\n        public emailService: EmailService,\n        public hotkeyService: HotkeyService,\n        private dialogRef: MatDialogRef<ExportComponent>,\n        public textService: TextService,\n        public serverResponseService: ServerResponseService,\n        public dialog: MatDialog,\n    ) {}\n    @ViewChild('exportModal') exportModal: ElementRef<HTMLButtonElement>;\n    ngOnInit(): void {\n        if (this.textService.isNewText) {\n            this.textService.createText();\n        }\n\n        this.hotkeyService.isHotkeyEnabled = false;\n        this.ownerForm = new FormGroup({\n            name: new FormControl(this.name, [Validators.required, Validators.maxLength(MAX_NAME_LENGTH)]),\n        });\n        this.userForm = new FormGroup({\n            email: new FormControl('', [Validators.required, Validators.email]),\n        });\n    }\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.imagesrc = this.drawingService.canvas.toDataURL();\n            this.urlImage = this.imagesrc;\n            this.filterCanvas = this.drawingService.canvas;\n        });\n    }\n\n    changeName(name: string): void {\n        this.name = name;\n        this.ownerForm.markAllAsTouched();\n    }\n\n    changeFilter(event: Event): void {\n        const target = event.target as HTMLInputElement;\n        const filterNumber: number = Number(target.value);\n        const canvasFilter = document.createElement('canvas') as HTMLCanvasElement;\n        const canvasFilterCtx = canvasFilter.getContext('2d') as CanvasRenderingContext2D;\n        canvasFilter.height = this.drawingService.canvas.height;\n        canvasFilter.width = this.drawingService.canvas.width;\n\n        canvasFilterCtx.filter = this.differentFilter[filterNumber];\n        canvasFilterCtx.drawImage(this.drawingService.canvas, 0, 0);\n        this.filterCanvas = canvasFilter;\n        this.imagesrc = canvasFilterCtx.canvas.toDataURL();\n        this.urlImage = this.imagesrc;\n    }\n\n    getImageUrl(event: Event): void {\n        const target = event.target as HTMLInputElement;\n        const typeNumber: number = Number(target.value);\n        this.urlImage = this.filterCanvas.toDataURL(this.extension[typeNumber]);\n        this.urlExtension = this.extension[typeNumber];\n    }\n\n    exportLocally(): void {\n        this.isExportButtonDisabled = true;\n        if (this.name !== '' && this.name.length <= MAX_NAME_LENGTH) {\n            this.link.href = this.urlImage;\n            this.link.setAttribute('download', this.name);\n            this.isExportButtonDisabled = false;\n            this.link.click();\n            this.dialogRef.close();\n        }\n    }\n\n    hasNameError(controlName: string, errorName: string): boolean {\n        return this.ownerForm.controls[controlName].hasError(errorName);\n    }\n\n    sendMail(): void {\n        this.isSendMailButtonDisabled = true;\n        const url = 'http://localhost:3000/api/email/';\n        const base64 = this.urlImage.split(',')[1];\n        const body: EmailBody = {\n            DESTINATION: this.emailAddress,\n            PAYLOAD: base64,\n            FILENAME: this.name,\n            FORMAT: this.urlExtension,\n        };\n\n        this.emailService\n            .sendMail(url, body)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(\n                () => {\n                    this.isSendMailButtonDisabled = false;\n                    this.serverResponseService.sendMailConfirmSnackBar();\n                    this.dialog.closeAll();\n                },\n                () => {\n                    this.isSendMailButtonDisabled = false;\n                    this.serverResponseService.sendMailErrorSnackBar();\n                    this.dialog.closeAll();\n                },\n            );\n        this.link.click();\n        this.dialogRef.close();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.unsubscribe();\n        this.hotkeyService.isHotkeyEnabled = true;\n    }\n}\n","<div #exportModal class=\"exporting\">\n    <div class=\"imageContainer\">\n        <h1>Exportation du dessin</h1>\n        <img id=\"image\" [src]=\"imagesrc\" height=\"200px\" width=\"300px\" *ngIf=\"imagesrc !== ''\" />\n        <div>\n            <form class=\"export\" autocomplete=\"off\" [formGroup]=\"ownerForm\">\n                <label>Fichier: </label>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Nom du dessin</mat-label>\n                    <input\n                        matInput\n                        #name\n                        type=\"text\"\n                        id=\"name\"\n                        [required]=\"true\"\n                        formControlName=\"name\"\n                        (keyup)=\"this.changeName(name.value)\"\n                        placeholder=\"Ex: Forêt Boréal\"\n                    />\n                    <mat-hint class=\"mat-hint\">Max 15 charactères</mat-hint>\n                    <mat-error *ngIf=\"hasNameError('name', 'required')\">Nom est requis</mat-error>\n                    <mat-error *ngIf=\"hasNameError('name', 'maxlength')\">Nom est trop long. (max. 15 charactères)</mat-error>\n                </mat-form-field>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"Section\">\n        <label>Filtre</label>\n        <div class=\"radioContainer\">\n            <input type=\"radio\" name=\"typeOfFilter\" [value]=\"filterStyles.NONE\" (change)=\"this.changeFilter($event)\" checked />\n            <label>Aucun filtre</label>\n            <input type=\"radio\" name=\"typeOfFilter\" [value]=\"filterStyles.BLACK_AND_WHITE\" (change)=\"this.changeFilter($event)\" />\n            <label>Noir et blanc</label>\n            <input type=\"radio\" name=\"typeOfFilter\" [value]=\"filterStyles.SEPHIA\" (change)=\"this.changeFilter($event)\" />\n            <label>Sepia</label>\n            <input type=\"radio\" name=\"typeOfFilter\" [value]=\"filterStyles.SATURATE\" (change)=\"this.changeFilter($event)\" />\n            <label>Saturer</label>\n            <input type=\"radio\" name=\"typeOfFilter\" [value]=\"filterStyles.INVERT\" (change)=\"this.changeFilter($event)\" />\n            <label>Inverser</label>\n            <input type=\"radio\" name=\"typeOfFilter\" [value]=\"filterStyles.BLUR\" (change)=\"this.changeFilter($event)\" />\n            <label>Embrouiller</label>\n        </div>\n    </div>\n\n    <hr />\n\n    <div class=\"Section\">\n        <label>Format d'exportation</label>\n        <div class=\"radioContainer\">\n            <select name=\"extension\" (change)=\"this.getImageUrl($event)\" [value]=\"0\">\n                <option [value]=\"0\">PNG</option>\n                <option [value]=\"1\">JPEG</option>\n            </select>\n        </div>\n    </div>\n\n    <hr />\n\n    <div class=\"Section\">\n        <!--  this code was inspired by code found on : https://stackoverflow.com/questions/55752234/how-to-validate-email-address-from-a-mat-inputangular-material -->\n        <label> email</label><br />\n        <form [formGroup]=\"userForm\" #formDirective=\"ngForm\">\n            <div class=\"form-control\">\n                <mat-form-field appearance=\"outline\" class=\"form-field\">\n                    <mat-label>Email Address</mat-label>\n                    <input\n                        matInput\n                        autocomplete=\"off\"\n                        placeholder=\"votre_email@polymtl.ca\"\n                        type=\"email\"\n                        [(ngModel)]=\"this.emailAddress\"\n                        formControlName=\"email\"\n                        class=\"form-input-field\"\n                        pattern=\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\"\n                    />\n                    <mat-error *ngIf=\"userForm.get('email')?.hasError('required')\"> Un courriel est requis </mat-error>\n                    <mat-error *ngIf=\"userForm.get('email')?.hasError('email')\">Courriel invalide </mat-error>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n\n    <hr />\n\n    <div mat-dialog-actions>\n        <button mat-button [disabled]=\"!ownerForm.valid || isExportButtonDisabled\" id=\"export\" (click)=\"exportLocally()\">\n            Exporter sur ordinateur\n        </button>\n        <button mat-button [disabled]=\"!userForm.valid || isSendMailButtonDisabled\" id=\"sendMail\" (click)=\"sendMail()\">Envoyer par email</button>\n        <button mat-button color=\"warn\" mat-dialog-close>Fermer</button>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { SelectionBox } from '@app/classes/selection-box';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ClipboardService {\n    selection: SelectionBox = { startingPoint: { x: 0, y: 0 }, width: 0, height: 0 };\n    clipBoardCanvas: HTMLCanvasElement = document.createElement('canvas');\n    angle: number;\n    selectionType: number;\n    isPasteAvailableSubject: Subject<boolean> = new Subject<boolean>();\n\n    constructor(public drawingService: DrawingService) {\n        this.isPasteAvailableSubject.next(false);\n    }\n\n    copy(selection: SelectionBox, selectionImage: HTMLCanvasElement, angle: number): void {\n        this.setSelection(selection);\n        this.isPasteAvailableSubject.next(true);\n        this.clipBoardCanvas.width = this.selection.width;\n        this.clipBoardCanvas.height = this.selection.height;\n        const selectionImageCtx = this.clipBoardCanvas.getContext('2d') as CanvasRenderingContext2D;\n        selectionImageCtx.drawImage(selectionImage, 0, 0);\n        this.drawingService.clearCanvas(this.drawingService.previewCtx);\n        this.angle = angle;\n    }\n\n    private setSelection(selection: SelectionBox): void {\n        this.selection.startingPoint.x = selection.startingPoint.x;\n        this.selection.startingPoint.y = selection.startingPoint.y;\n        this.selection.height = selection.height;\n        this.selection.width = selection.width;\n    }\n\n    setSelectionType(selectionType: number): void {\n        this.selectionType = selectionType;\n    }\n\n    getIsPasteAvailableSubject(): Observable<boolean> {\n        return this.isPasteAvailableSubject.asObservable();\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    DEFAULT_GRID_OPACITY,\n    DEFAULT_GRID_SIZE,\n    GRID_STEP,\n    MAX_GRID_OPACITY,\n    MAX_GRID_SQUARE_SIZE,\n    MIN_GRID_OPACITY,\n    MIN_GRID_SQUARE_SIZE,\n    TWO_DECIMAL_MULTIPLIER,\n} from '@app/ressources/global-variables/global-variables';\nimport { GRID_DECREASE_NAME, GRID_INCREASE_NAME, GRID_NAME } from '@app/ressources/global-variables/grid-elements';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { CircleSelectionService } from '@app/services/tools/selection-services/circle-selection.service';\nimport { MagicWandService } from '@app/services/tools/selection-services/magic-wand.service';\nimport { SquareSelectionService } from '@app/services/tools/selection-services/square-selection.service';\n\n@Component({\n    selector: 'app-grid',\n    templateUrl: './grid.component.html',\n    styleUrls: ['./grid.component.scss'],\n})\nexport class GridComponent {\n    isEnabled: boolean = false;\n    minSquareSize: number = MIN_GRID_SQUARE_SIZE;\n    maxSquareSize: number = MAX_GRID_SQUARE_SIZE;\n    minOpacity: number = MIN_GRID_OPACITY;\n    maxOpacity: number = MAX_GRID_OPACITY;\n    currentSquareSize: number = DEFAULT_GRID_SIZE;\n    currentOpacity: number = DEFAULT_GRID_OPACITY;\n\n    constructor(\n        public drawingService: DrawingService,\n        public hotkeyService: HotkeyService,\n        public circleSelectionService: CircleSelectionService,\n        public squareSelectionService: SquareSelectionService,\n        public magicWandService: MagicWandService,\n    ) {\n        this.drawingService.gridSpacing = this.currentSquareSize;\n        this.circleSelectionService.setGridSpacing(this.currentSquareSize);\n        this.magicWandService.setGridSpacing(this.currentSquareSize);\n        this.squareSelectionService.setGridSpacing(this.currentSquareSize);\n        this.drawingService.gridOpacity = this.currentOpacity;\n        this.hotkeyService.getKey().subscribe((toolName) => {\n            switch (toolName) {\n                case GRID_NAME: {\n                    if (this.isEnabled) this.changeGridView(false);\n                    else this.changeGridView(true);\n                    break;\n                }\n                case GRID_INCREASE_NAME: {\n                    if (this.currentSquareSize + GRID_STEP <= this.maxSquareSize) {\n                        this.currentSquareSize += GRID_STEP;\n                        this.changeGridSize(this.currentSquareSize);\n                    }\n\n                    break;\n                }\n                case GRID_DECREASE_NAME: {\n                    if (this.currentSquareSize - GRID_STEP >= this.minSquareSize) {\n                        this.currentSquareSize -= GRID_STEP;\n                        this.changeGridSize(this.currentSquareSize);\n                    }\n                    break;\n                }\n            }\n        });\n    }\n\n    changeGridView(isEnabled: boolean): void {\n        this.isEnabled = isEnabled;\n        this.drawingService.isGridEnabled = isEnabled;\n        if (isEnabled) this.drawingService.setGrid();\n        else this.drawingService.clearCanvas(this.drawingService.gridCtx);\n    }\n\n    changeGridSize(newSize: number): void {\n        newSize = Number(newSize);\n        if (isNaN(newSize) || newSize < MIN_GRID_SQUARE_SIZE || newSize > MAX_GRID_SQUARE_SIZE || newSize.toString() === '') {\n            alert('La taille des carrés doit être un nombre entre 5 et 200.');\n        } else {\n            this.drawingService.gridSpacing = newSize;\n            this.currentSquareSize = newSize;\n            this.circleSelectionService.setGridSpacing(this.currentSquareSize);\n            this.magicWandService.setGridSpacing(this.currentSquareSize);\n            this.squareSelectionService.setGridSpacing(this.currentSquareSize);\n            if (this.isEnabled) {\n                this.drawingService.setGrid();\n            }\n        }\n    }\n\n    changeOpacity(newOpacity: number): void {\n        newOpacity = Number(newOpacity);\n        newOpacity = Math.round((newOpacity + Number.EPSILON) * TWO_DECIMAL_MULTIPLIER) / TWO_DECIMAL_MULTIPLIER;\n\n        if (isNaN(newOpacity) || newOpacity < MIN_GRID_OPACITY || newOpacity > MAX_GRID_OPACITY || newOpacity.toString() === '') {\n            alert(\"L'opacité doit être un nombre entre 10 et 100.\");\n        } else {\n            this.drawingService.gridOpacity = newOpacity;\n            this.currentOpacity = newOpacity;\n            if (this.isEnabled) {\n                this.drawingService.setGrid();\n            }\n        }\n    }\n\n    onFocus(): void {\n        this.hotkeyService.isHotkeyEnabled = false;\n    }\n\n    onFocusOut(): void {\n        this.hotkeyService.isHotkeyEnabled = true;\n    }\n}\n","<div class=\"grid\">\n    <hr class=\"finalBorder\" />\n    <h4>Grille</h4>\n\n    <mat-checkbox (change)=\"changeGridView($event.checked)\" [checked]=\"isEnabled\">Afficher grille</mat-checkbox>\n    <hr />\n\n    <div id=\"section\">\n        <p>Grosseur Carrés</p>\n        <div class=\"attributeContainer\">\n            <input\n                type=\"text\"\n                [(value)]=\"currentSquareSize\"\n                (change)=\"changeGridSize($event.target.value)\"\n                [min]=\"minSquareSize\"\n                [max]=\"maxSquareSize\"\n                (focus)=\"onFocus()\"\n                (focusout)=\"onFocusOut()\"\n            />\n            <div>\n                <button (click)=\"changeGridSize(currentSquareSize - 5)\">-</button>\n                <button (click)=\"changeGridSize(currentSquareSize + 5)\">+</button>\n            </div>\n        </div>\n        <hr class=\"bottomBorder\" />\n    </div>\n\n    <div id=\"section\">\n        <p>Opacité des lignes</p>\n        <div class=\"attributeContainer\">\n            <input\n                type=\"text\"\n                [(value)]=\"currentOpacity\"\n                (change)=\"changeOpacity($event.target.value)\"\n                [min]=\"minOpacity\"\n                [max]=\"maxOpacity\"\n                (focus)=\"onFocus()\"\n                (focusout)=\"onFocusOut()\"\n            />\n            <div>\n                <button (click)=\"changeOpacity(currentOpacity - 5)\">-</button>\n                <button (click)=\"changeOpacity(currentOpacity + 5)\">+</button>\n            </div>\n        </div>\n        <hr class=\"bottomBorder finalBorder\" />\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { EraserService } from '@app/services/tools/eraser.service';\n\n@Component({\n    selector: 'app-eraser-attributes',\n    templateUrl: './eraser-attributes.component.html',\n    styleUrls: ['./eraser-attributes.component.scss'],\n})\nexport class EraserAttributesComponent {\n    toolWidth: number;\n\n    constructor(public eraserService: EraserService) {\n        this.toolWidth = eraserService.eraserData.lineWidth;\n    }\n\n    changeWidth(newWidth: number): void {\n        this.toolWidth = newWidth;\n        this.eraserService.changeWidth(this.toolWidth);\n    }\n}\n","<div id=\"eraserAttributes\">\n    <h2 class=\"toolName\">{{ eraserService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Épaisseur Ligne\"\n        [min]=\"eraserService.minToolWidth\"\n        [max]=\"eraserService.maxToolWidth\"\n        [step]=\"1\"\n        [value]=\"toolWidth\"\n        (valueChange)=\"changeWidth($event)\"\n    ></app-slider>\n</div>\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CarouselComponent } from '@app/components/carousel/carousel.component';\nimport { UserGuideComponent } from '@app/components/userguide/user-guide.component';\nimport { ContinueDrawingService } from '@app/services/continue-drawing/continue-drawing.service';\n\n@Component({\n    selector: 'app-main-page',\n    templateUrl: './main-page.component.html',\n    styleUrls: ['./main-page.component.scss'],\n})\nexport class MainPageComponent {\n    readonly title: string = 'PolyDessin';\n\n    constructor(public dialog: MatDialog, public continueDrawingService: ContinueDrawingService) {}\n    openUserguide(): void {\n        this.dialog.open(UserGuideComponent);\n    }\n\n    openCarousel(): void {\n        this.dialog.open(CarouselComponent);\n    }\n\n    loadOldDrawing(): void {\n        this.continueDrawingService.loadOldDrawing();\n    }\n\n    unlockContinueDrawing(): void {\n        this.continueDrawingService.unlockContinueDrawing();\n    }\n\n    isContinueDrawingEnable(): boolean {\n        return localStorage.getItem('drawingKey') ? true : false;\n    }\n}\n","<div class=\"main-page\">\n    <ul class=\"nav-area\">\n        <li><a (click)=\"openCarousel()\">Carrousel de dessin</a></li>\n        <li><a (click)=\"openUserguide()\">Guide d'utilisation</a></li>\n    </ul>\n\n    <div class=\"title-text\">\n        <h1>{{ title }}</h1>\n        <a routerLink=\"/editor\" (click)=\"unlockContinueDrawing()\">Nouveau dessin</a>\n        <a *ngIf=\"isContinueDrawingEnable()\" (click)=\"loadOldDrawing()\">Continuer un dessin</a>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { SquareService } from '@app/services/tools/square.service';\n\n@Component({\n    selector: 'app-square-attributes',\n    templateUrl: './square-attributes.component.html',\n    styleUrls: ['./square-attributes.component.scss'],\n})\nexport class SquareAttributesComponent {\n    toolWidth: number;\n    fillStyle: number;\n\n    constructor(public squareService: SquareService) {\n        this.toolWidth = squareService.rectangleData.lineWidth;\n        this.fillStyle = squareService.rectangleData.fillStyle;\n    }\n\n    changeBorderWidth(newWidth: number): void {\n        this.toolWidth = newWidth;\n        this.squareService.changeWidth(newWidth);\n    }\n\n    changeFillStyle(newFillStyle: number): void {\n        this.squareService.setFillStyle(newFillStyle);\n    }\n}\n","<div id=\"squareAttributes\">\n    <h2 class=\"toolName\">{{ squareService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Épaisseur Contour\"\n        [min]=\"squareService.minBorderWidth\"\n        [max]=\"squareService.maxBorderWidth\"\n        [step]=\"1\"\n        [value]=\"toolWidth\"\n        (valueChange)=\"changeBorderWidth($event)\"\n    ></app-slider>\n    <app-fill-types-selection (valueChange)=\"changeFillStyle($event)\" [currentFillStyle]=\"this.fillStyle\"></app-fill-types-selection>\n</div>\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, HostListener, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatChipInputEvent, MatChipList } from '@angular/material/chips';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { LoadSelectedDrawingAlertComponent } from '@app/components/load-selected-drawing-alert/load-selected-drawing-alert.component';\nimport { MAX_NAME_LENGTH, MAX_NUMBER_TAG, MAX_NUMBER_VISIBLE_DRAWINGS, MAX_TAG_LENGTH } from '@app/ressources/global-variables/global-variables';\nimport { ContinueDrawingService } from '@app/services/continue-drawing/continue-drawing.service';\nimport { DatabaseService } from '@app/services/database/database.service';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { ResizeDrawingService } from '@app/services/resize-drawing/resize-drawing.service';\nimport { ServerResponseService } from '@app/services/server-response/server-response.service';\nimport { TextService } from '@app/services/tools/text.service';\nimport { UndoRedoStackService } from '@app/services/undo-redo/undo-redo-stack.service';\nimport { DBData } from '@common/communication/drawing-data';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-carousel',\n    templateUrl: './carousel.component.html',\n    styleUrls: ['./carousel.component.scss'],\n})\nexport class CarouselComponent implements OnInit, OnDestroy {\n    destroy$: Subject<boolean> = new Subject<boolean>();\n    databaseMetadata: DBData[] = [];\n    filteredMetadata: DBData[] = [];\n    gotImages: boolean = false;\n    visibleDrawingsIndexes: number[] = [];\n    currentTag: string = '';\n    maxTags: boolean = false;\n    isArrowEventsChecked: boolean = true;\n    name: string = '';\n    drawingOfInterest: number = 0;\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n    tags: string[] = [];\n    currentRoute: string;\n    IMAGE_BASE_PATH: string = 'http://localhost:3000/api/database/getDrawingPng/';\n\n    constructor(\n        public router: Router,\n        public hotkeyService: HotkeyService,\n        public serverResponseService: ServerResponseService,\n        public databaseService: DatabaseService,\n        public dialog: MatDialog,\n        public drawingService: DrawingService,\n        public resizeDrawingService: ResizeDrawingService,\n        public continueDrawingService: ContinueDrawingService,\n        public textService: TextService,\n        public undoRedoStackService: UndoRedoStackService,\n    ) {}\n\n    @ViewChild('chipList', { static: false }) chipList: MatChipList;\n\n    ngOnInit(): void {\n        if (this.textService.isNewText) {\n            this.textService.createText();\n        }\n        this.hotkeyService.isHotkeyEnabled = false;\n        this.loadDBData();\n        this.currentRoute = this.router.url;\n    }\n\n    disableEvents(): void {\n        this.isArrowEventsChecked = false;\n    }\n\n    enableEvents(): void {\n        this.isArrowEventsChecked = true;\n    }\n\n    @HostListener('document:keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent): void {\n        if (!this.isArrowEventsChecked) return;\n        if (this.databaseMetadata.length <= 1) return;\n        if (this.databaseMetadata.length === 2 && (event.key === 'ArrowLeft' || event.key === 'ArrowRight')) {\n            this.onClickTwoDrawings();\n            return;\n        }\n        if (event.key === 'ArrowLeft') {\n            this.onPreviousClick();\n        } else if (event.key === 'ArrowRight') {\n            this.onNextClick();\n        }\n    }\n\n    loadDBData(): void {\n        this.gotImages = false;\n        this.databaseMetadata = [];\n        this.visibleDrawingsIndexes = [];\n        this.databaseService\n            .getAllDBData()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((dBData: DBData[]) => {\n                this.databaseMetadata = dBData;\n                this.filteredMetadata = this.databaseMetadata;\n                this.manageShownDrawings();\n                this.gotImages = true;\n            });\n\n        this.showDrawingsWithFilter();\n    }\n\n    isArray(object: DBData): boolean {\n        return Array.isArray(object.tags);\n    }\n\n    manageShownDrawings(): void {\n        for (let i = 0; i < this.filteredMetadata.length; i++) {\n            if (i >= MAX_NUMBER_VISIBLE_DRAWINGS) {\n                break;\n            }\n            if (i === 1) {\n                this.drawingOfInterest = i;\n            }\n            this.visibleDrawingsIndexes.push(i);\n        }\n        this.gotImages = true;\n    }\n    onPreviewClick(positionIndex: number): void {\n        if (this.filteredMetadata.length === 2) {\n            if (positionIndex === this.drawingOfInterest) this.loadSelectedDrawing(positionIndex);\n            else this.onClickTwoDrawings();\n        } else {\n            if (positionIndex < 1) {\n                this.onPreviousClick();\n            } else if (positionIndex > 1) {\n                this.onNextClick();\n            } else {\n                this.loadSelectedDrawing(positionIndex);\n            }\n        }\n    }\n\n    loadSelectedDrawing(positionIndex: number): void {\n        if (this.currentRoute !== '/home' && !this.drawingService.isCanvasBlank(this.drawingService.baseCtx)) {\n            const loadDrawingAlert = this.dialog.open(LoadSelectedDrawingAlertComponent);\n            loadDrawingAlert\n                .afterClosed()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe((optionChosen: string) => {\n                    if (optionChosen === 'Oui') {\n                        this.applySelectedDrawing(this.visibleDrawingsIndexes[positionIndex]);\n                        this.dialog.closeAll();\n                    }\n                });\n        } else {\n            this.applySelectedDrawing(this.visibleDrawingsIndexes[positionIndex]);\n            this.dialog.closeAll();\n        }\n    }\n\n    applySelectedDrawing(index: number): void {\n        if (this.currentRoute === '/home') {\n            this.router.navigateByUrl('/editor');\n            this.currentRoute = '/editor';\n        }\n        this.databaseService\n            .getDrawingPng(this.filteredMetadata[index].fileName)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(\n                (image: Blob) => {\n                    const img = URL.createObjectURL(image);\n                    this.drawImageOnCanvas(img);\n                },\n                () => {\n                    this.serverResponseService.loadErrorSnackBar();\n                },\n            );\n    }\n\n    addTag(event: MatChipInputEvent): void {\n        const input = event.input;\n        const value = event.value;\n\n        if ((value || '').trim()) {\n            if (this.tags.length < MAX_NUMBER_TAG) {\n                if (value.length < MAX_TAG_LENGTH) {\n                    this.tags.push(value.trim());\n                }\n            }\n            if (this.tags.length === MAX_NUMBER_TAG) {\n                this.maxTags = true;\n            }\n        }\n        if (input) {\n            input.value = '';\n        }\n        this.showDrawingsWithFilter();\n    }\n\n    removeTag(tags: string): void {\n        const index = this.tags.indexOf(tags);\n        if (this.maxTags) {\n            this.maxTags = false;\n        }\n\n        if (index >= 0) {\n            this.tags.splice(index, 1);\n        }\n        this.showDrawingsWithFilter();\n    }\n\n    showDrawingsWithFilter(): void {\n        this.gotImages = false;\n        this.filteredMetadata = [];\n        this.visibleDrawingsIndexes = [];\n        if (!this.tags.length) {\n            this.filteredMetadata = this.databaseMetadata;\n        }\n        for (const data of this.databaseMetadata) {\n            if (!data.tags.length) return;\n\n            if (!Array.isArray(data.tags)) {\n                if (this.tags.includes(data.tags)) {\n                    this.filteredMetadata.push(data);\n                    return;\n                }\n            }\n\n            for (const tag of data.tags) {\n                if (this.tags.includes(tag)) {\n                    this.filteredMetadata.push(data);\n                    break;\n                }\n            }\n        }\n        this.manageShownDrawings();\n    }\n    async drawImageOnCanvas(image: string): Promise<void> {\n        return new Promise<void>((resolve) => {\n            const drawing = new Image();\n            drawing.src = image;\n            drawing.onload = () => {\n                this.resizeDrawingService.resizeCanvasSize(drawing.width, drawing.height);\n                this.drawingService.baseCtx.drawImage(drawing, 0, 0, drawing.width, drawing.height);\n                this.undoRedoStackService.resetStack();\n                resolve();\n            };\n        });\n    }\n\n    deleteDrawing(): void {\n        this.gotImages = false;\n        let fileName: string = this.databaseMetadata[this.visibleDrawingsIndexes[0]].fileName;\n        if (this.databaseMetadata.length > 1) {\n            fileName = this.databaseMetadata[this.visibleDrawingsIndexes[this.drawingOfInterest]].fileName;\n        }\n        this.databaseService\n            .deleteDrawing(fileName)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(\n                () => {\n                    this.loadDBData();\n                },\n                () => {\n                    this.serverResponseService.deleteErrorSnackBar();\n                    this.gotImages = true;\n                },\n            );\n    }\n\n    onClickTwoDrawings(): void {\n        this.drawingOfInterest === 1 ? (this.drawingOfInterest = 0) : (this.drawingOfInterest = 1);\n    }\n\n    onPreviousClick(): void {\n        this.visibleDrawingsIndexes[2] = this.visibleDrawingsIndexes[1];\n        this.visibleDrawingsIndexes[1] = this.visibleDrawingsIndexes[0];\n        this.visibleDrawingsIndexes[0] ? this.visibleDrawingsIndexes[0]-- : (this.visibleDrawingsIndexes[0] = this.filteredMetadata.length - 1);\n    }\n\n    onNextClick(): void {\n        this.visibleDrawingsIndexes[0] = this.visibleDrawingsIndexes[1];\n        this.visibleDrawingsIndexes[1] = this.visibleDrawingsIndexes[2];\n        this.visibleDrawingsIndexes[2] === this.filteredMetadata.length - 1 ? (this.visibleDrawingsIndexes[2] = 0) : this.visibleDrawingsIndexes[2]++;\n    }\n\n    hasLengthTagError(tag: string): boolean {\n        return tag.length > MAX_NAME_LENGTH;\n    }\n\n    hasSpaceTagError(tag: string): boolean {\n        if (tag.indexOf(' ') < 0) {\n            return false;\n        }\n        return true;\n    }\n\n    currentTagInput(tag: string): void {\n        this.currentTag = tag;\n        if (tag.length > MAX_TAG_LENGTH || tag.indexOf(' ') >= 0) {\n            this.chipList.errorState = true;\n            this.chipList._markAsTouched();\n        } else {\n            this.chipList.errorState = false;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.hotkeyService.isHotkeyEnabled = true;\n        this.destroy$.next(true);\n        this.destroy$.unsubscribe();\n    }\n}\n","<div class=\"carousel\">\n    <h1 mat-dialog-title>Carrousel de dessin</h1>\n    <div *ngIf=\"!gotImages\">\n        <mat-spinner></mat-spinner>\n    </div>\n    <div *ngIf=\"databaseMetadata.length > 0 && gotImages\" class=\"search\">\n        <mat-card class=\"tags-card\">\n            <h3 mat-dialog-title>Filtrage par tags</h3>\n            <mat-form-field class=\"tag-list\">\n                <mat-chip-list #chipList aria-label=\"Tag selection\">\n                    <mat-chip *ngFor=\"let tag of tags\" [selectable]=\"true\" [removable]=\"true\" (removed)=\"removeTag(tag)\">\n                        {{ tag }}\n                        <mat-icon matChipRemove>cancel</mat-icon>\n                    </mat-chip>\n                    <input\n                        #tag\n                        type=\"text\"\n                        id=\"tag\"\n                        [disabled]=\"this.maxTags\"\n                        (keyup)=\"this.currentTagInput(tag.value)\"\n                        (keydown)=\"this.currentTagInput(tag.value)\"\n                        on-focus=\"disableEvents()\"\n                        on-focusout=\"enableEvents()\"\n                        placeholder=\"Tags:\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-chip-list>\n                <mat-error *ngIf=\"hasSpaceTagError(tag.value)\">Pas d'espace</mat-error>\n                <mat-error *ngIf=\"hasLengthTagError(tag.value)\">L'étiquette est trop longue. (max. 15 charactères)</mat-error>\n                <mat-hint>- Pas d'espace, <br />- Max 15 charactères <br />- Max 5 étiquettes</mat-hint>\n                <div class=\"maxTags-notification\" *ngIf=\"maxTags\">Nombre maximum d'étiquettes</div>\n            </mat-form-field>\n        </mat-card>\n        <mat-card class=\"slider\">\n            <p>{{ filteredMetadata.length }} dessin(s) trouvé(s)</p>\n            <div *ngIf=\"visibleDrawingsIndexes.length > 2\" class=\"mat-parent\">\n                <button class=\"control prev\" (click)=\"onPreviousClick()\">\n                    <span class=\"arrow left\"></span>\n                </button>\n                <ng-container *ngFor=\"let drawingIndex of visibleDrawingsIndexes; let carouselPosition = index\">\n                    <mat-card\n                        [id]=\"carouselPosition\"\n                        (click)=\"onPreviewClick(carouselPosition)\"\n                        [ngClass]=\"{ 'selected-drawing': carouselPosition === drawingOfInterest, 'mat-child': carouselPosition != drawingOfInterest }\"\n                    >\n                        <p class=\"name\">{{ filteredMetadata[drawingIndex].name }}</p>\n                        <div class=\"image-container\">\n                            <img class=\"image\" [src]=\"IMAGE_BASE_PATH + filteredMetadata[drawingIndex].fileName\" />\n                        </div>\n                        <button *ngIf=\"carouselPosition === drawingOfInterest\" class=\"remove\" mat-button (click)=\"deleteDrawing()\">Supprimer</button>\n                        <div><u>TAGS</u></div>\n                        <div *ngIf=\"isArray(filteredMetadata[drawingIndex]); else oneTag\" class=\"preview-tags\">\n                            <i *ngFor=\"let tag of filteredMetadata[drawingIndex].tags\"> {{ tag }} <br /></i>\n                        </div>\n                        <ng-template #oneTag class=\"preview-tags\">\n                            <i> {{ filteredMetadata[drawingIndex].tags }} <br /></i>\n                        </ng-template>\n                    </mat-card>\n                </ng-container>\n                <button class=\"control next\" (click)=\"onNextClick()\">\n                    <span class=\"arrow right\"></span>\n                </button>\n            </div>\n            <div *ngIf=\"visibleDrawingsIndexes.length === 2\" class=\"mat-parent\">\n                <button class=\"control prev\" (click)=\"onClickTwoDrawings()\">\n                    <span class=\"arrow left\"></span>\n                </button>\n                <ng-container *ngFor=\"let drawingIndex of visibleDrawingsIndexes; let carouselPosition = index\">\n                    <mat-card\n                        [id]=\"carouselPosition\"\n                        (click)=\"onPreviewClick(carouselPosition)\"\n                        [ngClass]=\"{ 'selected-drawing': carouselPosition === drawingOfInterest, 'mat-child': carouselPosition != drawingOfInterest }\"\n                    >\n                        <p class=\"name\">{{ filteredMetadata[drawingIndex].name }}</p>\n                        <div class=\"image-container\">\n                            <img class=\"image\" [src]=\"IMAGE_BASE_PATH + filteredMetadata[drawingIndex].fileName\" />\n                        </div>\n                        <button *ngIf=\"carouselPosition === drawingOfInterest\" class=\"remove\" mat-button (click)=\"deleteDrawing()\">Supprimer</button>\n                        <div><u>TAGS</u></div>\n                        <div *ngIf=\"isArray(filteredMetadata[drawingIndex]); else oneTag\" class=\"preview-tags\">\n                            <i *ngFor=\"let tag of filteredMetadata[drawingIndex].tags\"> {{ tag }} <br /></i>\n                        </div>\n                        <ng-template #oneTag class=\"preview-tags\">\n                            <i> {{ filteredMetadata[drawingIndex].tags }} <br /></i>\n                        </ng-template>\n                    </mat-card>\n                </ng-container>\n                <button class=\"control next\" (click)=\"onClickTwoDrawings()\">\n                    <span class=\"arrow right\"></span>\n                </button>\n            </div>\n            <div *ngIf=\"visibleDrawingsIndexes.length === 1\" class=\"mat-parent\">\n                <mat-card (click)=\"loadSelectedDrawing(0)\" class=\"selected-drawing\">\n                    <p class=\"name\">{{ filteredMetadata[0].name }}</p>\n                    <div class=\"image-container\">\n                        <img class=\"image\" [src]=\"IMAGE_BASE_PATH + filteredMetadata[0].fileName\" />\n                    </div>\n                    <button class=\"remove\" mat-button (click)=\"deleteDrawing()\">Supprimer</button>\n                    <u>TAGS</u>\n                    <div *ngIf=\"isArray(filteredMetadata[0]); else oneTag\" class=\"preview-tags\">\n                        <i *ngFor=\"let tag of filteredMetadata[0].tags\"> {{ tag }} <br /></i>\n                    </div>\n                    <ng-template #oneTag class=\"preview-tags\">\n                        <i> {{ filteredMetadata[0].tags }} <br /></i>\n                    </ng-template>\n                </mat-card>\n            </div>\n        </mat-card>\n    </div>\n    <div *ngIf=\"databaseMetadata.length == 0 && gotImages\">Aucun dessin en sauvegarde</div>\n</div>\n<div mat-dialog-actions>\n    <button class=\"close\" color=\"warn\" mat-button mat-dialog-close>Fermer</button>\n</div>\n","import { Component } from '@angular/core';\nimport { INITIAL_STAMP_ANGLE, StampAttributes, Stamps, STAMPS } from '@app/classes/stamps';\nimport { StampService } from '@app/services/tools/stamp.service';\n\n@Component({\n    selector: 'app-stamp-attributes',\n    templateUrl: './stamp-attributes.component.html',\n    styleUrls: ['./stamp-attributes.component.scss'],\n})\nexport class StampAttributesComponent {\n    angle: number = INITIAL_STAMP_ANGLE;\n    stamps: Stamps = STAMPS;\n    toolSize: number;\n\n    constructor(public stampService: StampService) {\n        this.stampService.setCurrentStamp(STAMPS.ANGULAR);\n        this.toolSize = this.stampService.getSize();\n\n        this.stampService.getAngle().subscribe((angle) => {\n            this.angle = angle as number;\n        });\n    }\n\n    changeSize(newSize: number): void {\n        this.toolSize = newSize;\n        this.stampService.setSize(newSize);\n    }\n\n    changeStamp(newStamp: StampAttributes): void {\n        this.stampService.setCurrentStamp(newStamp);\n    }\n\n    changeAngle(newAngle: number): void {\n        this.angle = newAngle;\n        this.stampService.setAngle(newAngle);\n    }\n}\n","<div id=\"stampAttributes\">\n    <h2 class=\"toolName\">{{ stampService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Taille de l'étampe\"\n        [min]=\"stampService.minSize\"\n        [max]=\"stampService.maxSize\"\n        [step]=\"1\"\n        [value]=\"toolSize\"\n        (valueChange)=\"changeSize($event)\"\n    >\n    </app-slider>\n    <app-slider title=\"Angle\" [min]=\"0\" [max]=\"360\" [step]=\"1\" [value]=\"angle\" (valueChange)=\"changeAngle($event)\"> </app-slider>\n    <div id=\"stamps\">\n        <label>\n            <input type=\"radio\" name=\"stamp\" id=\"angular\" (change)=\"changeStamp(this.stamps.ANGULAR)\" checked />\n            <img src=\"/assets/stamps/angular-brands.svg\" width=\"50px\" height=\"50px\" />\n        </label>\n        <label>\n            <input type=\"radio\" name=\"stamp\" (change)=\"changeStamp(this.stamps.JAVASCRIPT)\" />\n            <img src=\"/assets/stamps/js-brands.svg\" width=\"50px\" height=\"50px\" />\n        </label>\n        <label>\n            <input type=\"radio\" name=\"stamp\" (change)=\"changeStamp(this.stamps.DOCKER)\" />\n            <img src=\"/assets/stamps/docker-brands.svg\" width=\"50px\" height=\"50px\" />\n        </label>\n\n        <label>\n            <input type=\"radio\" name=\"stamp\" name=\"stamp\" (change)=\"changeStamp(this.stamps.GITLAB)\" />\n            <img src=\"/assets/stamps/gitlab-brands.svg\" width=\"50px\" height=\"50px\" />\n        </label>\n\n        <label>\n            <input type=\"radio\" name=\"stamp\" (change)=\"changeStamp(this.stamps.NODEJS)\" />\n            <img src=\"/assets/stamps/node-js-brands.svg\" width=\"50px\" height=\"50px\" />\n        </label>\n    </div>\n</div>\n","import { AfterViewInit, Component } from '@angular/core';\n\n@Component({\n    selector: 'app-userguide',\n    templateUrl: './user-guide.component.html',\n    styleUrls: ['./user-guide.component.scss'],\n})\nexport class UserGuideComponent implements AfterViewInit {\n    disableAnimation: boolean = true;\n\n    ngAfterViewInit(): void {\n        setTimeout(() => (this.disableAnimation = false));\n    }\n}\n","<h1 mat-dialog-title>Guide d'utilisation</h1>\n<div mat-dialog-content [@.disabled]=\"disableAnimation\">\n    <mat-tab-group>\n        <mat-tab>\n            <ng-template mat-tab-label>\n                <mat-icon class=\"example-tab-icon\">edit</mat-icon>\n                Dessiner\n            </ng-template>\n            <app-drawing-detail></app-drawing-detail>\n        </mat-tab>\n\n        <mat-tab>\n            <ng-template mat-tab-label>\n                <mat-icon class=\"example-tab-icon\">bubble_chart</mat-icon>\n                Divers\n            </ng-template>\n            <app-general-detail></app-general-detail>\n        </mat-tab>\n    </mat-tab-group>\n</div>\n<div mat-dialog-actions>\n    <button mat-button_wrapper mat-button color=\"warn\" mat-dialog-close>Fermer</button>\n</div>\n","import { Component } from '@angular/core';\nimport { Feature, GENERALS_FEATURE } from '@app/ressources/texts/feature';\n\n@Component({\n    selector: 'app-general-detail',\n    templateUrl: './general-detail.component.html',\n    styleUrls: ['./general-detail.component.scss'],\n})\nexport class GeneralDetailComponent {\n    informations: Feature[] = GENERALS_FEATURE;\n}\n","<mat-expansion-panel *ngFor=\"let info of informations\" hideToggle>\n    <mat-expansion-panel-header>\n        <mat-panel-title> {{ info.NAME }} </mat-panel-title>\n    </mat-expansion-panel-header>\n    <p>{{ info.DESCRIPTION }}</p>\n    <img class=\"image\" src=\"{{ info.PICTURE }}\" type=\"image/png\" />\n</mat-expansion-panel>\n","import { Injectable } from '@angular/core';\nimport { Vec2 } from '@app/classes/vec2';\nimport { DEGREES_180, LineAngle, MAXIMUM_DISTANCE_LINE_CONNECTION, Quadrant } from '@app/ressources/global-variables/global-variables';\nimport { LIMIT_ANGLES } from '@app/ressources/global-variables/limit-angles';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class Trigonometry {\n    MAX_DISTANCE_BETWEEN_TWO_DOTS: number = 20;\n\n    findClosestAngle(quadrant: Quadrant, angleDegree: number): LineAngle {\n        switch (quadrant) {\n            case Quadrant.TOP_RIGHT: {\n                return this.findClosestAngleTopRight(quadrant, angleDegree);\n            }\n            case Quadrant.TOP_LEFT: {\n                return this.findClosestAngleTopLeft(quadrant, angleDegree);\n            }\n            case Quadrant.BOTTOM_LEFT: {\n                return this.findClosestAngleBottomLeft(quadrant, angleDegree);\n            }\n            case Quadrant.BOTTOM_RIGHT: {\n                return this.findClosestAngleBottomRight(quadrant, angleDegree);\n            }\n        }\n    }\n\n    adjustEndingPoint(lineAngle: LineAngle, mouseCoordinates: Vec2, adjacent: number, mouseClicks: Vec2[]): Vec2 {\n        switch (lineAngle) {\n            case LineAngle.DEGREES_0: {\n                return { x: mouseCoordinates.x, y: mouseClicks[mouseClicks.length - 1].y };\n            }\n            case LineAngle.DEGREES_45: {\n                return { x: mouseCoordinates.x, y: mouseClicks[mouseClicks.length - 1].y - adjacent };\n            }\n            case LineAngle.DEGREES_90: {\n                return { x: mouseClicks[mouseClicks.length - 1].x, y: mouseCoordinates.y };\n            }\n            case LineAngle.DEGREES_135: {\n                return { x: mouseCoordinates.x, y: mouseClicks[mouseClicks.length - 1].y - adjacent };\n            }\n            case LineAngle.DEGREES_180: {\n                return { x: mouseCoordinates.x, y: mouseClicks[mouseClicks.length - 1].y };\n            }\n            case LineAngle.DEGREES_225: {\n                return { x: mouseCoordinates.x, y: mouseClicks[mouseClicks.length - 1].y + adjacent };\n            }\n            case LineAngle.DEGREES_270: {\n                return { x: mouseClicks[mouseClicks.length - 1].x, y: mouseCoordinates.y };\n            }\n            case LineAngle.DEGREES_315: {\n                return { x: mouseCoordinates.x, y: mouseClicks[mouseClicks.length - 1].y + adjacent };\n            }\n        }\n    }\n\n    findClosestAngleTopRight(quadrant: Quadrant, angleDegree: number): LineAngle {\n        if (LIMIT_ANGLES.DEGREES_0 <= angleDegree && angleDegree <= LIMIT_ANGLES.DEGREES_22POINT5) {\n            return LineAngle.DEGREES_0;\n        } else if (LIMIT_ANGLES.DEGREES_22POINT5 < angleDegree && angleDegree <= LIMIT_ANGLES.DEGREES_67POINT5) {\n            return LineAngle.DEGREES_45;\n        } else {\n            return LineAngle.DEGREES_90;\n        }\n    }\n\n    findClosestAngleTopLeft(quadrant: Quadrant, angleDegree: number): LineAngle {\n        if (LIMIT_ANGLES.DEGREES_90 > angleDegree && angleDegree >= LIMIT_ANGLES.DEGREES_67POINT5) {\n            return LineAngle.DEGREES_90;\n        } else if (LIMIT_ANGLES.DEGREES_67POINT5 > angleDegree && angleDegree >= LIMIT_ANGLES.DEGREES_22POINT5) {\n            return LineAngle.DEGREES_135;\n        } else {\n            return LineAngle.DEGREES_180;\n        }\n    }\n\n    findClosestAngleBottomLeft(quadrant: Quadrant, angleDegree: number): LineAngle {\n        if (LIMIT_ANGLES.DEGREES_0 <= angleDegree && angleDegree <= LIMIT_ANGLES.DEGREES_22POINT5) {\n            return LineAngle.DEGREES_180;\n        } else if (LIMIT_ANGLES.DEGREES_22POINT5 < angleDegree && angleDegree <= LIMIT_ANGLES.DEGREES_67POINT5) {\n            return LineAngle.DEGREES_225;\n        } else {\n            return LineAngle.DEGREES_270;\n        }\n    }\n\n    findClosestAngleBottomRight(quadrant: Quadrant, angleDegree: number): LineAngle {\n        if (LIMIT_ANGLES.DEGREES_90 > angleDegree && angleDegree >= LIMIT_ANGLES.DEGREES_67POINT5) {\n            return LineAngle.DEGREES_270;\n        } else if (LIMIT_ANGLES.DEGREES_67POINT5 > angleDegree && angleDegree >= LIMIT_ANGLES.DEGREES_22POINT5) {\n            return LineAngle.DEGREES_315;\n        } else {\n            return LineAngle.DEGREES_0;\n        }\n    }\n\n    radiansToDegrees(radians: number): number {\n        return radians * (DEGREES_180 / Math.PI);\n    }\n\n    findCursorQuadrant(adjacent: number, opposite: number): Quadrant {\n        if (adjacent >= 0 && opposite >= 0) {\n            return Quadrant.TOP_RIGHT;\n        } else if (adjacent <= 0 && opposite >= 0) {\n            return Quadrant.TOP_LEFT;\n        } else if (adjacent <= 0 && opposite <= 0) {\n            return Quadrant.BOTTOM_LEFT;\n        } else {\n            return Quadrant.BOTTOM_RIGHT;\n        }\n    }\n\n    checkIf20pxAway(firstPoint: Vec2, secondPoint: Vec2): boolean {\n        const a = secondPoint.x - firstPoint.x;\n        const b = secondPoint.y - firstPoint.y;\n        const c = Math.sqrt(a * a + b * b);\n        if (c <= MAXIMUM_DISTANCE_LINE_CONNECTION) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    distanceBetweenTwoDots(firstDot: Vec2, secondDot: Vec2): number {\n        const a = secondDot.x - firstDot.x;\n        const b = secondDot.y - firstDot.y;\n        const c = Math.sqrt(a * a + b * b);\n        return c;\n    }\n\n    findQuadrant(firstPoint: Vec2, lastPoint: Vec2): number {\n        if (firstPoint.x > lastPoint.x && firstPoint.y > lastPoint.y) {\n            return Quadrant.TOP_LEFT;\n        } else if (firstPoint.x > lastPoint.x && firstPoint.y < lastPoint.y) {\n            return Quadrant.BOTTOM_LEFT;\n        } else if (firstPoint.x < lastPoint.x && firstPoint.y > lastPoint.y) {\n            return Quadrant.TOP_RIGHT;\n        }\n        return Quadrant.BOTTOM_RIGHT;\n    }\n\n    findTopLeftPointCircle(firstPoint: Vec2, lastPoint: Vec2): Vec2 {\n        let x = 0;\n        let y = 0;\n        switch (this.findQuadrant(firstPoint, lastPoint)) {\n            case Quadrant.BOTTOM_LEFT:\n                x = lastPoint.x;\n                y = firstPoint.y;\n                break;\n            case Quadrant.TOP_LEFT:\n                x = lastPoint.x;\n                y = lastPoint.y;\n                break;\n            case Quadrant.BOTTOM_RIGHT:\n                x = firstPoint.x;\n                y = firstPoint.y;\n                break;\n            case Quadrant.TOP_RIGHT:\n                x = firstPoint.x;\n                y = lastPoint.y;\n                break;\n        }\n        return { x, y };\n    }\n\n    getCenter(firstPoint: Vec2, lastPoint: Vec2): Vec2 {\n        let centerX = Math.floor(lastPoint.x - firstPoint.x) / 2;\n        let centerY = Math.floor(lastPoint.y - firstPoint.y) / 2;\n\n        centerX = firstPoint.x > lastPoint.x ? lastPoint.x + centerX : lastPoint.x - centerX;\n        centerY = firstPoint.y > lastPoint.y ? lastPoint.y + centerY : lastPoint.y - centerY;\n        return { x: centerX, y: centerY };\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { AlignmentNames, ALIGNMENT_NAMES } from '@app/ressources/global-variables/alignment-names';\nimport { MAGNETISM_NAME } from '@app/ressources/global-variables/global-variables';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { SelectionService } from '@app/services/tools/selection-services/selection.service';\n\n@Component({\n    selector: 'app-magnetism',\n    templateUrl: './magnetism.component.html',\n    styleUrls: ['./magnetism.component.scss'],\n})\nexport class MagnetismComponent {\n    @Input() service: SelectionService;\n    isMagnetismEnabled: boolean = false;\n    alignmentNames: AlignmentNames = ALIGNMENT_NAMES;\n    currentAlignment: string = this.alignmentNames.ALIGN_TOP_LEFT_NAME;\n\n    constructor(public hotkeyService: HotkeyService) {\n        this.hotkeyService.getKey().subscribe((toolName: string) => {\n            if (toolName === MAGNETISM_NAME) {\n                if (this.isMagnetismEnabled) this.enableGridMagnetism(false);\n                else this.enableGridMagnetism(true);\n            }\n        });\n    }\n\n    enableGridMagnetism(isChecked: boolean): void {\n        this.isMagnetismEnabled = isChecked;\n        this.service.enableMagnetism(isChecked);\n    }\n\n    onAlignmentChange(event: Event): void {\n        const target = event.target as HTMLInputElement;\n        if (target.value != undefined) {\n            this.currentAlignment = target.value;\n            this.service.setMagnetismAlignment(this.currentAlignment);\n        }\n    }\n}\n","<div class=\"magnetism\">\n    <mat-checkbox (change)=\"enableGridMagnetism($event.checked)\" [checked]=\"isMagnetismEnabled\">Magnétisme</mat-checkbox>\n    <hr />\n    <p class=\"alignmentTitle\">point aimenté:</p>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <input\n                type=\"radio\"\n                class=\"alignment\"\n                [value]=\"this.alignmentNames.ALIGN_TOP_LEFT_NAME\"\n                [checked]=\"currentAlignment.includes(this.alignmentNames.ALIGN_TOP_LEFT_NAME)\"\n                (change)=\"onAlignmentChange($event)\"\n            />\n            <input\n                type=\"radio\"\n                class=\"alignment\"\n                [value]=\"this.alignmentNames.ALIGN_TOP_CENTER_NAME\"\n                [checked]=\"currentAlignment.includes(this.alignmentNames.ALIGN_TOP_CENTER_NAME)\"\n                (change)=\"onAlignmentChange($event)\"\n            />\n            <input\n                type=\"radio\"\n                class=\"alignment\"\n                [value]=\"this.alignmentNames.ALIGN_TOP_RIGHT_NAME\"\n                [checked]=\"currentAlignment.includes(this.alignmentNames.ALIGN_TOP_RIGHT_NAME)\"\n                (change)=\"onAlignmentChange($event)\"\n            />\n        </div>\n        <div class=\"row\">\n            <input\n                type=\"radio\"\n                class=\"alignment\"\n                [value]=\"this.alignmentNames.ALIGN_CENTER_LEFT_NAME\"\n                [checked]=\"currentAlignment.includes(this.alignmentNames.ALIGN_CENTER_LEFT_NAME)\"\n                (change)=\"onAlignmentChange($event)\"\n            />\n            <input\n                type=\"radio\"\n                class=\"alignment\"\n                [value]=\"this.alignmentNames.ALIGN_CENTER_NAME\"\n                [checked]=\"currentAlignment.includes(this.alignmentNames.ALIGN_CENTER_NAME)\"\n                (change)=\"onAlignmentChange($event)\"\n            />\n            <input\n                type=\"radio\"\n                class=\"alignment\"\n                [value]=\"this.alignmentNames.ALIGN_CENTER_RIGHT_NAME\"\n                [checked]=\"currentAlignment.includes(this.alignmentNames.ALIGN_CENTER_RIGHT_NAME)\"\n                (change)=\"onAlignmentChange($event)\"\n            />\n        </div>\n        <div class=\"row\">\n            <input\n                type=\"radio\"\n                class=\"alignment\"\n                [value]=\"this.alignmentNames.ALIGN_BOTTOM_LEFT_NAME\"\n                [checked]=\"currentAlignment.includes(this.alignmentNames.ALIGN_BOTTOM_LEFT_NAME)\"\n                (change)=\"onAlignmentChange($event)\"\n            />\n            <input\n                type=\"radio\"\n                class=\"alignment\"\n                [value]=\"this.alignmentNames.ALIGN_BOTTOM_CENTER_NAME\"\n                [checked]=\"currentAlignment.includes(this.alignmentNames.ALIGN_BOTTOM_CENTER_NAME)\"\n                (change)=\"onAlignmentChange($event)\"\n            />\n            <input\n                type=\"radio\"\n                class=\"alignment\"\n                [value]=\"this.alignmentNames.ALIGN_BOTTOM_RIGHT_NAME\"\n                [checked]=\"currentAlignment.includes(this.alignmentNames.ALIGN_BOTTOM_RIGHT_NAME)\"\n                (change)=\"onAlignmentChange($event)\"\n            />\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditorComponent } from './components/editor/editor.component';\nimport { MainPageComponent } from './components/main-page/main-page.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    { path: 'home', component: MainPageComponent },\n    { path: 'editor', component: EditorComponent },\n    { path: '**', redirectTo: '/home' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { PatternNames, PATTERN_NAMES } from '@app/ressources/global-variables/brush-pattern-names';\nimport { BrushService } from '@app/services/tools/brush.service';\n\n@Component({\n    selector: 'app-brush-attributes',\n    templateUrl: './brush-attributes.component.html',\n    styleUrls: ['./brush-attributes.component.scss'],\n})\nexport class BrushAttributesComponent {\n    toolWidth: number;\n    patternNames: PatternNames = PATTERN_NAMES;\n\n    constructor(public brushService: BrushService) {\n        this.toolWidth = brushService.brushData.lineWidth;\n        this.brushService.setPattern(this.patternNames.FIRST_PATTERN);\n    }\n\n    changeWidth(newWidth: number): void {\n        this.toolWidth = newWidth;\n        this.brushService.changeWidth(this.toolWidth);\n    }\n    setPattern(pattern: string): void {\n        this.brushService.setPattern(pattern);\n    }\n}\n","<div id=\"brushAttributes\">\n    <h2 class=\"toolName\">{{ brushService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Épaisseur Ligne\"\n        [min]=\"brushService.minToolWidth\"\n        [max]=\"brushService.maxToolWidth\"\n        [step]=\"1\"\n        [value]=\"toolWidth\"\n        (valueChange)=\"changeWidth($event)\"\n    >\n    </app-slider>\n    <div id=\"patterns\">\n        <label>\n            <input type=\"radio\" id=\"pattern1\" name=\"patterns\" (change)=\"setPattern(this.patternNames.FIRST_PATTERN)\" checked />\n            <img src=\"/assets/pattern1.png\" />\n        </label>\n\n        <label>\n            <input type=\"radio\" name=\"patterns\" (change)=\"setPattern(this.patternNames.SECOND_PATTERN)\" />\n            <img src=\"/assets/pattern2.png\" />\n        </label>\n\n        <label>\n            <input type=\"radio\" name=\"patterns\" (change)=\"setPattern(this.patternNames.THIRD_PATTERN)\" />\n            <img src=\"/assets/pattern3.png\" />\n        </label>\n\n        <label>\n            <input type=\"radio\" name=\"patterns\" (change)=\"setPattern(this.patternNames.FOURTH_PATTERN)\" />\n            <img src=\"/assets/pattern4.png\" />\n        </label>\n\n        <label>\n            <input type=\"radio\" name=\"patterns\" (change)=\"setPattern(this.patternNames.FIFTH_PATTERN)\" />\n            <img src=\"/assets/pattern5.png\" />\n        </label>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { PencilService } from '@app/services/tools/pencil.service';\n\n@Component({\n    selector: 'app-pencil-attributes',\n    templateUrl: './pencil-attributes.component.html',\n    styleUrls: ['./pencil-attributes.component.scss'],\n})\nexport class PencilAttributesComponent {\n    toolWidth: number;\n\n    constructor(public pencilService: PencilService) {\n        this.toolWidth = pencilService.pencilData.lineWidth;\n    }\n\n    changeWidth(newWidth: number): void {\n        this.toolWidth = newWidth;\n        this.pencilService.changeWidth(this.toolWidth);\n    }\n}\n","<div id=\"pencilAttributes\">\n    <h2 class=\"toolName\">{{ pencilService.name }}</h2>\n    <hr />\n    <app-slider\n        title=\"Épaisseur Ligne\"\n        [min]=\"pencilService.minToolWidth\"\n        [max]=\"pencilService.maxToolWidth\"\n        [step]=\"1\"\n        [value]=\"toolWidth\"\n        (valueChange)=\"changeWidth($event)\"\n    >\n    </app-slider>\n</div>\n","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CarouselComponent } from '@app/components/carousel/carousel.component';\nimport { ExportComponent } from '@app/components/export/export.component';\nimport { SavingComponent } from '@app/components/saving/saving.component';\nimport { UserGuideComponent } from '@app/components/userguide/user-guide.component';\nimport { TOOLTIP_DELAY } from '@app/ressources/global-variables/global-variables';\nimport { SidebarElementTooltips, SIDEBAR_ELEMENT_TOOLTIPS } from '@app/ressources/global-variables/sidebar-element-tooltips';\nimport { ToolNames, TOOL_NAMES, TOOL_NAMES_ARRAY } from '@app/ressources/global-variables/tool-names';\nimport { ClipboardService } from '@app/services/clipboard/clipboard.service';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { NewDrawingService } from '@app/services/new-drawing/new-drawing.service';\nimport { ToolSelectionService } from '@app/services/tool-selection/tool-selection.service';\nimport { CircleSelectionService } from '@app/services/tools/selection-services/circle-selection.service';\nimport { MagicWandService } from '@app/services/tools/selection-services/magic-wand.service';\nimport { SquareSelectionService } from '@app/services/tools/selection-services/square-selection.service';\nimport { UndoRedoService } from '@app/services/undo-redo/undo-redo.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit, OnDestroy, AfterViewInit {\n    @ViewChild('cutButton', { read: ElementRef }) cutButton: ElementRef;\n    @ViewChild('copyButton', { read: ElementRef }) copyButton: ElementRef;\n    @ViewChild('pasteButton', { read: ElementRef }) pasteButton: ElementRef;\n    @ViewChild('undo', { read: ElementRef }) undoButton: ElementRef;\n    @ViewChild('redo', { read: ElementRef }) redoButton: ElementRef;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n    elementDescriptions: SidebarElementTooltips = SIDEBAR_ELEMENT_TOOLTIPS;\n    tooltipShowDelay: number = TOOLTIP_DELAY;\n    toolNames: ToolNames = TOOL_NAMES;\n    selectedTool: string = this.toolNames.PENCIL_TOOL_NAME;\n\n    constructor(\n        public toolSelectionService: ToolSelectionService,\n        public dialog: MatDialog,\n        public newDrawingService: NewDrawingService,\n        public undoRedoService: UndoRedoService,\n        public hotkeyService: HotkeyService,\n        public squareSelectionService: SquareSelectionService,\n        public circleSelectionService: CircleSelectionService,\n        public magicWandService: MagicWandService,\n        public clipboardService: ClipboardService,\n    ) {}\n\n    ngOnInit(): void {\n        this.toolSelectionService\n            .getCurrentTool()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((tool) => {\n                if (TOOL_NAMES_ARRAY.includes(tool)) {\n                    this.selectedTool = tool;\n                }\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.undoRedoService.getUndoAvailability().subscribe((value) => {\n            this.setButtonAvailability(value, this.undoButton);\n        });\n\n        this.undoRedoService.getRedoAvailability().subscribe((value) => {\n            this.setButtonAvailability(value, this.redoButton);\n        });\n\n        this.squareSelectionService.getIsSelectionEmptySubject().subscribe((value) => {\n            this.setButtonAvailability(!value, this.cutButton);\n            this.setButtonAvailability(!value, this.copyButton);\n        });\n\n        this.circleSelectionService.getIsSelectionEmptySubject().subscribe((value) => {\n            this.setButtonAvailability(!value, this.cutButton);\n            this.setButtonAvailability(!value, this.copyButton);\n        });\n\n        this.magicWandService.getIsSelectionEmptySubject().subscribe((value) => {\n            this.setButtonAvailability(!value, this.cutButton);\n            this.setButtonAvailability(!value, this.copyButton);\n        });\n\n        this.clipboardService.getIsPasteAvailableSubject().subscribe((value) => {\n            this.setButtonAvailability(value, this.pasteButton);\n        });\n    }\n\n    onToolChange(event: Event): void {\n        const target = event.target as HTMLInputElement;\n        if (target.value) {\n            this.toolSelectionService.changeTool(target.value);\n        }\n    }\n\n    selectAll(): void {\n        this.toolSelectionService.selectAll();\n    }\n\n    openUserguide(): void {\n        this.dialog.open(UserGuideComponent);\n    }\n\n    openDialog(): void {\n        this.newDrawingService.openWarningModal();\n    }\n\n    openSaveWindow(): void {\n        this.dialog.open(SavingComponent);\n    }\n    openCarouselWindow(): void {\n        this.dialog.open(CarouselComponent);\n    }\n\n    openExportWindow(): void {\n        this.dialog.open(ExportComponent);\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.unsubscribe();\n    }\n\n    setButtonAvailability(value: boolean, buttonRef: ElementRef): void {\n        if (value) {\n            buttonRef.nativeElement.style.cursor = 'pointer';\n            buttonRef.nativeElement.style.opacity = '1';\n        } else {\n            buttonRef.nativeElement.style.cursor = 'not-allowed';\n            buttonRef.nativeElement.style.opacity = '0.5';\n        }\n    }\n\n    cut(): void {\n        switch (this.selectedTool) {\n            case this.toolNames.SQUARE_SELECTION_TOOL_NAME: {\n                this.squareSelectionService.cut();\n                break;\n            }\n            case this.toolNames.CIRCLE_SELECTION_TOOL_NAME: {\n                this.circleSelectionService.cut();\n                break;\n            }\n            case this.toolNames.MAGIC_WAND_TOOL_NAME: {\n                this.magicWandService.cut();\n                break;\n            }\n        }\n    }\n\n    copy(): void {\n        switch (this.selectedTool) {\n            case this.toolNames.SQUARE_SELECTION_TOOL_NAME: {\n                this.squareSelectionService.copy();\n                break;\n            }\n            case this.toolNames.CIRCLE_SELECTION_TOOL_NAME: {\n                this.circleSelectionService.copy();\n                break;\n            }\n            case this.toolNames.MAGIC_WAND_TOOL_NAME: {\n                this.magicWandService.copy();\n                break;\n            }\n        }\n    }\n\n    paste(): void {\n        switch (this.selectedTool) {\n            case this.toolNames.SQUARE_SELECTION_TOOL_NAME: {\n                this.squareSelectionService.paste();\n                break;\n            }\n            case this.toolNames.CIRCLE_SELECTION_TOOL_NAME: {\n                this.circleSelectionService.paste();\n                break;\n            }\n            case this.toolNames.MAGIC_WAND_TOOL_NAME: {\n                this.magicWandService.paste();\n                break;\n            }\n        }\n    }\n}\n","<div class=\"sidebar\">\n    <div class=\"sidebarSection bottomDivider\">\n        <mat-icon\n            type=\"radio\"\n            id=\"new-drawing\"\n            class=\"material-icons sidebarSectionTop\"\n            [matTooltip]=\"elementDescriptions.NEW_DRAWING_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            (click)=\"openDialog()\"\n            >add</mat-icon\n        >\n        <mat-icon\n            type=\"radio\"\n            id=\"new-drawing\"\n            class=\"material-icons sidebarSectionTop\"\n            [matTooltip]=\"elementDescriptions.SELECT_ALL_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            (click)=\"selectAll()\"\n            >select_all</mat-icon\n        >\n    </div>\n\n    <div class=\"toggleButtonGroup sidebarSection\">\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.PENCIL_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.PENCIL_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.PENCIL_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.PENCIL_TOOL_NAME\">\n            <mat-icon\n                class=\"material-icons\"\n                [matTooltip]=\"elementDescriptions.PENCIL_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n                >create\n            </mat-icon>\n        </label>\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.PEN_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.PEN_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.PEN_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.PEN_TOOL_NAME\">\n            <mat-icon\n                class=\"fas fa-pen-fancy\"\n                [matTooltip]=\"elementDescriptions.PEN_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n            ></mat-icon>\n        </label>\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.BRUSH_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.BRUSH_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.BRUSH_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.BRUSH_TOOL_NAME\">\n            <mat-icon\n                class=\"material-icons\"\n                [matTooltip]=\"elementDescriptions.BRUSH_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n                >brush</mat-icon\n            >\n        </label>\n\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.SPRAY_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.SPRAY_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.SPRAY_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.SPRAY_TOOL_NAME\">\n            <mat-icon\n                class=\"fas fa-spray-can\"\n                [matTooltip]=\"elementDescriptions.SPRAY_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n            ></mat-icon>\n        </label>\n\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.TEXT_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.TEXT_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.TEXT_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.TEXT_TOOL_NAME\">\n            <mat-icon\n                class=\"material-icons\"\n                [matTooltip]=\"elementDescriptions.TEXT_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n                >text_format</mat-icon\n            >\n        </label>\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.STAMP_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.STAMP_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.STAMP_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.STAMP_TOOL_NAME\">\n            <mat-icon\n                class=\"fas fa-stamp\"\n                [matTooltip]=\"elementDescriptions.STAMP_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n            ></mat-icon>\n        </label>\n\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.SQUARE_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.SQUARE_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.SQUARE_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.SQUARE_TOOL_NAME\">\n            <mat-icon\n                class=\"material-icons\"\n                [matTooltip]=\"elementDescriptions.SQUARE_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n                >crop_square</mat-icon\n            >\n        </label>\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.CIRCLE_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.CIRCLE_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.CIRCLE_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.CIRCLE_TOOL_NAME\">\n            <mat-icon\n                class=\"material-icons\"\n                [matTooltip]=\"elementDescriptions.CIRCLE_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n                >panorama_fish_eye</mat-icon\n            >\n        </label>\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.POLYGON_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.POLYGON_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.POLYGON_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.POLYGON_TOOL_NAME\">\n            <mat-icon\n                class=\"material-icons\"\n                [matTooltip]=\"elementDescriptions.POLYGON_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n                >change_history</mat-icon\n            >\n        </label>\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.LINE_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.LINE_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.LINE_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.LINE_TOOL_NAME\">\n            <mat-icon\n                class=\"material-icons\"\n                [matTooltip]=\"elementDescriptions.LINE_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n                >timeline</mat-icon\n            >\n        </label>\n\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.CIRCLE_SELECTION_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.CIRCLE_SELECTION_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.CIRCLE_SELECTION_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.CIRCLE_SELECTION_TOOL_NAME\">\n            <mat-icon\n                class=\"material-icons\"\n                [matTooltip]=\"elementDescriptions.CIRCLE_SELECTION_TOOL_NAME\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n                >vignette</mat-icon\n            >\n        </label>\n\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.SQUARE_SELECTION_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.SQUARE_SELECTION_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.SQUARE_SELECTION_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.SQUARE_SELECTION_TOOL_NAME\">\n            <mat-icon\n                class=\"material-icons\"\n                [matTooltip]=\"elementDescriptions.SQUARE_SELECTION_TOOL_NAME\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n                >highlight_alt</mat-icon\n            >\n        </label>\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.MAGIC_WAND_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.MAGIC_WAND_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.MAGIC_WAND_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.MAGIC_WAND_TOOL_NAME\">\n            <mat-icon\n                class=\"fas fa-magic\"\n                [matTooltip]=\"elementDescriptions.MAGIC_WAND_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n            ></mat-icon>\n        </label>\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.FILL_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.FILL_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.FILL_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.FILL_TOOL_NAME\">\n            <mat-icon\n                class=\"fas fa-fill-drip\"\n                [matTooltip]=\"elementDescriptions.FILL_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n            ></mat-icon>\n        </label>\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.ERASER_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.ERASER_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.ERASER_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.ERASER_TOOL_NAME\">\n            <mat-icon\n                class=\"fas fa-eraser\"\n                [matTooltip]=\"elementDescriptions.ERASER_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n            ></mat-icon>\n        </label>\n\n        <input\n            type=\"radio\"\n            [id]=\"this.toolNames.PIPETTE_TOOL_NAME\"\n            name=\"tool\"\n            [value]=\"this.toolNames.PIPETTE_TOOL_NAME\"\n            (change)=\"onToolChange($event)\"\n            [checked]=\"selectedTool.includes(this.toolNames.PIPETTE_TOOL_NAME)\"\n        />\n        <label [for]=\"this.toolNames.PIPETTE_TOOL_NAME\">\n            <mat-icon\n                class=\"material-icons\"\n                [matTooltip]=\"elementDescriptions.PIPETTE_TOOL_DESCRIPTION\"\n                matTooltipPosition=\"right\"\n                [matTooltipShowDelay]=\"tooltipShowDelay\"\n                >colorize</mat-icon\n            >\n        </label>\n        <mat-icon\n            #cutButton\n            class=\"material-icons disabled\"\n            [matTooltip]=\"elementDescriptions.CUT_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            mat-button\n            (click)=\"cut()\"\n            >content_cut</mat-icon\n        >\n        <mat-icon\n            #copyButton\n            class=\"material-icons disabled\"\n            [matTooltip]=\"elementDescriptions.COPY_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            mat-button\n            (click)=\"copy()\"\n            >content_copy</mat-icon\n        >\n        <mat-icon\n            #pasteButton\n            class=\"material-icons disabled\"\n            [matTooltip]=\"elementDescriptions.PASTE_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            mat-button\n            (click)=\"paste()\"\n            >content_paste</mat-icon\n        >\n    </div>\n    <div class=\"topDivider sidebarSection\">\n        <mat-icon\n            class=\"material-icons\"\n            [matTooltip]=\"elementDescriptions.CAROUSEL_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            mat-button\n            (click)=\"openCarouselWindow()\"\n            >collections</mat-icon\n        >\n        <mat-icon\n            class=\"material-icons\"\n            [matTooltip]=\"elementDescriptions.SAVE_DRAWING_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            mat-button\n            (click)=\"openSaveWindow()\"\n            >save</mat-icon\n        >\n        <mat-icon\n            class=\"material-icons\"\n            [matTooltip]=\"elementDescriptions.EXPORT_DRAWING_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            mat-button\n            (click)=\"openExportWindow()\"\n            >save_alt</mat-icon\n        >\n        <mat-icon\n            class=\"material-icons\"\n            id=\"new-drawing\"\n            [matTooltip]=\"elementDescriptions.HELP_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            mat-button\n            (click)=\"openUserguide()\"\n            >help</mat-icon\n        >\n\n        <mat-icon\n            id=\"undo\"\n            #undo\n            class=\"material-icons disabled\"\n            [matTooltip]=\"elementDescriptions.UNDO_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            (click)=\"this.undoRedoService.undo()\"\n            >undo</mat-icon\n        >\n        <mat-icon\n            id=\"redo\"\n            #redo\n            class=\"material-icons disabled\"\n            [matTooltip]=\"elementDescriptions.REDO_DESCRIPTION\"\n            matTooltipPosition=\"right\"\n            [matTooltipShowDelay]=\"tooltipShowDelay\"\n            (click)=\"this.undoRedoService.redo()\"\n            >redo</mat-icon\n        >\n    </div>\n</div>\n","import { Feature } from './feature';\n\nexport interface GroupFeature extends Feature {\n    DEPENDANCE: Feature[];\n}\n\nexport const OTHER_FEATURES: Feature[] = [\n    {\n        NAME: 'Palette de couleur',\n        DESCRIPTION:\n            'Cet outil permet de définir la couleur de tous les outils. Vous pouvez définir deux couleurs : principale et secondaire. Ces deux couleurs peuvent intéragir entre eux. Vous pouvez choisir la couleur avec le panneau de couleur contenant toutes les couleurs. En changeant de couleur, l ancienne couleur est enregistré pour vous permettre de la récupérer au besoin. ',\n        PICTURE: './../../../assets/img/couleur.png',\n    },\n    {\n        NAME: 'Magnétisme',\n        DESCRIPTION:\n            \"Cette option déplacera une boite englobante sur la ligne de la grille la plus proche lorsque vous la déplacez avec la souris. Ceci se fait en y et x. Il suffit d'activer cette outil pour l'utiliser. Il est aussi possible de faire le déplacement avec les touches directionnelles\",\n        PICTURE: './../../../assets/img/magnetisme.png',\n    },\n    {\n        NAME: 'Grille',\n        DESCRIPTION:\n            \"Cette fonctionnalité permet d'afficher une grille sur la surface de dessin. Il est possible d'activer et de désactiver la grille, de lui assigner une valeur d'opacité et d'indiquer la taille des carrées. Il est possible de modifier la taille des carrées avec les touches + et -\",\n        PICTURE: './../../../assets/img/grille.png',\n    },\n];\n\nexport const UNDO_REDO: Feature[] = [\n    {\n        NAME: 'Annuler-refaire',\n        DESCRIPTION:\n            \"Cet outil permet d'annuler et de refaire vos dernières modifications sur la surface du dessin. IL est possible d'utiliser le raccourci CTRL + Z pour annuler une action et le raccourci CTRL + SHIFT + Z pour refaire une action.\",\n        PICTURE: './../../../assets/img/annuler.png',\n    },\n];\n\nexport const BASIC_TOOLS: Feature[] = [\n    {\n        NAME: 'Efface',\n        DESCRIPTION:\n            'Cet outil permet d effacer tout ce qui se trouve sur la surface de dessin. Il peut avoir différente taille ce qui permet d effacer plus rapidement. ',\n        PICTURE: './../../../assets/video/efface.mp4',\n    },\n    {\n        NAME: 'Ligne',\n        DESCRIPTION:\n            \"Cet outil permet de tracer une ligne composée d'un ou plusieurs segments. Un premier clic définit la position de départ de la ligne. Ensuite, chaque clic qui suit « connecte » avec le clic qui le précède pour former un segment de la ligne. Un double clic permet de terminer le segment. Si le double clic est fait près du point initial de la ligne, le segment se fusionnera au point initial. \\nLa commande shifth permet de mettre la ligne a 90° ou 45°  de celle tracé précédemment. Il est possible d'afficher un point de jonction entre les segments en cliquant dans la boîte «Afficher jonction». La couleur des points de jonction est déterminée par la couleur secondaire.   \",\n        PICTURE: './../../../assets/video/ligne.mp4',\n    },\n    {\n        NAME: 'Texte',\n        DESCRIPTION:\n            \"Cet outil permet d'écrire du texte sur la surface de dessin. Un indicateur est présent dans le texte pour vous permettre de savoir où vous êtes rendu. Il est possible de bouger cet indicateur avec les touches directionnelles. Il est possible de changer la taille, la police, le style et l'alignement du texte.\",\n        PICTURE: './../../../assets/video/texte.mp4',\n    },\n    {\n        NAME: 'Étampe',\n        DESCRIPTION:\n            \"Cet outil permet d'apposer de petites images sur le dessin. Pour l'afficher sur la surface de dessin, il suffit de faire un clic gauche à l'endroit où on désire la mettre. Il est possible faire pivoter l'étampe sur elle-même avec la roulette de la souris.\",\n        PICTURE: './../../../assets/video/etampe.mp4',\n    },\n    {\n        NAME: 'Pipette',\n        DESCRIPTION:\n            \"Cet outil permet de sélectionner la couleur sous la souris. Un cercle de prévisualisation qui représente les pixels sous la souris surdimensionnés et qui entoure le pixel qui sera sélectionné est présenté dans la barre d'attribut. Un clic gauche change la couleur principal et un clic gauche la couleur secondaire\",\n        PICTURE: './../../../assets/video/pipette.mp4',\n    },\n];\n\nexport const DRAWING_TOOLS: Feature[] = [\n    {\n        NAME: 'Crayon',\n        DESCRIPTION:\n            'Le crayon vous permet de tracer des traits simples. Il peut être de différente épaisseur. Vous pouvez changer la taille avec les boutons dans la barre a gauche',\n        PICTURE: './../../../assets/video/crayon.mp4',\n    },\n    {\n        NAME: 'Pinceau',\n        DESCRIPTION:\n            \"Le pinceau permet de faire des traits de différente texture. Vous pouvez changer de texture en sélectionnant l'image correspondant à la texture désirée.\",\n        PICTURE: './../../../assets/video/brush.mp4',\n    },\n    {\n        NAME: 'Plume',\n        DESCRIPTION:\n            \"La plume permet de tracer une ligne très mince selon un angle choisi. Vous pouvez changer l'angle du trait à l'aide la roulette de la souris.\",\n        PICTURE: './../../../assets/video/plume.mp4',\n    },\n    {\n        NAME: 'Aérosol',\n        DESCRIPTION:\n            \"L'aérosol simule un effet de peinture en aérosol. Dès que le bouton est enfoncé, un jet de peinture est vaporisé sous le pointeur de la souris.\",\n        PICTURE: './../../../assets/video/aerosol.mp4',\n    },\n];\n\nexport const SHAPES: Feature[] = [\n    {\n        NAME: 'Rectangle',\n        DESCRIPTION:\n            'Cet outil permet de dessiner des rectangles de différente taille. Le rectangle tracé peut avoir un remplissage uni, juste un contour ou les deux. La couleur du remplissage est la couleur primaire et la couleur du contour est la couleur secondaire. Il est possible de faire un carré avec la commande shift.',\n        PICTURE: './../../../assets/video/rectangle.mp4',\n    },\n    {\n        NAME: 'Ellipse',\n        DESCRIPTION:\n            \"Cet outil permet de dessiner des ellipses de différente taille. L'ellipse tracé peut avoir un remplissage complet et uni, juste un contour ou les deux. La couleur du remplissage est la couleur primaire et la couleur du contour est la couleur secondaire. Il est possible de faire un cercle parfait avec la commande shift.\",\n        PICTURE: './../../../assets/video/ellipse.mp4',\n    },\n    {\n        NAME: 'Polygone',\n        DESCRIPTION:\n            'Cet outil permet de dessiner des polygones de différente taille. Le polygone tracé peut avoir un remplissage complet et uni, juste un contour ou les deux. La couleur du remplissage est la couleur primaire et la couleur du contour est la couleur secondaire. Il est possible de choisir le nombre de côté du polygone (3 à 12)',\n        PICTURE: './../../../assets/video/polygone.mp4',\n    },\n];\n\nexport const FILL: Feature[] = [\n    {\n        NAME: 'Sceau de peinture ',\n        DESCRIPTION: \"Cet outil permet de remplir une région de la couleur principal. La tolérance définit l'étendue de la région à remplir.\",\n        PICTURE: './../../../assets/video/remplissage.mp4',\n    },\n];\n\nexport const TRANSFORMATIONS: Feature[] = [\n    {\n        NAME: 'Déplacement par rectangle',\n        DESCRIPTION:\n            \"Cette fonctionnalité permet de sélection une section en forme de rectangle de la surface de dessin et de déplacer cette sélection avec la souris à l'aide d'un glisser-déposer avec le bouton gauche de la souris. \",\n        PICTURE: './../../../assets/video/selection_rectangle.mp4',\n    },\n    {\n        NAME: 'Déplacement par ellipse',\n        DESCRIPTION:\n            \"Cette fonctionnalité permet de sélection une section en forme d'ellipse de la surface de dessin et de déplacer cette sélection avec la souris à l'aide d'un glisser-déposer avec le bouton gauche de la souris. \",\n        PICTURE: './../../../assets/video/selection_ellipse.mp4',\n    },\n    {\n        NAME: \"Rotation d'une sélection\",\n        DESCRIPTION: 'Cette fonctionnalité permet de pivoter une sélection sur son centre avec le roulette de la souris.',\n        PICTURE: './../../../assets/video/rotation_selection.mp4',\n    },\n    {\n        NAME: \"Redimensionnement d'une sélection\",\n        DESCRIPTION:\n            'Cette fonctionnalité permet de redimensionner la sélection sur sa hauteur, sa largeur ou les deux en même temps. Pour ce faire, la surface dispose de trois points de contrôles sur les extrémités de la surface. Il suffit de glisser et déposer avec le bouton gauche de la souris.',\n        PICTURE: './../../../assets/video/redimensionnement_selection.mp4',\n    },\n    {\n        NAME: 'Redimensionnement',\n        DESCRIPTION:\n            'Cette fonctionnalité permet de redimensionner la surface de dessin sur sa hauteur, sa largeur ou les deux en même temps. Pour ce faire, la surface dispose de trois points de contrôles sur les extrémités de la surface. Il suffit de glisser et déposer avec le bouton gauche de la souris.',\n        PICTURE: './../../../assets/video/redimensionnement.mp4',\n    },\n    {\n        NAME: 'Baguette magique',\n        DESCRIPTION: 'Cette fonctionnalité permet de sélectionner avec un clic gauche une région spécifique sur la surface de dessin.',\n        PICTURE: './../../../assets/video/baguette_magique.mp4',\n    },\n    {\n        NAME: 'Copier Coller Couper',\n        DESCRIPTION:\n            'Cet outil permet de copier une sélection et de la coller sur la surface de dessin. On peut aussi faire une sélection et la couper',\n        PICTURE: './../../../assets/video/copier-coller-couper.mp4',\n    },\n];\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Tool } from '@app/classes/tool';\nimport { CarouselComponent } from '@app/components/carousel/carousel.component';\nimport { ExportComponent } from '@app/components/export/export.component';\nimport { SavingComponent } from '@app/components/saving/saving.component';\nimport { SidebarElements, SIDEBAR_ELEMENTS } from '@app/ressources/global-variables/sidebar-elements';\nimport { TOOL_NAMES } from '@app/ressources/global-variables/tool-names';\nimport { DrawingService } from '@app/services/drawing/drawing.service';\nimport { HotkeyService } from '@app/services/hotkey/hotkey.service';\nimport { NewDrawingService } from '@app/services/new-drawing/new-drawing.service';\nimport { BrushService } from '@app/services/tools/brush.service';\nimport { CircleService } from '@app/services/tools/circle.service';\nimport { EraserService } from '@app/services/tools/eraser.service';\nimport { FillService } from '@app/services/tools/fill.service';\nimport { LineService } from '@app/services/tools/line.service';\nimport { PenService } from '@app/services/tools/pen.service';\nimport { PencilService } from '@app/services/tools/pencil.service';\nimport { PipetteService } from '@app/services/tools/pipette.service';\nimport { PolygonService } from '@app/services/tools/polygon.service';\nimport { CircleSelectionService } from '@app/services/tools/selection-services/circle-selection.service';\nimport { MagicWandService } from '@app/services/tools/selection-services/magic-wand.service';\nimport { SquareSelectionService } from '@app/services/tools/selection-services/square-selection.service';\nimport { SprayService } from '@app/services/tools/spray.service';\nimport { SquareService } from '@app/services/tools/square.service';\nimport { StampService } from '@app/services/tools/stamp.service';\nimport { TextService } from '@app/services/tools/text.service';\nimport { UndoRedoService } from '@app/services/undo-redo/undo-redo.service';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { takeUntil } from 'rxjs/operators';\n@Injectable({\n    providedIn: 'root',\n})\nexport class ToolSelectionService {\n    destroy$: Subject<boolean> = new Subject<boolean>();\n    sidebarElements: SidebarElements = SIDEBAR_ELEMENTS;\n    private tools: Map<string, Tool>;\n    currentTool: Tool;\n    currentToolName: Subject<string> = new Subject<string>();\n\n    constructor(\n        public dialog: MatDialog,\n        public hotkeyService: HotkeyService,\n        public pencilService: PencilService,\n        public penService: PenService,\n        public brushService: BrushService,\n        public sprayService: SprayService,\n        public squareService: SquareService,\n        public circleService: CircleService,\n        public lineService: LineService,\n        public fillService: FillService,\n        public eraserService: EraserService,\n        public squareSelectionService: SquareSelectionService,\n        public circleSelectionService: CircleSelectionService,\n        public polygonService: PolygonService,\n        public pipetteService: PipetteService,\n        public drawingService: DrawingService,\n        public newDrawingService: NewDrawingService,\n        public magicWandService: MagicWandService,\n        public undoRedoService: UndoRedoService,\n        public textService: TextService,\n        public stampService: StampService,\n    ) {\n        this.tools = new Map<string, Tool>([\n            [TOOL_NAMES.PENCIL_TOOL_NAME, pencilService],\n            [TOOL_NAMES.PEN_TOOL_NAME, penService],\n            [TOOL_NAMES.BRUSH_TOOL_NAME, brushService],\n            [TOOL_NAMES.SPRAY_TOOL_NAME, sprayService],\n            [TOOL_NAMES.SQUARE_TOOL_NAME, squareService],\n            [TOOL_NAMES.CIRCLE_TOOL_NAME, circleService],\n            [TOOL_NAMES.LINE_TOOL_NAME, lineService],\n            [TOOL_NAMES.FILL_TOOL_NAME, fillService],\n            [TOOL_NAMES.ERASER_TOOL_NAME, eraserService],\n            [TOOL_NAMES.SQUARE_SELECTION_TOOL_NAME, squareSelectionService],\n            [TOOL_NAMES.CIRCLE_SELECTION_TOOL_NAME, circleSelectionService],\n            [TOOL_NAMES.PIPETTE_TOOL_NAME, pipetteService],\n            [TOOL_NAMES.POLYGON_TOOL_NAME, polygonService],\n            [TOOL_NAMES.TEXT_TOOL_NAME, textService],\n            [TOOL_NAMES.STAMP_TOOL_NAME, stampService],\n            [TOOL_NAMES.MAGIC_WAND_TOOL_NAME, magicWandService],\n        ]);\n        this.currentTool = pencilService;\n        this.hotkeyService\n            .getKey()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((tool) => {\n                if (this.tools.has(tool)) {\n                    this.changeTool(tool);\n                } else {\n                    this.selectItem(tool);\n                }\n            });\n    }\n\n    changeTool(toolName: string): void {\n        const selectedTool = this.tools.get(toolName);\n        if (selectedTool) {\n            this.currentTool.reset();\n            this.currentTool = selectedTool;\n            this.currentTool.initialize();\n            this.currentTool.setCursor();\n            this.drawingService.clearCanvas(this.drawingService.previewCtx);\n            this.currentToolName.next(toolName);\n        }\n    }\n\n    selectItem(toolName: string): void {\n        switch (toolName) {\n            case this.sidebarElements.NEW_DRAWING_NAME:\n                this.newDrawingService.openWarningModal();\n                break;\n            case this.sidebarElements.CAROUSEL_NAME:\n                this.dialog.open(CarouselComponent);\n                break;\n            case this.sidebarElements.SAVE_SERVER_NAME:\n                this.dialog.open(SavingComponent);\n                break;\n            case this.sidebarElements.EXPORT_DRAWING_NAME:\n                this.dialog.open(ExportComponent);\n                break;\n            case this.sidebarElements.SELECT_ALL:\n                this.selectAll();\n                break;\n            case this.sidebarElements.UNDO:\n                this.undo();\n                break;\n            case this.sidebarElements.REDO:\n                this.redo();\n                break;\n        }\n    }\n\n    undo(): void {\n        this.undoRedoService.undo();\n    }\n\n    redo(): void {\n        this.undoRedoService.redo();\n    }\n\n    selectAll(): void {\n        this.changeTool(TOOL_NAMES.SQUARE_SELECTION_TOOL_NAME);\n        this.squareSelectionService.selectAll();\n    }\n\n    getCurrentToolName(): string {\n        return this.currentTool.name;\n    }\n\n    setCurrentToolCursor(): void {\n        this.currentTool.setCursor();\n    }\n\n    currentToolKeyUp(event: KeyboardEvent): void {\n        this.currentTool.onKeyUp(event);\n    }\n\n    currentToolKeyDown(event: KeyboardEvent): void {\n        this.currentTool.onKeyDown(event);\n    }\n\n    currentToolMouseMove(event: MouseEvent): void {\n        this.currentTool.onMouseMove(event);\n    }\n\n    currentToolMouseDown(event: MouseEvent): void {\n        this.currentTool.onMouseDown(event);\n    }\n\n    currentToolMouseUp(event: MouseEvent): void {\n        this.currentTool.onMouseUp(event);\n    }\n\n    currentToolMouseLeave(): void {\n        this.currentTool.onMouseLeave();\n    }\n\n    currentToolMouseEnter(event: MouseEvent): void {\n        this.currentTool.onMouseEnter(event);\n    }\n\n    currentToolWheelEvent(event: WheelEvent): void {\n        this.currentTool.onWheelEvent(event);\n    }\n\n    getCurrentTool(): Observable<string> {\n        return this.currentToolName.asObservable();\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}